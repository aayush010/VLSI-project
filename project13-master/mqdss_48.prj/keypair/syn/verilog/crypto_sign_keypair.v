// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="crypto_sign_keypair,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.910500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=2,HLS_SYN_FF=13592,HLS_SYN_LUT=64603,HLS_VERSION=2019_2}" *)

module crypto_sign_keypair (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pk_address0,
        pk_ce0,
        pk_we0,
        pk_d0,
        pk_q0,
        sk_address0,
        sk_ce0,
        sk_we0,
        sk_d0,
        sk_q0,
        DRBG_ctx_V_address0,
        DRBG_ctx_V_ce0,
        DRBG_ctx_V_we0,
        DRBG_ctx_V_d0,
        DRBG_ctx_V_q0,
        DRBG_ctx_V_address1,
        DRBG_ctx_V_ce1,
        DRBG_ctx_V_we1,
        DRBG_ctx_V_d1,
        DRBG_ctx_V_q1,
        DRBG_ctx_Key_address0,
        DRBG_ctx_Key_ce0,
        DRBG_ctx_Key_we0,
        DRBG_ctx_Key_d0,
        DRBG_ctx_Key_q0,
        DRBG_ctx_Key_address1,
        DRBG_ctx_Key_ce1,
        DRBG_ctx_Key_q1,
        DRBG_ctx_reseed_counter_i,
        DRBG_ctx_reseed_counter_o,
        DRBG_ctx_reseed_counter_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_pp0_stage0 = 19'd256;
parameter    ap_ST_fsm_state11 = 19'd512;
parameter    ap_ST_fsm_state12 = 19'd1024;
parameter    ap_ST_fsm_state13 = 19'd2048;
parameter    ap_ST_fsm_state14 = 19'd4096;
parameter    ap_ST_fsm_state15 = 19'd8192;
parameter    ap_ST_fsm_state16 = 19'd16384;
parameter    ap_ST_fsm_state17 = 19'd32768;
parameter    ap_ST_fsm_state18 = 19'd65536;
parameter    ap_ST_fsm_state19 = 19'd131072;
parameter    ap_ST_fsm_state20 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] pk_address0;
output   pk_ce0;
output   pk_we0;
output  [7:0] pk_d0;
input  [7:0] pk_q0;
output  [3:0] sk_address0;
output   sk_ce0;
output   sk_we0;
output  [7:0] sk_d0;
input  [7:0] sk_q0;
output  [3:0] DRBG_ctx_V_address0;
output   DRBG_ctx_V_ce0;
output   DRBG_ctx_V_we0;
output  [7:0] DRBG_ctx_V_d0;
input  [7:0] DRBG_ctx_V_q0;
output  [3:0] DRBG_ctx_V_address1;
output   DRBG_ctx_V_ce1;
output   DRBG_ctx_V_we1;
output  [7:0] DRBG_ctx_V_d1;
input  [7:0] DRBG_ctx_V_q1;
output  [4:0] DRBG_ctx_Key_address0;
output   DRBG_ctx_Key_ce0;
output   DRBG_ctx_Key_we0;
output  [7:0] DRBG_ctx_Key_d0;
input  [7:0] DRBG_ctx_Key_q0;
output  [4:0] DRBG_ctx_Key_address1;
output   DRBG_ctx_Key_ce1;
input  [7:0] DRBG_ctx_Key_q1;
input  [31:0] DRBG_ctx_reseed_counter_i;
output  [31:0] DRBG_ctx_reseed_counter_o;
output   DRBG_ctx_reseed_counter_o_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] pk_address0;
reg pk_ce0;
reg pk_we0;
reg[7:0] pk_d0;
reg[3:0] sk_address0;
reg sk_ce0;
reg sk_we0;
reg[31:0] DRBG_ctx_reseed_counter_o;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] loop_0_reg_252;
wire   [4:0] i_fu_377_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln405_fu_383_p1;
reg   [63:0] zext_ln405_reg_614;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln405_fu_388_p2;
wire   [5:0] i_12_fu_394_p2;
reg   [5:0] i_12_reg_623;
wire   [0:0] icmp_ln80_fu_400_p2;
reg   [0:0] icmp_ln80_reg_633;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] loop_fu_406_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln81_fu_412_p1;
reg   [63:0] zext_ln81_reg_642;
wire   [5:0] j_fu_428_p2;
reg   [5:0] j_reg_662;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_7_fu_434_p3;
reg   [0:0] tmp_7_reg_667;
wire   [0:0] icmp_ln131_fu_422_p2;
reg   [5:0] pk_addr_1_reg_671;
wire   [7:0] add_ln134_1_fu_461_p2;
reg   [7:0] add_ln134_1_reg_676;
wire   [31:0] d_fu_483_p2;
wire    ap_CS_fsm_state18;
wire   [7:0] trunc_ln138_1_fu_543_p1;
reg   [7:0] trunc_ln138_1_reg_691;
wire    ap_CS_fsm_state19;
reg   [5:0] pk_addr_2_reg_697;
wire   [31:0] d_1_fu_563_p2;
reg   [31:0] d_1_reg_707;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
reg   [4:0] s_address0;
reg    s_ce0;
reg    s_we0;
reg   [63:0] s_d0;
wire   [63:0] s_q0;
reg    s_ce1;
reg    s_we1;
wire   [63:0] s_q1;
reg   [7:0] d_i_address0;
reg    d_i_ce0;
reg    d_i_we0;
wire   [7:0] d_i_q0;
reg    d_i_ce1;
reg    d_i_we1;
reg   [15:0] F_address0;
reg    F_ce0;
reg    F_we0;
wire   [4:0] F_q0;
reg    F_ce1;
wire   [4:0] F_q1;
reg   [4:0] skbuf_address0;
reg    skbuf_ce0;
reg    skbuf_we0;
wire   [7:0] skbuf_q0;
reg   [5:0] sk_gf31_address0;
reg    sk_gf31_ce0;
reg    sk_gf31_we0;
wire   [4:0] sk_gf31_q0;
reg    sk_gf31_ce1;
wire   [4:0] sk_gf31_q1;
reg   [5:0] pk_gf31_address0;
reg    pk_gf31_ce0;
reg    pk_gf31_we0;
reg   [15:0] pk_gf31_d0;
wire   [15:0] pk_gf31_q0;
wire    grp_gf31_nrand_schar_fu_297_ap_start;
wire    grp_gf31_nrand_schar_fu_297_ap_done;
wire    grp_gf31_nrand_schar_fu_297_ap_idle;
wire    grp_gf31_nrand_schar_fu_297_ap_ready;
wire   [15:0] grp_gf31_nrand_schar_fu_297_out_r_address0;
wire    grp_gf31_nrand_schar_fu_297_out_r_ce0;
wire    grp_gf31_nrand_schar_fu_297_out_r_we0;
wire   [4:0] grp_gf31_nrand_schar_fu_297_out_r_d0;
wire   [5:0] grp_gf31_nrand_schar_fu_297_seed_address0;
wire    grp_gf31_nrand_schar_fu_297_seed_ce0;
wire    grp_gf31_nrand_fu_306_ap_start;
wire    grp_gf31_nrand_fu_306_ap_done;
wire    grp_gf31_nrand_fu_306_ap_idle;
wire    grp_gf31_nrand_fu_306_ap_ready;
wire   [5:0] grp_gf31_nrand_fu_306_out_r_address0;
wire    grp_gf31_nrand_fu_306_out_r_ce0;
wire    grp_gf31_nrand_fu_306_out_r_we0;
wire   [4:0] grp_gf31_nrand_fu_306_out_r_d0;
wire   [4:0] grp_gf31_nrand_fu_306_seed_address0;
wire    grp_gf31_nrand_fu_306_seed_ce0;
wire    grp_keccak_squeezeblocks_fu_314_ap_start;
wire    grp_keccak_squeezeblocks_fu_314_ap_done;
wire    grp_keccak_squeezeblocks_fu_314_ap_idle;
wire    grp_keccak_squeezeblocks_fu_314_ap_ready;
wire   [7:0] grp_keccak_squeezeblocks_fu_314_h_address0;
wire    grp_keccak_squeezeblocks_fu_314_h_ce0;
wire    grp_keccak_squeezeblocks_fu_314_h_we0;
wire   [7:0] grp_keccak_squeezeblocks_fu_314_h_d0;
wire   [7:0] grp_keccak_squeezeblocks_fu_314_h_address1;
wire    grp_keccak_squeezeblocks_fu_314_h_ce1;
wire    grp_keccak_squeezeblocks_fu_314_h_we1;
wire   [7:0] grp_keccak_squeezeblocks_fu_314_h_d1;
wire   [4:0] grp_keccak_squeezeblocks_fu_314_s_address0;
wire    grp_keccak_squeezeblocks_fu_314_s_ce0;
wire    grp_keccak_squeezeblocks_fu_314_s_we0;
wire   [63:0] grp_keccak_squeezeblocks_fu_314_s_d0;
wire   [4:0] grp_keccak_squeezeblocks_fu_314_s_address1;
wire    grp_keccak_squeezeblocks_fu_314_s_ce1;
wire    grp_keccak_squeezeblocks_fu_314_s_we1;
wire   [63:0] grp_keccak_squeezeblocks_fu_314_s_d1;
wire    grp_randombytes_fu_322_ap_start;
wire    grp_randombytes_fu_322_ap_done;
wire    grp_randombytes_fu_322_ap_idle;
wire    grp_randombytes_fu_322_ap_ready;
wire   [3:0] grp_randombytes_fu_322_x_address0;
wire    grp_randombytes_fu_322_x_ce0;
wire    grp_randombytes_fu_322_x_we0;
wire   [7:0] grp_randombytes_fu_322_x_d0;
wire   [3:0] grp_randombytes_fu_322_DRBG_ctx_V_address0;
wire    grp_randombytes_fu_322_DRBG_ctx_V_ce0;
wire    grp_randombytes_fu_322_DRBG_ctx_V_we0;
wire   [7:0] grp_randombytes_fu_322_DRBG_ctx_V_d0;
wire   [3:0] grp_randombytes_fu_322_DRBG_ctx_V_address1;
wire    grp_randombytes_fu_322_DRBG_ctx_V_ce1;
wire    grp_randombytes_fu_322_DRBG_ctx_V_we1;
wire   [7:0] grp_randombytes_fu_322_DRBG_ctx_V_d1;
wire   [4:0] grp_randombytes_fu_322_DRBG_ctx_Key_address0;
wire    grp_randombytes_fu_322_DRBG_ctx_Key_ce0;
wire    grp_randombytes_fu_322_DRBG_ctx_Key_we0;
wire   [7:0] grp_randombytes_fu_322_DRBG_ctx_Key_d0;
wire   [4:0] grp_randombytes_fu_322_DRBG_ctx_Key_address1;
wire    grp_randombytes_fu_322_DRBG_ctx_Key_ce1;
wire   [31:0] grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o;
wire    grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld;
wire    grp_MQ_fu_338_ap_start;
wire    grp_MQ_fu_338_ap_done;
wire    grp_MQ_fu_338_ap_idle;
wire    grp_MQ_fu_338_ap_ready;
wire   [5:0] grp_MQ_fu_338_fx_address0;
wire    grp_MQ_fu_338_fx_ce0;
wire    grp_MQ_fu_338_fx_we0;
wire   [15:0] grp_MQ_fu_338_fx_d0;
wire   [5:0] grp_MQ_fu_338_x_address0;
wire    grp_MQ_fu_338_x_ce0;
wire   [5:0] grp_MQ_fu_338_x_address1;
wire    grp_MQ_fu_338_x_ce1;
wire   [15:0] grp_MQ_fu_338_F_address0;
wire    grp_MQ_fu_338_F_ce0;
wire   [15:0] grp_MQ_fu_338_F_address1;
wire    grp_MQ_fu_338_F_ce1;
wire    grp_keccak_absorb_fu_345_ap_start;
wire    grp_keccak_absorb_fu_345_ap_done;
wire    grp_keccak_absorb_fu_345_ap_idle;
wire    grp_keccak_absorb_fu_345_ap_ready;
wire   [4:0] grp_keccak_absorb_fu_345_s_address0;
wire    grp_keccak_absorb_fu_345_s_ce0;
wire    grp_keccak_absorb_fu_345_s_we0;
wire   [63:0] grp_keccak_absorb_fu_345_s_d0;
wire   [3:0] grp_keccak_absorb_fu_345_m_address0;
wire    grp_keccak_absorb_fu_345_m_ce0;
wire   [5:0] grp_vgf31_unique_fu_352_out_r_address0;
wire    grp_vgf31_unique_fu_352_out_r_ce0;
wire   [15:0] grp_vgf31_unique_fu_352_out_r_d0;
wire    grp_vgf31_unique_fu_352_out_r_we0;
wire   [5:0] grp_vgf31_unique_fu_352_out_r_address1;
wire    grp_vgf31_unique_fu_352_out_r_ce1;
wire   [15:0] grp_vgf31_unique_fu_352_out_r_d1;
wire    grp_vgf31_unique_fu_352_out_r_we1;
wire    grp_vgf31_unique_fu_352_ap_start;
wire    grp_vgf31_unique_fu_352_ap_done;
wire    grp_vgf31_unique_fu_352_ap_ready;
wire    grp_vgf31_unique_fu_352_ap_idle;
reg    grp_vgf31_unique_fu_352_ap_continue;
wire   [5:0] grp_dataflow_parent_loop_1_fu_357_out_r_address0;
wire    grp_dataflow_parent_loop_1_fu_357_out_r_ce0;
wire   [7:0] grp_dataflow_parent_loop_1_fu_357_out_r_d0;
wire    grp_dataflow_parent_loop_1_fu_357_out_r_we0;
wire   [5:0] grp_dataflow_parent_loop_1_fu_357_out_r_address1;
wire    grp_dataflow_parent_loop_1_fu_357_out_r_ce1;
wire   [7:0] grp_dataflow_parent_loop_1_fu_357_out_r_d1;
wire    grp_dataflow_parent_loop_1_fu_357_out_r_we1;
wire    grp_dataflow_parent_loop_1_fu_357_ap_start;
wire    grp_dataflow_parent_loop_1_fu_357_ap_done;
wire    grp_dataflow_parent_loop_1_fu_357_ap_ready;
wire    grp_dataflow_parent_loop_1_fu_357_ap_idle;
reg    grp_dataflow_parent_loop_1_fu_357_ap_continue;
reg   [4:0] i_0_i_reg_230;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln396_fu_371_p2;
reg   [5:0] i_1_i_reg_241;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [5:0] j_1_i_reg_263;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state16;
wire    ap_sync_grp_vgf31_unique_fu_352_ap_ready;
wire    ap_sync_grp_vgf31_unique_fu_352_ap_done;
reg    ap_block_state16_on_subcall_done;
reg   [31:0] d_0_i_reg_275;
reg   [31:0] d_1_i_reg_287;
reg    grp_gf31_nrand_schar_fu_297_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_gf31_nrand_fu_306_ap_start_reg;
reg    grp_keccak_squeezeblocks_fu_314_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_randombytes_fu_322_ap_start_reg;
reg    grp_MQ_fu_338_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_keccak_absorb_fu_345_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_vgf31_unique_fu_352_ap_start_reg;
wire    ap_CS_fsm_state15;
reg    ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready;
reg    ap_sync_reg_grp_vgf31_unique_fu_352_ap_done;
reg    grp_dataflow_parent_loop_1_fu_357_ap_start_reg;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done;
reg    ap_block_state14_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done;
wire   [63:0] zext_ln396_fu_366_p1;
wire    ap_block_pp0_stage0;
wire  signed [63:0] sext_ln134_fu_452_p1;
wire   [63:0] zext_ln134_fu_467_p1;
wire  signed [63:0] sext_ln138_fu_553_p1;
wire   [63:0] zext_ln138_fu_558_p1;
reg   [31:0] i_13_fu_132;
wire   [31:0] i_14_fu_472_p2;
wire   [7:0] or_ln134_fu_532_p2;
wire   [7:0] or_ln138_fu_599_p2;
wire   [6:0] trunc_ln134_fu_442_p1;
wire   [6:0] add_ln134_fu_446_p2;
wire   [7:0] trunc_ln134_1_fu_457_p1;
wire   [7:0] shl_ln134_fu_489_p2;
wire   [31:0] zext_ln134_1_fu_500_p1;
wire   [31:0] sub_ln134_fu_504_p2;
wire   [31:0] lshr_ln134_fu_510_p2;
wire   [7:0] trunc_ln134_2_fu_516_p1;
wire   [7:0] xor_ln134_fu_520_p2;
wire   [7:0] and_ln134_1_fu_526_p2;
wire   [7:0] and_ln134_fu_494_p2;
wire   [6:0] trunc_ln138_fu_539_p1;
wire   [6:0] add_ln138_fu_547_p2;
wire   [7:0] shl_ln138_fu_569_p2;
wire   [7:0] xor_ln138_fu_574_p2;
wire   [4:0] trunc_ln138_2_fu_586_p1;
wire   [7:0] zext_ln138_1_fu_590_p1;
wire   [7:0] shl_ln138_1_fu_594_p2;
wire   [7:0] and_ln138_fu_580_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_block_state12_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_gf31_nrand_schar_fu_297_ap_start_reg = 1'b0;
#0 grp_gf31_nrand_fu_306_ap_start_reg = 1'b0;
#0 grp_keccak_squeezeblocks_fu_314_ap_start_reg = 1'b0;
#0 grp_randombytes_fu_322_ap_start_reg = 1'b0;
#0 grp_MQ_fu_338_ap_start_reg = 1'b0;
#0 grp_keccak_absorb_fu_345_ap_start_reg = 1'b0;
#0 grp_vgf31_unique_fu_352_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready = 1'b0;
#0 ap_sync_reg_grp_vgf31_unique_fu_352_ap_done = 1'b0;
#0 grp_dataflow_parent_loop_1_fu_357_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done = 1'b0;
end

gf31_nrand_schar_g8j #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_address0),
    .ce0(s_ce0),
    .we0(s_we0),
    .d0(s_d0),
    .q0(s_q0),
    .address1(grp_keccak_squeezeblocks_fu_314_s_address1),
    .ce1(s_ce1),
    .we1(s_we1),
    .d1(grp_keccak_squeezeblocks_fu_314_s_d1),
    .q1(s_q1)
);

gf31_nrand_schar_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 136 ),
    .AddressWidth( 8 ))
d_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(d_i_address0),
    .ce0(d_i_ce0),
    .we0(d_i_we0),
    .d0(grp_keccak_squeezeblocks_fu_314_h_d0),
    .q0(d_i_q0),
    .address1(grp_keccak_squeezeblocks_fu_314_h_address1),
    .ce1(d_i_ce1),
    .we1(d_i_we1),
    .d1(grp_keccak_squeezeblocks_fu_314_h_d1)
);

crypto_sign_keypaocq #(
    .DataWidth( 5 ),
    .AddressRange( 58752 ),
    .AddressWidth( 16 ))
F_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(F_address0),
    .ce0(F_ce0),
    .we0(F_we0),
    .d0(grp_gf31_nrand_schar_fu_297_out_r_d0),
    .q0(F_q0),
    .address1(grp_MQ_fu_338_F_address1),
    .ce1(F_ce1),
    .q1(F_q1)
);

crypto_sign_keypapcA #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
skbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(skbuf_address0),
    .ce0(skbuf_ce0),
    .we0(skbuf_we0),
    .d0(d_i_q0),
    .q0(skbuf_q0)
);

crypto_sign_keypaqcK #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
sk_gf31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sk_gf31_address0),
    .ce0(sk_gf31_ce0),
    .we0(sk_gf31_we0),
    .d0(grp_gf31_nrand_fu_306_out_r_d0),
    .q0(sk_gf31_q0),
    .address1(grp_MQ_fu_338_x_address1),
    .ce1(sk_gf31_ce1),
    .q1(sk_gf31_q1)
);

crypto_sign_keyparcU #(
    .DataWidth( 16 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
pk_gf31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pk_gf31_address0),
    .ce0(pk_gf31_ce0),
    .we0(pk_gf31_we0),
    .d0(pk_gf31_d0),
    .q0(pk_gf31_q0)
);

gf31_nrand_schar grp_gf31_nrand_schar_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gf31_nrand_schar_fu_297_ap_start),
    .ap_done(grp_gf31_nrand_schar_fu_297_ap_done),
    .ap_idle(grp_gf31_nrand_schar_fu_297_ap_idle),
    .ap_ready(grp_gf31_nrand_schar_fu_297_ap_ready),
    .out_r_address0(grp_gf31_nrand_schar_fu_297_out_r_address0),
    .out_r_ce0(grp_gf31_nrand_schar_fu_297_out_r_ce0),
    .out_r_we0(grp_gf31_nrand_schar_fu_297_out_r_we0),
    .out_r_d0(grp_gf31_nrand_schar_fu_297_out_r_d0),
    .seed_address0(grp_gf31_nrand_schar_fu_297_seed_address0),
    .seed_ce0(grp_gf31_nrand_schar_fu_297_seed_ce0),
    .seed_q0(pk_q0)
);

gf31_nrand grp_gf31_nrand_fu_306(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gf31_nrand_fu_306_ap_start),
    .ap_done(grp_gf31_nrand_fu_306_ap_done),
    .ap_idle(grp_gf31_nrand_fu_306_ap_idle),
    .ap_ready(grp_gf31_nrand_fu_306_ap_ready),
    .out_r_address0(grp_gf31_nrand_fu_306_out_r_address0),
    .out_r_ce0(grp_gf31_nrand_fu_306_out_r_ce0),
    .out_r_we0(grp_gf31_nrand_fu_306_out_r_we0),
    .out_r_d0(grp_gf31_nrand_fu_306_out_r_d0),
    .seed_address0(grp_gf31_nrand_fu_306_seed_address0),
    .seed_ce0(grp_gf31_nrand_fu_306_seed_ce0),
    .seed_q0(skbuf_q0)
);

keccak_squeezeblocks grp_keccak_squeezeblocks_fu_314(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_squeezeblocks_fu_314_ap_start),
    .ap_done(grp_keccak_squeezeblocks_fu_314_ap_done),
    .ap_idle(grp_keccak_squeezeblocks_fu_314_ap_idle),
    .ap_ready(grp_keccak_squeezeblocks_fu_314_ap_ready),
    .h_address0(grp_keccak_squeezeblocks_fu_314_h_address0),
    .h_ce0(grp_keccak_squeezeblocks_fu_314_h_ce0),
    .h_we0(grp_keccak_squeezeblocks_fu_314_h_we0),
    .h_d0(grp_keccak_squeezeblocks_fu_314_h_d0),
    .h_address1(grp_keccak_squeezeblocks_fu_314_h_address1),
    .h_ce1(grp_keccak_squeezeblocks_fu_314_h_ce1),
    .h_we1(grp_keccak_squeezeblocks_fu_314_h_we1),
    .h_d1(grp_keccak_squeezeblocks_fu_314_h_d1),
    .s_address0(grp_keccak_squeezeblocks_fu_314_s_address0),
    .s_ce0(grp_keccak_squeezeblocks_fu_314_s_ce0),
    .s_we0(grp_keccak_squeezeblocks_fu_314_s_we0),
    .s_d0(grp_keccak_squeezeblocks_fu_314_s_d0),
    .s_q0(s_q0),
    .s_address1(grp_keccak_squeezeblocks_fu_314_s_address1),
    .s_ce1(grp_keccak_squeezeblocks_fu_314_s_ce1),
    .s_we1(grp_keccak_squeezeblocks_fu_314_s_we1),
    .s_d1(grp_keccak_squeezeblocks_fu_314_s_d1),
    .s_q1(s_q1)
);

randombytes grp_randombytes_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_randombytes_fu_322_ap_start),
    .ap_done(grp_randombytes_fu_322_ap_done),
    .ap_idle(grp_randombytes_fu_322_ap_idle),
    .ap_ready(grp_randombytes_fu_322_ap_ready),
    .x_address0(grp_randombytes_fu_322_x_address0),
    .x_ce0(grp_randombytes_fu_322_x_ce0),
    .x_we0(grp_randombytes_fu_322_x_we0),
    .x_d0(grp_randombytes_fu_322_x_d0),
    .DRBG_ctx_V_address0(grp_randombytes_fu_322_DRBG_ctx_V_address0),
    .DRBG_ctx_V_ce0(grp_randombytes_fu_322_DRBG_ctx_V_ce0),
    .DRBG_ctx_V_we0(grp_randombytes_fu_322_DRBG_ctx_V_we0),
    .DRBG_ctx_V_d0(grp_randombytes_fu_322_DRBG_ctx_V_d0),
    .DRBG_ctx_V_q0(DRBG_ctx_V_q0),
    .DRBG_ctx_V_address1(grp_randombytes_fu_322_DRBG_ctx_V_address1),
    .DRBG_ctx_V_ce1(grp_randombytes_fu_322_DRBG_ctx_V_ce1),
    .DRBG_ctx_V_we1(grp_randombytes_fu_322_DRBG_ctx_V_we1),
    .DRBG_ctx_V_d1(grp_randombytes_fu_322_DRBG_ctx_V_d1),
    .DRBG_ctx_V_q1(DRBG_ctx_V_q1),
    .DRBG_ctx_Key_address0(grp_randombytes_fu_322_DRBG_ctx_Key_address0),
    .DRBG_ctx_Key_ce0(grp_randombytes_fu_322_DRBG_ctx_Key_ce0),
    .DRBG_ctx_Key_we0(grp_randombytes_fu_322_DRBG_ctx_Key_we0),
    .DRBG_ctx_Key_d0(grp_randombytes_fu_322_DRBG_ctx_Key_d0),
    .DRBG_ctx_Key_q0(DRBG_ctx_Key_q0),
    .DRBG_ctx_Key_address1(grp_randombytes_fu_322_DRBG_ctx_Key_address1),
    .DRBG_ctx_Key_ce1(grp_randombytes_fu_322_DRBG_ctx_Key_ce1),
    .DRBG_ctx_Key_q1(DRBG_ctx_Key_q1),
    .DRBG_ctx_reseed_counter_i(DRBG_ctx_reseed_counter_i),
    .DRBG_ctx_reseed_counter_o(grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o),
    .DRBG_ctx_reseed_counter_o_ap_vld(grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld)
);

MQ grp_MQ_fu_338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MQ_fu_338_ap_start),
    .ap_done(grp_MQ_fu_338_ap_done),
    .ap_idle(grp_MQ_fu_338_ap_idle),
    .ap_ready(grp_MQ_fu_338_ap_ready),
    .fx_address0(grp_MQ_fu_338_fx_address0),
    .fx_ce0(grp_MQ_fu_338_fx_ce0),
    .fx_we0(grp_MQ_fu_338_fx_we0),
    .fx_d0(grp_MQ_fu_338_fx_d0),
    .x_address0(grp_MQ_fu_338_x_address0),
    .x_ce0(grp_MQ_fu_338_x_ce0),
    .x_q0(sk_gf31_q0),
    .x_address1(grp_MQ_fu_338_x_address1),
    .x_ce1(grp_MQ_fu_338_x_ce1),
    .x_q1(sk_gf31_q1),
    .F_address0(grp_MQ_fu_338_F_address0),
    .F_ce0(grp_MQ_fu_338_F_ce0),
    .F_q0(F_q0),
    .F_address1(grp_MQ_fu_338_F_address1),
    .F_ce1(grp_MQ_fu_338_F_ce1),
    .F_q1(F_q1)
);

keccak_absorb grp_keccak_absorb_fu_345(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_fu_345_ap_start),
    .ap_done(grp_keccak_absorb_fu_345_ap_done),
    .ap_idle(grp_keccak_absorb_fu_345_ap_idle),
    .ap_ready(grp_keccak_absorb_fu_345_ap_ready),
    .s_address0(grp_keccak_absorb_fu_345_s_address0),
    .s_ce0(grp_keccak_absorb_fu_345_s_ce0),
    .s_we0(grp_keccak_absorb_fu_345_s_we0),
    .s_d0(grp_keccak_absorb_fu_345_s_d0),
    .s_q0(s_q0),
    .m_address0(grp_keccak_absorb_fu_345_m_address0),
    .m_ce0(grp_keccak_absorb_fu_345_m_ce0),
    .m_q0(sk_q0)
);

vgf31_unique grp_vgf31_unique_fu_352(
    .out_r_address0(grp_vgf31_unique_fu_352_out_r_address0),
    .out_r_ce0(grp_vgf31_unique_fu_352_out_r_ce0),
    .out_r_d0(grp_vgf31_unique_fu_352_out_r_d0),
    .out_r_q0(pk_gf31_q0),
    .out_r_we0(grp_vgf31_unique_fu_352_out_r_we0),
    .out_r_address1(grp_vgf31_unique_fu_352_out_r_address1),
    .out_r_ce1(grp_vgf31_unique_fu_352_out_r_ce1),
    .out_r_d1(grp_vgf31_unique_fu_352_out_r_d1),
    .out_r_q1(16'd0),
    .out_r_we1(grp_vgf31_unique_fu_352_out_r_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vgf31_unique_fu_352_ap_start),
    .ap_done(grp_vgf31_unique_fu_352_ap_done),
    .ap_ready(grp_vgf31_unique_fu_352_ap_ready),
    .ap_idle(grp_vgf31_unique_fu_352_ap_idle),
    .ap_continue(grp_vgf31_unique_fu_352_ap_continue)
);

dataflow_parent_loop_1 grp_dataflow_parent_loop_1_fu_357(
    .out_r_address0(grp_dataflow_parent_loop_1_fu_357_out_r_address0),
    .out_r_ce0(grp_dataflow_parent_loop_1_fu_357_out_r_ce0),
    .out_r_d0(grp_dataflow_parent_loop_1_fu_357_out_r_d0),
    .out_r_q0(8'd0),
    .out_r_we0(grp_dataflow_parent_loop_1_fu_357_out_r_we0),
    .out_r_address1(grp_dataflow_parent_loop_1_fu_357_out_r_address1),
    .out_r_ce1(grp_dataflow_parent_loop_1_fu_357_out_r_ce1),
    .out_r_d1(grp_dataflow_parent_loop_1_fu_357_out_r_d1),
    .out_r_q1(8'd0),
    .out_r_we1(grp_dataflow_parent_loop_1_fu_357_out_r_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dataflow_parent_loop_1_fu_357_ap_start),
    .ap_done(grp_dataflow_parent_loop_1_fu_357_ap_done),
    .ap_ready(grp_dataflow_parent_loop_1_fu_357_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_1_fu_357_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_1_fu_357_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln405_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln405_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_357_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_357_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_vgf31_unique_fu_352_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_done <= 1'b0;
        end else if ((grp_vgf31_unique_fu_352_ap_done == 1'b1)) begin
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready <= 1'b0;
        end else if ((grp_vgf31_unique_fu_352_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MQ_fu_338_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_MQ_fu_338_ap_start_reg <= 1'b1;
        end else if ((grp_MQ_fu_338_ap_ready == 1'b1)) begin
            grp_MQ_fu_338_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_1_fu_357_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) | ((ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state14)))) begin
            grp_dataflow_parent_loop_1_fu_357_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_1_fu_357_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_1_fu_357_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_gf31_nrand_fu_306_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_gf31_nrand_fu_306_ap_start_reg <= 1'b1;
        end else if ((grp_gf31_nrand_fu_306_ap_ready == 1'b1)) begin
            grp_gf31_nrand_fu_306_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_gf31_nrand_schar_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_gf31_nrand_schar_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_gf31_nrand_schar_fu_297_ap_ready == 1'b1)) begin
            grp_gf31_nrand_schar_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_fu_345_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd1))) begin
            grp_keccak_absorb_fu_345_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_fu_345_ap_ready == 1'b1)) begin
            grp_keccak_absorb_fu_345_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_squeezeblocks_fu_314_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_keccak_squeezeblocks_fu_314_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_squeezeblocks_fu_314_ap_ready == 1'b1)) begin
            grp_keccak_squeezeblocks_fu_314_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_randombytes_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_randombytes_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_randombytes_fu_322_ap_ready == 1'b1)) begin
            grp_randombytes_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vgf31_unique_fu_352_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | ((ap_sync_grp_vgf31_unique_fu_352_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state16)))) begin
            grp_vgf31_unique_fu_352_ap_start_reg <= 1'b1;
        end else if ((grp_vgf31_unique_fu_352_ap_ready == 1'b1)) begin
            grp_vgf31_unique_fu_352_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        d_0_i_reg_275 <= 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        d_0_i_reg_275 <= d_1_reg_707;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln131_fu_422_p2 == 1'd0) & (tmp_7_fu_434_p3 == 1'd0))) begin
        d_1_i_reg_287 <= d_0_i_reg_275;
    end else if (((1'b1 == ap_CS_fsm_state18) & (tmp_7_reg_667 == 1'd1))) begin
        d_1_i_reg_287 <= d_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
        i_0_i_reg_230 <= i_fu_377_p2;
    end else if (((grp_randombytes_fu_322_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_reg_230 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_7_fu_434_p3 == 1'd1) & (icmp_ln131_fu_422_p2 == 1'd0))) begin
        i_13_fu_132 <= i_14_fu_472_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_13_fu_132 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_i_reg_241 <= i_12_reg_623;
    end else if (((grp_keccak_squeezeblocks_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_i_reg_241 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        j_1_i_reg_263 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        j_1_i_reg_263 <= j_reg_662;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln405_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        loop_0_reg_252 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln80_fu_400_p2 == 1'd0))) begin
        loop_0_reg_252 <= loop_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_7_fu_434_p3 == 1'd1) & (icmp_ln131_fu_422_p2 == 1'd0))) begin
        add_ln134_1_reg_676 <= add_ln134_1_fu_461_p2;
        pk_addr_1_reg_671 <= sext_ln134_fu_452_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        d_1_reg_707 <= d_1_fu_563_p2;
        pk_addr_2_reg_697 <= sext_ln138_fu_553_p1;
        trunc_ln138_1_reg_691 <= trunc_ln138_1_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_12_reg_623 <= i_12_fu_394_p2;
        zext_ln405_reg_614[5 : 0] <= zext_ln405_fu_383_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln80_reg_633 <= icmp_ln80_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_reg_662 <= j_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln131_fu_422_p2 == 1'd0))) begin
        tmp_7_reg_667 <= d_0_i_reg_275[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln80_fu_400_p2 == 1'd0))) begin
        zext_ln81_reg_642[4 : 0] <= zext_ln81_fu_412_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld == 1'b1))) begin
        DRBG_ctx_reseed_counter_o = grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o;
    end else begin
        DRBG_ctx_reseed_counter_o = DRBG_ctx_reseed_counter_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        F_address0 = grp_MQ_fu_338_F_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        F_address0 = grp_gf31_nrand_schar_fu_297_out_r_address0;
    end else begin
        F_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        F_ce0 = grp_MQ_fu_338_F_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        F_ce0 = grp_gf31_nrand_schar_fu_297_out_r_ce0;
    end else begin
        F_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        F_ce1 = grp_MQ_fu_338_F_ce1;
    end else begin
        F_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        F_we0 = grp_gf31_nrand_schar_fu_297_out_r_we0;
    end else begin
        F_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln80_fu_400_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln131_fu_422_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln131_fu_422_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address0 = zext_ln405_fu_383_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address0 = grp_keccak_squeezeblocks_fu_314_h_address0;
    end else begin
        d_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_ce0 = grp_keccak_squeezeblocks_fu_314_h_ce0;
    end else begin
        d_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_ce1 = grp_keccak_squeezeblocks_fu_314_h_ce1;
    end else begin
        d_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_we0 = grp_keccak_squeezeblocks_fu_314_h_we0;
    end else begin
        d_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_we1 = grp_keccak_squeezeblocks_fu_314_h_we1;
    end else begin
        d_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        grp_dataflow_parent_loop_1_fu_357_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_1_fu_357_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        grp_vgf31_unique_fu_352_ap_continue = 1'b1;
    end else begin
        grp_vgf31_unique_fu_352_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_address0 = pk_addr_2_reg_697;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_address0 = sext_ln138_fu_553_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_address0 = pk_addr_1_reg_671;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_address0 = sext_ln134_fu_452_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pk_address0 = zext_ln81_reg_642;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_address0 = grp_dataflow_parent_loop_1_fu_357_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_address0 = grp_gf31_nrand_schar_fu_297_seed_address0;
    end else begin
        pk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        pk_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_ce0 = grp_dataflow_parent_loop_1_fu_357_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_ce0 = grp_gf31_nrand_schar_fu_297_seed_ce0;
    end else begin
        pk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_d0 = or_ln138_fu_599_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_d0 = or_ln134_fu_532_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pk_d0 = skbuf_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_d0 = grp_dataflow_parent_loop_1_fu_357_out_r_d0;
    end else begin
        pk_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_gf31_address0 = zext_ln138_fu_558_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_gf31_address0 = zext_ln134_fu_467_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_gf31_address0 = grp_vgf31_unique_fu_352_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_gf31_address0 = grp_MQ_fu_338_fx_address0;
    end else begin
        pk_gf31_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        pk_gf31_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_gf31_ce0 = grp_vgf31_unique_fu_352_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_gf31_ce0 = grp_MQ_fu_338_fx_ce0;
    end else begin
        pk_gf31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_gf31_d0 = grp_vgf31_unique_fu_352_out_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_gf31_d0 = grp_MQ_fu_338_fx_d0;
    end else begin
        pk_gf31_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_gf31_we0 = grp_vgf31_unique_fu_352_out_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_gf31_we0 = grp_MQ_fu_338_fx_we0;
    end else begin
        pk_gf31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state18) & (tmp_7_reg_667 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln80_reg_633 == 1'd0)))) begin
        pk_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_we0 = grp_dataflow_parent_loop_1_fu_357_out_r_we0;
    end else begin
        pk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
        s_address0 = zext_ln396_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = grp_keccak_absorb_fu_345_s_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = grp_keccak_squeezeblocks_fu_314_s_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_ce0 = grp_keccak_absorb_fu_345_s_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_ce0 = grp_keccak_squeezeblocks_fu_314_s_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s_ce1 = grp_keccak_squeezeblocks_fu_314_s_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
        s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_d0 = grp_keccak_absorb_fu_345_s_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_d0 = grp_keccak_squeezeblocks_fu_314_s_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
        s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_we0 = grp_keccak_absorb_fu_345_s_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_we0 = grp_keccak_squeezeblocks_fu_314_s_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s_we1 = grp_keccak_squeezeblocks_fu_314_s_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sk_address0 = grp_keccak_absorb_fu_345_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_address0 = grp_randombytes_fu_322_x_address0;
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sk_ce0 = grp_keccak_absorb_fu_345_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_ce0 = grp_randombytes_fu_322_x_ce0;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sk_gf31_address0 = grp_MQ_fu_338_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_gf31_address0 = grp_gf31_nrand_fu_306_out_r_address0;
    end else begin
        sk_gf31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sk_gf31_ce0 = grp_MQ_fu_338_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_gf31_ce0 = grp_gf31_nrand_fu_306_out_r_ce0;
    end else begin
        sk_gf31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sk_gf31_ce1 = grp_MQ_fu_338_x_ce1;
    end else begin
        sk_gf31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_gf31_we0 = grp_gf31_nrand_fu_306_out_r_we0;
    end else begin
        sk_gf31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_we0 = grp_randombytes_fu_322_x_we0;
    end else begin
        sk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        skbuf_address0 = zext_ln81_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        skbuf_address0 = zext_ln405_reg_614;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        skbuf_address0 = grp_gf31_nrand_fu_306_seed_address0;
    end else begin
        skbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        skbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        skbuf_ce0 = grp_gf31_nrand_fu_306_seed_ce0;
    end else begin
        skbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        skbuf_we0 = 1'b1;
    end else begin
        skbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_randombytes_fu_322_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln396_fu_371_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_keccak_absorb_fu_345_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_keccak_squeezeblocks_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln405_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln80_fu_400_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln80_fu_400_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln131_fu_422_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DRBG_ctx_Key_address0 = grp_randombytes_fu_322_DRBG_ctx_Key_address0;

assign DRBG_ctx_Key_address1 = grp_randombytes_fu_322_DRBG_ctx_Key_address1;

assign DRBG_ctx_Key_ce0 = grp_randombytes_fu_322_DRBG_ctx_Key_ce0;

assign DRBG_ctx_Key_ce1 = grp_randombytes_fu_322_DRBG_ctx_Key_ce1;

assign DRBG_ctx_Key_d0 = grp_randombytes_fu_322_DRBG_ctx_Key_d0;

assign DRBG_ctx_Key_we0 = grp_randombytes_fu_322_DRBG_ctx_Key_we0;

assign DRBG_ctx_V_address0 = grp_randombytes_fu_322_DRBG_ctx_V_address0;

assign DRBG_ctx_V_address1 = grp_randombytes_fu_322_DRBG_ctx_V_address1;

assign DRBG_ctx_V_ce0 = grp_randombytes_fu_322_DRBG_ctx_V_ce0;

assign DRBG_ctx_V_ce1 = grp_randombytes_fu_322_DRBG_ctx_V_ce1;

assign DRBG_ctx_V_d0 = grp_randombytes_fu_322_DRBG_ctx_V_d0;

assign DRBG_ctx_V_d1 = grp_randombytes_fu_322_DRBG_ctx_V_d1;

assign DRBG_ctx_V_we0 = grp_randombytes_fu_322_DRBG_ctx_V_we0;

assign DRBG_ctx_V_we1 = grp_randombytes_fu_322_DRBG_ctx_V_we1;

assign DRBG_ctx_reseed_counter_o_ap_vld = grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld;

assign add_ln134_1_fu_461_p2 = (8'd5 + trunc_ln134_1_fu_457_p1);

assign add_ln134_fu_446_p2 = (7'd16 + trunc_ln134_fu_442_p1);

assign add_ln138_fu_547_p2 = (7'd16 + trunc_ln138_fu_539_p1);

assign and_ln134_1_fu_526_p2 = (xor_ln134_fu_520_p2 & trunc_ln134_2_fu_516_p1);

assign and_ln134_fu_494_p2 = (shl_ln134_fu_489_p2 & pk_q0);

assign and_ln138_fu_580_p2 = (xor_ln138_fu_574_p2 & pk_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_gf31_nrand_fu_306_ap_done == 1'b0) | (grp_gf31_nrand_schar_fu_297_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = (((ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready & ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done) == 1'b0) | (grp_MQ_fu_338_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state16_on_subcall_done = ((ap_sync_grp_vgf31_unique_fu_352_ap_ready & ap_sync_grp_vgf31_unique_fu_352_ap_done) == 1'b0);
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = 32'd0;

assign ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done = (grp_dataflow_parent_loop_1_fu_357_ap_done | ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done);

assign ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready = (grp_dataflow_parent_loop_1_fu_357_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready);

assign ap_sync_grp_vgf31_unique_fu_352_ap_done = (grp_vgf31_unique_fu_352_ap_done | ap_sync_reg_grp_vgf31_unique_fu_352_ap_done);

assign ap_sync_grp_vgf31_unique_fu_352_ap_ready = (grp_vgf31_unique_fu_352_ap_ready | ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready);

assign d_1_fu_563_p2 = ($signed(32'd4294967291) + $signed(d_1_i_reg_287));

assign d_fu_483_p2 = (32'd8 + d_0_i_reg_275);

assign grp_MQ_fu_338_ap_start = grp_MQ_fu_338_ap_start_reg;

assign grp_dataflow_parent_loop_1_fu_357_ap_start = grp_dataflow_parent_loop_1_fu_357_ap_start_reg;

assign grp_gf31_nrand_fu_306_ap_start = grp_gf31_nrand_fu_306_ap_start_reg;

assign grp_gf31_nrand_schar_fu_297_ap_start = grp_gf31_nrand_schar_fu_297_ap_start_reg;

assign grp_keccak_absorb_fu_345_ap_start = grp_keccak_absorb_fu_345_ap_start_reg;

assign grp_keccak_squeezeblocks_fu_314_ap_start = grp_keccak_squeezeblocks_fu_314_ap_start_reg;

assign grp_randombytes_fu_322_ap_start = grp_randombytes_fu_322_ap_start_reg;

assign grp_vgf31_unique_fu_352_ap_start = grp_vgf31_unique_fu_352_ap_start_reg;

assign i_12_fu_394_p2 = (i_1_i_reg_241 + 6'd1);

assign i_14_fu_472_p2 = (32'd1 + i_13_fu_132);

assign i_fu_377_p2 = (i_0_i_reg_230 + 5'd1);

assign icmp_ln131_fu_422_p2 = ((j_1_i_reg_263 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln396_fu_371_p2 = ((i_0_i_reg_230 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln405_fu_388_p2 = ((i_1_i_reg_241 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_400_p2 = ((loop_0_reg_252 == 5'd16) ? 1'b1 : 1'b0);

assign j_fu_428_p2 = (j_1_i_reg_263 + 6'd1);

assign loop_fu_406_p2 = (loop_0_reg_252 + 5'd1);

assign lshr_ln134_fu_510_p2 = zext_ln134_1_fu_500_p1 >> sub_ln134_fu_504_p2;

assign or_ln134_fu_532_p2 = (and_ln134_fu_494_p2 | and_ln134_1_fu_526_p2);

assign or_ln138_fu_599_p2 = (shl_ln138_1_fu_594_p2 | and_ln138_fu_580_p2);

assign sext_ln134_fu_452_p1 = $signed(add_ln134_fu_446_p2);

assign sext_ln138_fu_553_p1 = $signed(add_ln138_fu_547_p2);

assign shl_ln134_fu_489_p2 = 8'd255 << add_ln134_1_reg_676;

assign shl_ln138_1_fu_594_p2 = zext_ln138_1_fu_590_p1 << trunc_ln138_1_reg_691;

assign shl_ln138_fu_569_p2 = 8'd31 << trunc_ln138_1_reg_691;

assign sk_d0 = grp_randombytes_fu_322_x_d0;

assign sub_ln134_fu_504_p2 = (32'd0 - d_0_i_reg_275);

assign tmp_7_fu_434_p3 = d_0_i_reg_275[32'd31];

assign trunc_ln134_1_fu_457_p1 = d_0_i_reg_275[7:0];

assign trunc_ln134_2_fu_516_p1 = lshr_ln134_fu_510_p2[7:0];

assign trunc_ln134_fu_442_p1 = i_13_fu_132[6:0];

assign trunc_ln138_1_fu_543_p1 = d_1_i_reg_287[7:0];

assign trunc_ln138_2_fu_586_p1 = pk_gf31_q0[4:0];

assign trunc_ln138_fu_539_p1 = i_13_fu_132[6:0];

assign xor_ln134_fu_520_p2 = (shl_ln134_fu_489_p2 ^ 8'd255);

assign xor_ln138_fu_574_p2 = (shl_ln138_fu_569_p2 ^ 8'd255);

assign zext_ln134_1_fu_500_p1 = pk_gf31_q0;

assign zext_ln134_fu_467_p1 = j_1_i_reg_263;

assign zext_ln138_1_fu_590_p1 = trunc_ln138_2_fu_586_p1;

assign zext_ln138_fu_558_p1 = j_1_i_reg_263;

assign zext_ln396_fu_366_p1 = i_0_i_reg_230;

assign zext_ln405_fu_383_p1 = i_1_i_reg_241;

assign zext_ln81_fu_412_p1 = loop_0_reg_252;

always @ (posedge ap_clk) begin
    zext_ln405_reg_614[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_642[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //crypto_sign_keypair
