// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<8> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<8> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<4> > i_0_reg_358;
    sc_signal< sc_lv<8> > reg_381;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > reg_385;
    sc_signal< sc_lv<1> > icmp_ln158_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln158_reg_738;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > i_fu_395_p2;
    sc_signal< sc_lv<4> > i_reg_742;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > shl_ln_fu_405_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_747;
    sc_signal< sc_lv<64> > zext_ln160_fu_413_p1;
    sc_signal< sc_lv<64> > zext_ln160_reg_753;
    sc_signal< sc_lv<64> > zext_ln161_fu_424_p1;
    sc_signal< sc_lv<64> > zext_ln161_reg_763;
    sc_signal< sc_lv<64> > zext_ln162_fu_434_p1;
    sc_signal< sc_lv<64> > zext_ln162_reg_773;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<64> > zext_ln163_fu_444_p1;
    sc_signal< sc_lv<64> > zext_ln163_reg_783;
    sc_signal< sc_lv<8> > j_fu_459_p3;
    sc_signal< sc_lv<8> > j_reg_796;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln167_fu_449_p2;
    sc_signal< sc_lv<1> > icmp_ln178_fu_489_p2;
    sc_signal< sc_lv<1> > icmp_ln178_reg_820;
    sc_signal< sc_lv<1> > icmp_ln206_fu_510_p2;
    sc_signal< sc_lv<1> > icmp_ln206_reg_833;
    sc_signal< sc_lv<8> > Rcon_load_reg_861;
    sc_signal< sc_lv<8> > tempa_3_2_fu_561_p3;
    sc_signal< sc_lv<8> > tempa_3_2_reg_876;
    sc_signal< sc_lv<8> > tempa_0_2_fu_568_p3;
    sc_signal< sc_lv<8> > tempa_0_2_reg_882;
    sc_signal< sc_lv<8> > tempa_2_2_fu_595_p3;
    sc_signal< sc_lv<8> > tempa_2_2_reg_898;
    sc_signal< sc_lv<8> > tempa_1_2_fu_602_p3;
    sc_signal< sc_lv<8> > tempa_1_2_reg_904;
    sc_signal< sc_lv<6> > i_17_fu_732_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_phi_fu_362_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<6> > i_1_reg_369;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln171_fu_473_p1;
    sc_signal< sc_lv<64> > zext_ln172_fu_484_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_505_p1;
    sc_signal< sc_lv<64> > zext_ln173_fu_521_p1;
    sc_signal< sc_lv<64> > zext_ln174_fu_531_p1;
    sc_signal< sc_lv<64> > zext_ln197_fu_536_p1;
    sc_signal< sc_lv<64> > zext_ln200_fu_541_p1;
    sc_signal< sc_lv<64> > zext_ln198_fu_546_p1;
    sc_signal< sc_lv<64> > zext_ln199_fu_551_p1;
    sc_signal< sc_lv<64> > zext_ln218_fu_580_p1;
    sc_signal< sc_lv<64> > zext_ln219_fu_590_p1;
    sc_signal< sc_lv<64> > zext_ln210_fu_609_p1;
    sc_signal< sc_lv<64> > zext_ln211_fu_613_p1;
    sc_signal< sc_lv<64> > zext_ln220_fu_623_p1;
    sc_signal< sc_lv<64> > zext_ln221_fu_633_p1;
    sc_signal< sc_lv<64> > zext_ln212_fu_638_p1;
    sc_signal< sc_lv<64> > zext_ln213_fu_642_p1;
    sc_signal< sc_lv<64> > zext_ln218_1_fu_665_p1;
    sc_signal< sc_lv<64> > zext_ln219_1_fu_681_p1;
    sc_signal< sc_lv<64> > zext_ln220_1_fu_710_p1;
    sc_signal< sc_lv<64> > zext_ln221_1_fu_727_p1;
    sc_signal< sc_lv<8> > xor_ln218_fu_658_p2;
    sc_signal< sc_lv<8> > xor_ln219_fu_669_p2;
    sc_signal< sc_lv<8> > xor_ln220_fu_698_p2;
    sc_signal< sc_lv<8> > xor_ln221_fu_715_p2;
    sc_signal< sc_lv<3> > trunc_ln160_fu_401_p1;
    sc_signal< sc_lv<5> > or_ln161_fu_418_p2;
    sc_signal< sc_lv<5> > or_ln162_fu_429_p2;
    sc_signal< sc_lv<5> > or_ln163_fu_439_p2;
    sc_signal< sc_lv<8> > add_ln171_fu_467_p2;
    sc_signal< sc_lv<8> > add_ln172_fu_478_p2;
    sc_signal< sc_lv<3> > trunc_ln167_fu_455_p1;
    sc_signal< sc_lv<3> > lshr_ln_fu_495_p4;
    sc_signal< sc_lv<8> > add_ln173_fu_516_p2;
    sc_signal< sc_lv<8> > add_ln174_fu_526_p2;
    sc_signal< sc_lv<8> > tempa_0_fu_556_p2;
    sc_signal< sc_lv<8> > add_ln218_fu_575_p2;
    sc_signal< sc_lv<8> > add_ln219_fu_585_p2;
    sc_signal< sc_lv<8> > add_ln220_fu_618_p2;
    sc_signal< sc_lv<8> > add_ln221_fu_628_p2;
    sc_signal< sc_lv<8> > tempa_0_4_fu_652_p3;
    sc_signal< sc_lv<8> > tempa_1_4_fu_646_p3;
    sc_signal< sc_lv<8> > or_ln219_fu_676_p2;
    sc_signal< sc_lv<8> > tempa_2_4_fu_692_p3;
    sc_signal< sc_lv<8> > or_ln220_fu_705_p2;
    sc_signal< sc_lv<8> > tempa_3_4_fu_686_p3;
    sc_signal< sc_lv<8> > or_ln221_fu_722_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_pp0_stage0;
    static const sc_lv<11> ap_ST_fsm_pp0_stage1;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<11> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_E0;
    static const sc_lv<8> ap_const_lv8_E1;
    static const sc_lv<8> ap_const_lv8_E2;
    static const sc_lv<8> ap_const_lv8_E3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_add_ln171_fu_467_p2();
    void thread_add_ln172_fu_478_p2();
    void thread_add_ln173_fu_516_p2();
    void thread_add_ln174_fu_526_p2();
    void thread_add_ln218_fu_575_p2();
    void thread_add_ln219_fu_585_p2();
    void thread_add_ln220_fu_618_p2();
    void thread_add_ln221_fu_628_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_362_p4();
    void thread_ap_ready();
    void thread_i_17_fu_732_p2();
    void thread_i_fu_395_p2();
    void thread_icmp_ln158_fu_389_p2();
    void thread_icmp_ln167_fu_449_p2();
    void thread_icmp_ln178_fu_489_p2();
    void thread_icmp_ln206_fu_510_p2();
    void thread_j_fu_459_p3();
    void thread_lshr_ln_fu_495_p4();
    void thread_or_ln161_fu_418_p2();
    void thread_or_ln162_fu_429_p2();
    void thread_or_ln163_fu_439_p2();
    void thread_or_ln219_fu_676_p2();
    void thread_or_ln220_fu_705_p2();
    void thread_or_ln221_fu_722_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_shl_ln_fu_405_p3();
    void thread_tempa_0_2_fu_568_p3();
    void thread_tempa_0_4_fu_652_p3();
    void thread_tempa_0_fu_556_p2();
    void thread_tempa_1_2_fu_602_p3();
    void thread_tempa_1_4_fu_646_p3();
    void thread_tempa_2_2_fu_595_p3();
    void thread_tempa_2_4_fu_692_p3();
    void thread_tempa_3_2_fu_561_p3();
    void thread_tempa_3_4_fu_686_p3();
    void thread_trunc_ln160_fu_401_p1();
    void thread_trunc_ln167_fu_455_p1();
    void thread_xor_ln218_fu_658_p2();
    void thread_xor_ln219_fu_669_p2();
    void thread_xor_ln220_fu_698_p2();
    void thread_xor_ln221_fu_715_p2();
    void thread_zext_ln160_fu_413_p1();
    void thread_zext_ln161_fu_424_p1();
    void thread_zext_ln162_fu_434_p1();
    void thread_zext_ln163_fu_444_p1();
    void thread_zext_ln171_fu_473_p1();
    void thread_zext_ln172_fu_484_p1();
    void thread_zext_ln173_fu_521_p1();
    void thread_zext_ln174_fu_531_p1();
    void thread_zext_ln197_fu_536_p1();
    void thread_zext_ln198_fu_546_p1();
    void thread_zext_ln199_fu_551_p1();
    void thread_zext_ln200_fu_541_p1();
    void thread_zext_ln203_fu_505_p1();
    void thread_zext_ln210_fu_609_p1();
    void thread_zext_ln211_fu_613_p1();
    void thread_zext_ln212_fu_638_p1();
    void thread_zext_ln213_fu_642_p1();
    void thread_zext_ln218_1_fu_665_p1();
    void thread_zext_ln218_fu_580_p1();
    void thread_zext_ln219_1_fu_681_p1();
    void thread_zext_ln219_fu_590_p1();
    void thread_zext_ln220_1_fu_710_p1();
    void thread_zext_ln220_fu_623_p1();
    void thread_zext_ln221_1_fu_727_p1();
    void thread_zext_ln221_fu_633_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
