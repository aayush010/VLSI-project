// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gf31_nrand_schar.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gf31_nrand_schar::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gf31_nrand_schar::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state1 = "1";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state2 = "10";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state3 = "100";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state4 = "1000";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state5 = "10000";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state6 = "100000";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_pp0_stage0 = "1000000";
const sc_lv<8> gf31_nrand_schar::ap_ST_fsm_state9 = "10000000";
const bool gf31_nrand_schar::ap_const_boolean_1 = true;
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_1 = "1";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_6 = "110";
const bool gf31_nrand_schar::ap_const_boolean_0 = false;
const sc_lv<1> gf31_nrand_schar::ap_const_lv1_1 = "1";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_5 = "101";
const sc_lv<1> gf31_nrand_schar::ap_const_lv1_0 = "0";
const sc_lv<5> gf31_nrand_schar::ap_const_lv5_0 = "00000";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_4 = "100";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_2 = "10";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_3 = "11";
const sc_lv<64> gf31_nrand_schar::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_E580 = "1110010110000000";
const sc_lv<5> gf31_nrand_schar::ap_const_lv5_1 = "1";
const sc_lv<5> gf31_nrand_schar::ap_const_lv5_18 = "11000";
const sc_lv<32> gf31_nrand_schar::ap_const_lv32_88 = "10001000";
const sc_lv<5> gf31_nrand_schar::ap_const_lv5_1F = "11111";
const sc_lv<5> gf31_nrand_schar::ap_const_lv5_11 = "10001";

gf31_nrand_schar::gf31_nrand_schar(sc_module_name name) : sc_module(name), mVcdFile(0) {
    shakestate_U = new gf31_nrand_schar_g8j("shakestate_U");
    shakestate_U->clk(ap_clk);
    shakestate_U->reset(ap_rst);
    shakestate_U->address0(shakestate_address0);
    shakestate_U->ce0(shakestate_ce0);
    shakestate_U->we0(shakestate_we0);
    shakestate_U->d0(shakestate_d0);
    shakestate_U->q0(shakestate_q0);
    shakestate_U->address1(grp_keccak_squeezeblocks_fu_126_s_address1);
    shakestate_U->ce1(shakestate_ce1);
    shakestate_U->we1(shakestate_we1);
    shakestate_U->d1(grp_keccak_squeezeblocks_fu_126_s_d1);
    shakestate_U->q1(shakestate_q1);
    output_assign_U = new gf31_nrand_schar_hbi("output_assign_U");
    output_assign_U->clk(ap_clk);
    output_assign_U->reset(ap_rst);
    output_assign_U->address0(output_assign_address0);
    output_assign_U->ce0(output_assign_ce0);
    output_assign_U->we0(output_assign_we0);
    output_assign_U->d0(grp_keccak_squeezeblocks_fu_126_h_d0);
    output_assign_U->q0(output_assign_q0);
    output_assign_U->address1(grp_keccak_squeezeblocks_fu_126_h_address1);
    output_assign_U->ce1(output_assign_ce1);
    output_assign_U->we1(output_assign_we1);
    output_assign_U->d1(grp_keccak_squeezeblocks_fu_126_h_d1);
    grp_keccak_squeezeblocks_fu_126 = new keccak_squeezeblocks("grp_keccak_squeezeblocks_fu_126");
    grp_keccak_squeezeblocks_fu_126->ap_clk(ap_clk);
    grp_keccak_squeezeblocks_fu_126->ap_rst(ap_rst);
    grp_keccak_squeezeblocks_fu_126->ap_start(grp_keccak_squeezeblocks_fu_126_ap_start);
    grp_keccak_squeezeblocks_fu_126->ap_done(grp_keccak_squeezeblocks_fu_126_ap_done);
    grp_keccak_squeezeblocks_fu_126->ap_idle(grp_keccak_squeezeblocks_fu_126_ap_idle);
    grp_keccak_squeezeblocks_fu_126->ap_ready(grp_keccak_squeezeblocks_fu_126_ap_ready);
    grp_keccak_squeezeblocks_fu_126->h_address0(grp_keccak_squeezeblocks_fu_126_h_address0);
    grp_keccak_squeezeblocks_fu_126->h_ce0(grp_keccak_squeezeblocks_fu_126_h_ce0);
    grp_keccak_squeezeblocks_fu_126->h_we0(grp_keccak_squeezeblocks_fu_126_h_we0);
    grp_keccak_squeezeblocks_fu_126->h_d0(grp_keccak_squeezeblocks_fu_126_h_d0);
    grp_keccak_squeezeblocks_fu_126->h_address1(grp_keccak_squeezeblocks_fu_126_h_address1);
    grp_keccak_squeezeblocks_fu_126->h_ce1(grp_keccak_squeezeblocks_fu_126_h_ce1);
    grp_keccak_squeezeblocks_fu_126->h_we1(grp_keccak_squeezeblocks_fu_126_h_we1);
    grp_keccak_squeezeblocks_fu_126->h_d1(grp_keccak_squeezeblocks_fu_126_h_d1);
    grp_keccak_squeezeblocks_fu_126->s_address0(grp_keccak_squeezeblocks_fu_126_s_address0);
    grp_keccak_squeezeblocks_fu_126->s_ce0(grp_keccak_squeezeblocks_fu_126_s_ce0);
    grp_keccak_squeezeblocks_fu_126->s_we0(grp_keccak_squeezeblocks_fu_126_s_we0);
    grp_keccak_squeezeblocks_fu_126->s_d0(grp_keccak_squeezeblocks_fu_126_s_d0);
    grp_keccak_squeezeblocks_fu_126->s_q0(shakestate_q0);
    grp_keccak_squeezeblocks_fu_126->s_address1(grp_keccak_squeezeblocks_fu_126_s_address1);
    grp_keccak_squeezeblocks_fu_126->s_ce1(grp_keccak_squeezeblocks_fu_126_s_ce1);
    grp_keccak_squeezeblocks_fu_126->s_we1(grp_keccak_squeezeblocks_fu_126_s_we1);
    grp_keccak_squeezeblocks_fu_126->s_d1(grp_keccak_squeezeblocks_fu_126_s_d1);
    grp_keccak_squeezeblocks_fu_126->s_q1(shakestate_q1);
    grp_keccak_absorb_2_fu_134 = new keccak_absorb_2("grp_keccak_absorb_2_fu_134");
    grp_keccak_absorb_2_fu_134->ap_clk(ap_clk);
    grp_keccak_absorb_2_fu_134->ap_rst(ap_rst);
    grp_keccak_absorb_2_fu_134->ap_start(grp_keccak_absorb_2_fu_134_ap_start);
    grp_keccak_absorb_2_fu_134->ap_done(grp_keccak_absorb_2_fu_134_ap_done);
    grp_keccak_absorb_2_fu_134->ap_idle(grp_keccak_absorb_2_fu_134_ap_idle);
    grp_keccak_absorb_2_fu_134->ap_ready(grp_keccak_absorb_2_fu_134_ap_ready);
    grp_keccak_absorb_2_fu_134->s_address0(grp_keccak_absorb_2_fu_134_s_address0);
    grp_keccak_absorb_2_fu_134->s_ce0(grp_keccak_absorb_2_fu_134_s_ce0);
    grp_keccak_absorb_2_fu_134->s_we0(grp_keccak_absorb_2_fu_134_s_we0);
    grp_keccak_absorb_2_fu_134->s_d0(grp_keccak_absorb_2_fu_134_s_d0);
    grp_keccak_absorb_2_fu_134->s_q0(shakestate_q0);
    grp_keccak_absorb_2_fu_134->m_address0(grp_keccak_absorb_2_fu_134_m_address0);
    grp_keccak_absorb_2_fu_134->m_ce0(grp_keccak_absorb_2_fu_134_m_ce0);
    grp_keccak_absorb_2_fu_134->m_q0(seed_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln76_fu_150_p2);
    sensitive << ( phi_ln76_reg_104 );

    SC_METHOD(thread_and_ln83_fu_178_p2);
    sensitive << ( grp_fu_144_p2 );
    sensitive << ( icmp_ln83_1_fu_172_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state7);
    sensitive << ( and_ln83_fu_178_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_144_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_144_p2 );

    SC_METHOD(thread_ap_sig_allocacmp_i_10_load_1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln84_fu_199_p2 );
    sensitive << ( i_10_fu_62 );
    sensitive << ( i_fu_216_p2 );

    SC_METHOD(thread_empty_35_fu_195_p1);
    sensitive << ( output_assign_q0 );

    SC_METHOD(thread_grp_fu_144_p2);
    sensitive << ( grp_load_fu_141_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_keccak_absorb_2_fu_134_ap_start);
    sensitive << ( grp_keccak_absorb_2_fu_134_ap_start_reg );

    SC_METHOD(thread_grp_keccak_squeezeblocks_fu_126_ap_start);
    sensitive << ( grp_keccak_squeezeblocks_fu_126_ap_start_reg );

    SC_METHOD(thread_grp_load_fu_141_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i_10_fu_62 );
    sensitive << ( ap_sig_allocacmp_i_10_load_1 );

    SC_METHOD(thread_i_fu_216_p2);
    sensitive << ( i_10_load_1_reg_244 );

    SC_METHOD(thread_icmp_ln76_fu_161_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln76_reg_104 );

    SC_METHOD(thread_icmp_ln83_1_fu_172_p2);
    sensitive << ( j_0_reg_115 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln84_fu_199_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( empty_35_fu_195_p1 );

    SC_METHOD(thread_j_fu_184_p2);
    sensitive << ( j_0_reg_115 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln85_fu_212_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( empty_35_fu_195_p1 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln84_fu_199_p2 );

    SC_METHOD(thread_output_assign_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_h_address0 );
    sensitive << ( sext_ln84_fu_190_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_output_assign_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_h_ce0 );

    SC_METHOD(thread_output_assign_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_h_ce1 );

    SC_METHOD(thread_output_assign_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_h_we0 );

    SC_METHOD(thread_output_assign_we1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_h_we1 );

    SC_METHOD(thread_seed_address0);
    sensitive << ( grp_keccak_absorb_2_fu_134_m_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_seed_ce0);
    sensitive << ( grp_keccak_absorb_2_fu_134_m_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln84_fu_190_p1);
    sensitive << ( j_0_reg_115 );

    SC_METHOD(thread_sext_ln85_fu_212_p1);
    sensitive << ( i_10_load_1_reg_244 );

    SC_METHOD(thread_shakestate_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_address0 );
    sensitive << ( grp_keccak_absorb_2_fu_134_s_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln76_fu_156_p1 );

    SC_METHOD(thread_shakestate_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_ce0 );
    sensitive << ( grp_keccak_absorb_2_fu_134_s_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shakestate_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_ce1 );

    SC_METHOD(thread_shakestate_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_d0 );
    sensitive << ( grp_keccak_absorb_2_fu_134_s_d0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shakestate_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_we0 );
    sensitive << ( grp_keccak_absorb_2_fu_134_s_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shakestate_we1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_s_we1 );

    SC_METHOD(thread_zext_ln76_fu_156_p1);
    sensitive << ( phi_ln76_reg_104 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( and_ln83_fu_178_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_keccak_squeezeblocks_fu_126_ap_done );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( grp_keccak_absorb_2_fu_134_ap_done );
    sensitive << ( icmp_ln76_fu_161_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_keccak_squeezeblocks_fu_126_ap_start_reg = SC_LOGIC_0;
    grp_keccak_absorb_2_fu_134_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gf31_nrand_schar_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, seed_address0, "(port)seed_address0");
    sc_trace(mVcdFile, seed_ce0, "(port)seed_ce0");
    sc_trace(mVcdFile, seed_q0, "(port)seed_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, j_0_reg_115, "j_0_reg_115");
    sc_trace(mVcdFile, add_ln76_fu_150_p2, "add_ln76_fu_150_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_load_fu_141_p1, "grp_load_fu_141_p1");
    sc_trace(mVcdFile, i_10_load_1_reg_244, "i_10_load_1_reg_244");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter0, "ap_block_state7_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter1, "ap_block_state8_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, and_ln83_fu_178_p2, "and_ln83_fu_178_p2");
    sc_trace(mVcdFile, j_fu_184_p2, "j_fu_184_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_ap_ready, "grp_keccak_squeezeblocks_fu_126_ap_ready");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_ap_done, "grp_keccak_squeezeblocks_fu_126_ap_done");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state7, "ap_condition_pp0_exit_iter0_state7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, shakestate_address0, "shakestate_address0");
    sc_trace(mVcdFile, shakestate_ce0, "shakestate_ce0");
    sc_trace(mVcdFile, shakestate_we0, "shakestate_we0");
    sc_trace(mVcdFile, shakestate_d0, "shakestate_d0");
    sc_trace(mVcdFile, shakestate_q0, "shakestate_q0");
    sc_trace(mVcdFile, shakestate_ce1, "shakestate_ce1");
    sc_trace(mVcdFile, shakestate_we1, "shakestate_we1");
    sc_trace(mVcdFile, shakestate_q1, "shakestate_q1");
    sc_trace(mVcdFile, output_assign_address0, "output_assign_address0");
    sc_trace(mVcdFile, output_assign_ce0, "output_assign_ce0");
    sc_trace(mVcdFile, output_assign_we0, "output_assign_we0");
    sc_trace(mVcdFile, output_assign_q0, "output_assign_q0");
    sc_trace(mVcdFile, output_assign_ce1, "output_assign_ce1");
    sc_trace(mVcdFile, output_assign_we1, "output_assign_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_ap_start, "grp_keccak_squeezeblocks_fu_126_ap_start");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_ap_idle, "grp_keccak_squeezeblocks_fu_126_ap_idle");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_address0, "grp_keccak_squeezeblocks_fu_126_h_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_ce0, "grp_keccak_squeezeblocks_fu_126_h_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_we0, "grp_keccak_squeezeblocks_fu_126_h_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_d0, "grp_keccak_squeezeblocks_fu_126_h_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_address1, "grp_keccak_squeezeblocks_fu_126_h_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_ce1, "grp_keccak_squeezeblocks_fu_126_h_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_we1, "grp_keccak_squeezeblocks_fu_126_h_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_h_d1, "grp_keccak_squeezeblocks_fu_126_h_d1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_address0, "grp_keccak_squeezeblocks_fu_126_s_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_ce0, "grp_keccak_squeezeblocks_fu_126_s_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_we0, "grp_keccak_squeezeblocks_fu_126_s_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_d0, "grp_keccak_squeezeblocks_fu_126_s_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_address1, "grp_keccak_squeezeblocks_fu_126_s_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_ce1, "grp_keccak_squeezeblocks_fu_126_s_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_we1, "grp_keccak_squeezeblocks_fu_126_s_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_s_d1, "grp_keccak_squeezeblocks_fu_126_s_d1");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_ap_start, "grp_keccak_absorb_2_fu_134_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_ap_done, "grp_keccak_absorb_2_fu_134_ap_done");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_ap_idle, "grp_keccak_absorb_2_fu_134_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_ap_ready, "grp_keccak_absorb_2_fu_134_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_s_address0, "grp_keccak_absorb_2_fu_134_s_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_s_ce0, "grp_keccak_absorb_2_fu_134_s_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_s_we0, "grp_keccak_absorb_2_fu_134_s_we0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_s_d0, "grp_keccak_absorb_2_fu_134_s_d0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_m_address0, "grp_keccak_absorb_2_fu_134_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_m_ce0, "grp_keccak_absorb_2_fu_134_m_ce0");
    sc_trace(mVcdFile, phi_ln76_reg_104, "phi_ln76_reg_104");
    sc_trace(mVcdFile, icmp_ln76_fu_161_p2, "icmp_ln76_fu_161_p2");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_126_ap_start_reg, "grp_keccak_squeezeblocks_fu_126_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_144_p2, "grp_fu_144_p2");
    sc_trace(mVcdFile, grp_keccak_absorb_2_fu_134_ap_start_reg, "grp_keccak_absorb_2_fu_134_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln76_fu_156_p1, "zext_ln76_fu_156_p1");
    sc_trace(mVcdFile, sext_ln84_fu_190_p1, "sext_ln84_fu_190_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, sext_ln85_fu_212_p1, "sext_ln85_fu_212_p1");
    sc_trace(mVcdFile, icmp_ln84_fu_199_p2, "icmp_ln84_fu_199_p2");
    sc_trace(mVcdFile, i_10_fu_62, "i_10_fu_62");
    sc_trace(mVcdFile, i_fu_216_p2, "i_fu_216_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_i_10_load_1, "ap_sig_allocacmp_i_10_load_1");
    sc_trace(mVcdFile, icmp_ln83_1_fu_172_p2, "icmp_ln83_1_fu_172_p2");
    sc_trace(mVcdFile, empty_35_fu_195_p1, "empty_35_fu_195_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

gf31_nrand_schar::~gf31_nrand_schar() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete shakestate_U;
    delete output_assign_U;
    delete grp_keccak_squeezeblocks_fu_126;
    delete grp_keccak_absorb_2_fu_134;
}

void gf31_nrand_schar::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state7.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_126_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state7.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state7.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_126_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_2_fu_134_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_keccak_absorb_2_fu_134_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_2_fu_134_ap_ready.read())) {
            grp_keccak_absorb_2_fu_134_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_squeezeblocks_fu_126_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_144_p2.read()))) {
            grp_keccak_squeezeblocks_fu_126_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_squeezeblocks_fu_126_ap_ready.read())) {
            grp_keccak_squeezeblocks_fu_126_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_199_p2.read()))) {
        i_10_fu_62 = i_fu_216_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_fu_161_p2.read()))) {
        i_10_fu_62 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(and_ln83_fu_178_p2.read(), ap_const_lv1_1))) {
        j_0_reg_115 = j_fu_184_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_126_ap_done.read(), ap_const_logic_1))) {
        j_0_reg_115 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_fu_161_p2.read()))) {
        phi_ln76_reg_104 = add_ln76_fu_150_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln76_reg_104 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_10_load_1_reg_244 = grp_load_fu_141_p1.read();
    }
}

void gf31_nrand_schar::thread_add_ln76_fu_150_p2() {
    add_ln76_fu_150_p2 = (!phi_ln76_reg_104.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(phi_ln76_reg_104.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void gf31_nrand_schar::thread_and_ln83_fu_178_p2() {
    and_ln83_fu_178_p2 = (grp_fu_144_p2.read() & icmp_ln83_1_fu_172_p2.read());
}

void gf31_nrand_schar::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[6];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gf31_nrand_schar::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gf31_nrand_schar::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gf31_nrand_schar::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gf31_nrand_schar::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gf31_nrand_schar::thread_ap_block_state7_pp0_stage0_iter0() {
    ap_block_state7_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gf31_nrand_schar::thread_ap_block_state8_pp0_stage0_iter1() {
    ap_block_state8_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gf31_nrand_schar::thread_ap_condition_pp0_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(and_ln83_fu_178_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state7 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_144_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void gf31_nrand_schar::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_144_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_ap_sig_allocacmp_i_10_load_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_199_p2.read()))) {
        ap_sig_allocacmp_i_10_load_1 = i_fu_216_p2.read();
    } else {
        ap_sig_allocacmp_i_10_load_1 = i_10_fu_62.read();
    }
}

void gf31_nrand_schar::thread_empty_35_fu_195_p1() {
    empty_35_fu_195_p1 = output_assign_q0.read().range(5-1, 0);
}

void gf31_nrand_schar::thread_grp_fu_144_p2() {
    grp_fu_144_p2 = (!grp_load_fu_141_p1.read().is_01() || !ap_const_lv32_E580.is_01())? sc_lv<1>(): (sc_bigint<32>(grp_load_fu_141_p1.read()) < sc_bigint<32>(ap_const_lv32_E580));
}

void gf31_nrand_schar::thread_grp_keccak_absorb_2_fu_134_ap_start() {
    grp_keccak_absorb_2_fu_134_ap_start = grp_keccak_absorb_2_fu_134_ap_start_reg.read();
}

void gf31_nrand_schar::thread_grp_keccak_squeezeblocks_fu_126_ap_start() {
    grp_keccak_squeezeblocks_fu_126_ap_start = grp_keccak_squeezeblocks_fu_126_ap_start_reg.read();
}

void gf31_nrand_schar::thread_grp_load_fu_141_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_load_fu_141_p1 = ap_sig_allocacmp_i_10_load_1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_load_fu_141_p1 = i_10_fu_62.read();
    } else {
        grp_load_fu_141_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void gf31_nrand_schar::thread_i_fu_216_p2() {
    i_fu_216_p2 = (!i_10_load_1_reg_244.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(i_10_load_1_reg_244.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gf31_nrand_schar::thread_icmp_ln76_fu_161_p2() {
    icmp_ln76_fu_161_p2 = (!phi_ln76_reg_104.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln76_reg_104.read() == ap_const_lv5_18);
}

void gf31_nrand_schar::thread_icmp_ln83_1_fu_172_p2() {
    icmp_ln83_1_fu_172_p2 = (!j_0_reg_115.read().is_01() || !ap_const_lv32_88.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_115.read() != ap_const_lv32_88);
}

void gf31_nrand_schar::thread_icmp_ln84_fu_199_p2() {
    icmp_ln84_fu_199_p2 = (!empty_35_fu_195_p1.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(empty_35_fu_195_p1.read() == ap_const_lv5_1F);
}

void gf31_nrand_schar::thread_j_fu_184_p2() {
    j_fu_184_p2 = (!j_0_reg_115.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j_0_reg_115.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gf31_nrand_schar::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<16>) (sext_ln85_fu_212_p1.read());
}

void gf31_nrand_schar::thread_out_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_out_r_d0() {
    out_r_d0 = (!empty_35_fu_195_p1.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<5>(): (sc_biguint<5>(empty_35_fu_195_p1.read()) + sc_bigint<5>(ap_const_lv5_11));
}

void gf31_nrand_schar::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_199_p2.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_output_assign_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_assign_address0 =  (sc_lv<8>) (sext_ln84_fu_190_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_assign_address0 = grp_keccak_squeezeblocks_fu_126_h_address0.read();
    } else {
        output_assign_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void gf31_nrand_schar::thread_output_assign_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_assign_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_assign_ce0 = grp_keccak_squeezeblocks_fu_126_h_ce0.read();
    } else {
        output_assign_ce0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_output_assign_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_assign_ce1 = grp_keccak_squeezeblocks_fu_126_h_ce1.read();
    } else {
        output_assign_ce1 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_output_assign_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_assign_we0 = grp_keccak_squeezeblocks_fu_126_h_we0.read();
    } else {
        output_assign_we0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_output_assign_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_assign_we1 = grp_keccak_squeezeblocks_fu_126_h_we1.read();
    } else {
        output_assign_we1 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_seed_address0() {
    seed_address0 = grp_keccak_absorb_2_fu_134_m_address0.read();
}

void gf31_nrand_schar::thread_seed_ce0() {
    seed_ce0 = grp_keccak_absorb_2_fu_134_m_ce0.read();
}

void gf31_nrand_schar::thread_sext_ln84_fu_190_p1() {
    sext_ln84_fu_190_p1 = esl_sext<64,32>(j_0_reg_115.read());
}

void gf31_nrand_schar::thread_sext_ln85_fu_212_p1() {
    sext_ln85_fu_212_p1 = esl_sext<64,32>(i_10_load_1_reg_244.read());
}

void gf31_nrand_schar::thread_shakestate_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        shakestate_address0 =  (sc_lv<5>) (zext_ln76_fu_156_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        shakestate_address0 = grp_keccak_absorb_2_fu_134_s_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_address0 = grp_keccak_squeezeblocks_fu_126_s_address0.read();
    } else {
        shakestate_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void gf31_nrand_schar::thread_shakestate_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        shakestate_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        shakestate_ce0 = grp_keccak_absorb_2_fu_134_s_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_ce0 = grp_keccak_squeezeblocks_fu_126_s_ce0.read();
    } else {
        shakestate_ce0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_shakestate_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_ce1 = grp_keccak_squeezeblocks_fu_126_s_ce1.read();
    } else {
        shakestate_ce1 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_shakestate_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        shakestate_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        shakestate_d0 = grp_keccak_absorb_2_fu_134_s_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_d0 = grp_keccak_squeezeblocks_fu_126_s_d0.read();
    } else {
        shakestate_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gf31_nrand_schar::thread_shakestate_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        shakestate_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        shakestate_we0 = grp_keccak_absorb_2_fu_134_s_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_we0 = grp_keccak_squeezeblocks_fu_126_s_we0.read();
    } else {
        shakestate_we0 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_shakestate_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shakestate_we1 = grp_keccak_squeezeblocks_fu_126_s_we1.read();
    } else {
        shakestate_we1 = ap_const_logic_0;
    }
}

void gf31_nrand_schar::thread_zext_ln76_fu_156_p1() {
    zext_ln76_fu_156_p1 = esl_zext<64,5>(phi_ln76_reg_104.read());
}

void gf31_nrand_schar::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_fu_161_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_2_fu_134_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_144_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_126_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(and_ln83_fu_178_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(and_ln83_fu_178_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

