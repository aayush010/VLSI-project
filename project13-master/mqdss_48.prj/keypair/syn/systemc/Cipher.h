// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Cipher_HH_
#define _Cipher_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MixColumns.h"
#include "AddRoundKey.h"
#include "Cipher_sbox.h"

namespace ap_rtl {

struct Cipher : public sc_module {
    // Port declarations 44
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > state_0_0_read;
    sc_in< sc_lv<8> > state_0_1_read;
    sc_in< sc_lv<8> > state_0_2_read;
    sc_in< sc_lv<8> > state_0_3_read;
    sc_in< sc_lv<8> > state_1_0_read;
    sc_in< sc_lv<8> > state_1_1_read;
    sc_in< sc_lv<8> > state_1_2_read;
    sc_in< sc_lv<8> > state_1_3_read;
    sc_in< sc_lv<8> > state_2_0_read;
    sc_in< sc_lv<8> > state_2_1_read;
    sc_in< sc_lv<8> > state_2_2_read;
    sc_in< sc_lv<8> > state_2_3_read;
    sc_in< sc_lv<8> > state_3_0_read;
    sc_in< sc_lv<8> > state_3_1_read;
    sc_in< sc_lv<8> > state_3_2_read;
    sc_in< sc_lv<8> > state_3_3_read;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<8> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;
    sc_out< sc_lv<8> > ap_return_8;
    sc_out< sc_lv<8> > ap_return_9;
    sc_out< sc_lv<8> > ap_return_10;
    sc_out< sc_lv<8> > ap_return_11;
    sc_out< sc_lv<8> > ap_return_12;
    sc_out< sc_lv<8> > ap_return_13;
    sc_out< sc_lv<8> > ap_return_14;
    sc_out< sc_lv<8> > ap_return_15;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Cipher(sc_module_name name);
    SC_HAS_PROCESS(Cipher);

    ~Cipher();

    sc_trace_file* mVcdFile;

    Cipher_sbox* sbox_U;
    MixColumns* call_ret6_MixColumns_fu_663;
    AddRoundKey* grp_AddRoundKey_fu_683;
    sc_signal< sc_lv<45> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > sbox_address2;
    sc_signal< sc_logic > sbox_ce2;
    sc_signal< sc_lv<8> > sbox_q2;
    sc_signal< sc_lv<8> > sbox_address3;
    sc_signal< sc_logic > sbox_ce3;
    sc_signal< sc_lv<8> > sbox_q3;
    sc_signal< sc_lv<8> > sbox_address4;
    sc_signal< sc_logic > sbox_ce4;
    sc_signal< sc_lv<8> > sbox_q4;
    sc_signal< sc_lv<8> > sbox_address5;
    sc_signal< sc_logic > sbox_ce5;
    sc_signal< sc_lv<8> > sbox_q5;
    sc_signal< sc_lv<8> > sbox_address6;
    sc_signal< sc_logic > sbox_ce6;
    sc_signal< sc_lv<8> > sbox_q6;
    sc_signal< sc_lv<8> > sbox_address7;
    sc_signal< sc_logic > sbox_ce7;
    sc_signal< sc_lv<8> > sbox_q7;
    sc_signal< sc_lv<8> > sbox_address8;
    sc_signal< sc_logic > sbox_ce8;
    sc_signal< sc_lv<8> > sbox_q8;
    sc_signal< sc_lv<8> > sbox_address9;
    sc_signal< sc_logic > sbox_ce9;
    sc_signal< sc_lv<8> > sbox_q9;
    sc_signal< sc_lv<8> > sbox_address10;
    sc_signal< sc_logic > sbox_ce10;
    sc_signal< sc_lv<8> > sbox_q10;
    sc_signal< sc_lv<8> > sbox_address11;
    sc_signal< sc_logic > sbox_ce11;
    sc_signal< sc_lv<8> > sbox_q11;
    sc_signal< sc_lv<8> > sbox_address12;
    sc_signal< sc_logic > sbox_ce12;
    sc_signal< sc_lv<8> > sbox_q12;
    sc_signal< sc_lv<8> > sbox_address13;
    sc_signal< sc_logic > sbox_ce13;
    sc_signal< sc_lv<8> > sbox_q13;
    sc_signal< sc_lv<8> > sbox_address14;
    sc_signal< sc_logic > sbox_ce14;
    sc_signal< sc_lv<8> > sbox_q14;
    sc_signal< sc_lv<8> > sbox_address15;
    sc_signal< sc_logic > sbox_ce15;
    sc_signal< sc_lv<8> > sbox_q15;
    sc_signal< sc_lv<8> > reg_804;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_lv<8> > reg_810;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > reg_817;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > reg_824;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > reg_831;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > reg_838;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > reg_845;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<8> > reg_852;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<8> > reg_859;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<8> > reg_866;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<8> > reg_873;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<8> > reg_880;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<8> > reg_887;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<8> > reg_894;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<8> > reg_901;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<8> > reg_908;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln421_fu_915_p2;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<4> > round_fu_1086_p2;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > call_ret6_MixColumns_fu_663_ap_ready;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_0;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_1;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_2;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_3;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_4;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_5;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_6;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_7;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_8;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_9;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_10;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_11;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_12;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_13;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_14;
    sc_signal< sc_lv<8> > call_ret6_MixColumns_fu_663_ap_return_15;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_ap_start;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_ap_done;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_ap_idle;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_ap_ready;
    sc_signal< sc_lv<6> > grp_AddRoundKey_fu_683_round;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_0_0_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_0_1_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_0_2_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_0_3_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_1_0_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_1_1_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_1_2_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_1_3_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_2_0_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_2_1_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_2_2_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_2_3_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_3_0_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_3_1_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_3_2_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_state_3_3_read;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_RoundKey_address0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_RoundKey_ce0;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_RoundKey_address1;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_RoundKey_ce1;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_0;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_1;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_2;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_3;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_4;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_5;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_6;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_7;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_8;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_9;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_10;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_11;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_12;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_13;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_14;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_683_ap_return_15;
    sc_signal< sc_lv<8> > state_0_0_read_ass_reg_491;
    sc_signal< sc_lv<8> > state_0_1_read_ass_reg_501;
    sc_signal< sc_lv<8> > state_0_2_read_ass_reg_511;
    sc_signal< sc_lv<8> > state_0_3_read_ass_reg_521;
    sc_signal< sc_lv<8> > state_1_0_read_ass_reg_531;
    sc_signal< sc_lv<8> > state_1_1_read_ass_reg_541;
    sc_signal< sc_lv<8> > state_1_2_read_ass_reg_551;
    sc_signal< sc_lv<8> > state_1_3_read_ass_reg_561;
    sc_signal< sc_lv<8> > state_2_0_read_ass_reg_571;
    sc_signal< sc_lv<8> > state_2_1_read_ass_reg_581;
    sc_signal< sc_lv<8> > state_2_2_read_ass_reg_591;
    sc_signal< sc_lv<8> > state_2_3_read_ass_reg_601;
    sc_signal< sc_lv<8> > state_3_0_read_ass_reg_611;
    sc_signal< sc_lv<8> > state_3_1_read_ass_reg_621;
    sc_signal< sc_lv<8> > state_3_2_read_ass_reg_631;
    sc_signal< sc_lv<8> > state_3_3_read_ass_reg_641;
    sc_signal< sc_lv<4> > round_0_reg_651;
    sc_signal< sc_logic > grp_AddRoundKey_fu_683_ap_start_reg;
    sc_signal< sc_lv<45> > ap_NS_fsm;
    sc_signal< sc_logic > ap_NS_fsm_state27;
    sc_signal< sc_logic > ap_NS_fsm_state37;
    sc_signal< sc_lv<6> > zext_ln426_fu_1081_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_lv<64> > zext_ln264_16_fu_921_p1;
    sc_signal< sc_lv<64> > zext_ln264_17_fu_926_p1;
    sc_signal< sc_lv<64> > zext_ln264_18_fu_931_p1;
    sc_signal< sc_lv<64> > zext_ln264_19_fu_936_p1;
    sc_signal< sc_lv<64> > zext_ln264_20_fu_941_p1;
    sc_signal< sc_lv<64> > zext_ln264_21_fu_946_p1;
    sc_signal< sc_lv<64> > zext_ln264_22_fu_951_p1;
    sc_signal< sc_lv<64> > zext_ln264_23_fu_956_p1;
    sc_signal< sc_lv<64> > zext_ln264_24_fu_961_p1;
    sc_signal< sc_lv<64> > zext_ln264_25_fu_966_p1;
    sc_signal< sc_lv<64> > zext_ln264_26_fu_971_p1;
    sc_signal< sc_lv<64> > zext_ln264_27_fu_976_p1;
    sc_signal< sc_lv<64> > zext_ln264_28_fu_981_p1;
    sc_signal< sc_lv<64> > zext_ln264_29_fu_986_p1;
    sc_signal< sc_lv<64> > zext_ln264_30_fu_991_p1;
    sc_signal< sc_lv<64> > zext_ln264_31_fu_996_p1;
    sc_signal< sc_lv<64> > zext_ln264_fu_1092_p1;
    sc_signal< sc_lv<64> > zext_ln264_1_fu_1097_p1;
    sc_signal< sc_lv<64> > zext_ln264_2_fu_1102_p1;
    sc_signal< sc_lv<64> > zext_ln264_3_fu_1107_p1;
    sc_signal< sc_lv<64> > zext_ln264_4_fu_1112_p1;
    sc_signal< sc_lv<64> > zext_ln264_5_fu_1117_p1;
    sc_signal< sc_lv<64> > zext_ln264_6_fu_1122_p1;
    sc_signal< sc_lv<64> > zext_ln264_7_fu_1127_p1;
    sc_signal< sc_lv<64> > zext_ln264_8_fu_1132_p1;
    sc_signal< sc_lv<64> > zext_ln264_9_fu_1137_p1;
    sc_signal< sc_lv<64> > zext_ln264_10_fu_1142_p1;
    sc_signal< sc_lv<64> > zext_ln264_11_fu_1147_p1;
    sc_signal< sc_lv<64> > zext_ln264_12_fu_1152_p1;
    sc_signal< sc_lv<64> > zext_ln264_13_fu_1157_p1;
    sc_signal< sc_lv<64> > zext_ln264_14_fu_1162_p1;
    sc_signal< sc_lv<64> > zext_ln264_15_fu_1167_p1;
    sc_signal< sc_lv<8> > ap_return_0_preg;
    sc_signal< sc_lv<8> > ap_return_1_preg;
    sc_signal< sc_lv<8> > ap_return_2_preg;
    sc_signal< sc_lv<8> > ap_return_3_preg;
    sc_signal< sc_lv<8> > ap_return_4_preg;
    sc_signal< sc_lv<8> > ap_return_5_preg;
    sc_signal< sc_lv<8> > ap_return_6_preg;
    sc_signal< sc_lv<8> > ap_return_7_preg;
    sc_signal< sc_lv<8> > ap_return_8_preg;
    sc_signal< sc_lv<8> > ap_return_9_preg;
    sc_signal< sc_lv<8> > ap_return_10_preg;
    sc_signal< sc_lv<8> > ap_return_11_preg;
    sc_signal< sc_lv<8> > ap_return_12_preg;
    sc_signal< sc_lv<8> > ap_return_13_preg;
    sc_signal< sc_lv<8> > ap_return_14_preg;
    sc_signal< sc_lv<8> > ap_return_15_preg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<45> ap_ST_fsm_state1;
    static const sc_lv<45> ap_ST_fsm_state2;
    static const sc_lv<45> ap_ST_fsm_state3;
    static const sc_lv<45> ap_ST_fsm_state4;
    static const sc_lv<45> ap_ST_fsm_state5;
    static const sc_lv<45> ap_ST_fsm_state6;
    static const sc_lv<45> ap_ST_fsm_state7;
    static const sc_lv<45> ap_ST_fsm_state8;
    static const sc_lv<45> ap_ST_fsm_state9;
    static const sc_lv<45> ap_ST_fsm_state10;
    static const sc_lv<45> ap_ST_fsm_state11;
    static const sc_lv<45> ap_ST_fsm_state12;
    static const sc_lv<45> ap_ST_fsm_state13;
    static const sc_lv<45> ap_ST_fsm_state14;
    static const sc_lv<45> ap_ST_fsm_state15;
    static const sc_lv<45> ap_ST_fsm_state16;
    static const sc_lv<45> ap_ST_fsm_state17;
    static const sc_lv<45> ap_ST_fsm_state18;
    static const sc_lv<45> ap_ST_fsm_state19;
    static const sc_lv<45> ap_ST_fsm_state20;
    static const sc_lv<45> ap_ST_fsm_state21;
    static const sc_lv<45> ap_ST_fsm_state22;
    static const sc_lv<45> ap_ST_fsm_state23;
    static const sc_lv<45> ap_ST_fsm_state24;
    static const sc_lv<45> ap_ST_fsm_state25;
    static const sc_lv<45> ap_ST_fsm_state26;
    static const sc_lv<45> ap_ST_fsm_state27;
    static const sc_lv<45> ap_ST_fsm_state28;
    static const sc_lv<45> ap_ST_fsm_state29;
    static const sc_lv<45> ap_ST_fsm_state30;
    static const sc_lv<45> ap_ST_fsm_state31;
    static const sc_lv<45> ap_ST_fsm_state32;
    static const sc_lv<45> ap_ST_fsm_state33;
    static const sc_lv<45> ap_ST_fsm_state34;
    static const sc_lv<45> ap_ST_fsm_state35;
    static const sc_lv<45> ap_ST_fsm_state36;
    static const sc_lv<45> ap_ST_fsm_state37;
    static const sc_lv<45> ap_ST_fsm_state38;
    static const sc_lv<45> ap_ST_fsm_state39;
    static const sc_lv<45> ap_ST_fsm_state40;
    static const sc_lv<45> ap_ST_fsm_state41;
    static const sc_lv<45> ap_ST_fsm_state42;
    static const sc_lv<45> ap_ST_fsm_state43;
    static const sc_lv<45> ap_ST_fsm_state44;
    static const sc_lv<45> ap_ST_fsm_state45;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_NS_fsm_state27();
    void thread_ap_NS_fsm_state37();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_grp_AddRoundKey_fu_683_ap_start();
    void thread_grp_AddRoundKey_fu_683_round();
    void thread_grp_AddRoundKey_fu_683_state_0_0_read();
    void thread_grp_AddRoundKey_fu_683_state_0_1_read();
    void thread_grp_AddRoundKey_fu_683_state_0_2_read();
    void thread_grp_AddRoundKey_fu_683_state_0_3_read();
    void thread_grp_AddRoundKey_fu_683_state_1_0_read();
    void thread_grp_AddRoundKey_fu_683_state_1_1_read();
    void thread_grp_AddRoundKey_fu_683_state_1_2_read();
    void thread_grp_AddRoundKey_fu_683_state_1_3_read();
    void thread_grp_AddRoundKey_fu_683_state_2_0_read();
    void thread_grp_AddRoundKey_fu_683_state_2_1_read();
    void thread_grp_AddRoundKey_fu_683_state_2_2_read();
    void thread_grp_AddRoundKey_fu_683_state_2_3_read();
    void thread_grp_AddRoundKey_fu_683_state_3_0_read();
    void thread_grp_AddRoundKey_fu_683_state_3_1_read();
    void thread_grp_AddRoundKey_fu_683_state_3_2_read();
    void thread_grp_AddRoundKey_fu_683_state_3_3_read();
    void thread_icmp_ln421_fu_915_p2();
    void thread_round_fu_1086_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_address10();
    void thread_sbox_address11();
    void thread_sbox_address12();
    void thread_sbox_address13();
    void thread_sbox_address14();
    void thread_sbox_address15();
    void thread_sbox_address2();
    void thread_sbox_address3();
    void thread_sbox_address4();
    void thread_sbox_address5();
    void thread_sbox_address6();
    void thread_sbox_address7();
    void thread_sbox_address8();
    void thread_sbox_address9();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_sbox_ce10();
    void thread_sbox_ce11();
    void thread_sbox_ce12();
    void thread_sbox_ce13();
    void thread_sbox_ce14();
    void thread_sbox_ce15();
    void thread_sbox_ce2();
    void thread_sbox_ce3();
    void thread_sbox_ce4();
    void thread_sbox_ce5();
    void thread_sbox_ce6();
    void thread_sbox_ce7();
    void thread_sbox_ce8();
    void thread_sbox_ce9();
    void thread_zext_ln264_10_fu_1142_p1();
    void thread_zext_ln264_11_fu_1147_p1();
    void thread_zext_ln264_12_fu_1152_p1();
    void thread_zext_ln264_13_fu_1157_p1();
    void thread_zext_ln264_14_fu_1162_p1();
    void thread_zext_ln264_15_fu_1167_p1();
    void thread_zext_ln264_16_fu_921_p1();
    void thread_zext_ln264_17_fu_926_p1();
    void thread_zext_ln264_18_fu_931_p1();
    void thread_zext_ln264_19_fu_936_p1();
    void thread_zext_ln264_1_fu_1097_p1();
    void thread_zext_ln264_20_fu_941_p1();
    void thread_zext_ln264_21_fu_946_p1();
    void thread_zext_ln264_22_fu_951_p1();
    void thread_zext_ln264_23_fu_956_p1();
    void thread_zext_ln264_24_fu_961_p1();
    void thread_zext_ln264_25_fu_966_p1();
    void thread_zext_ln264_26_fu_971_p1();
    void thread_zext_ln264_27_fu_976_p1();
    void thread_zext_ln264_28_fu_981_p1();
    void thread_zext_ln264_29_fu_986_p1();
    void thread_zext_ln264_2_fu_1102_p1();
    void thread_zext_ln264_30_fu_991_p1();
    void thread_zext_ln264_31_fu_996_p1();
    void thread_zext_ln264_3_fu_1107_p1();
    void thread_zext_ln264_4_fu_1112_p1();
    void thread_zext_ln264_5_fu_1117_p1();
    void thread_zext_ln264_6_fu_1122_p1();
    void thread_zext_ln264_7_fu_1127_p1();
    void thread_zext_ln264_8_fu_1132_p1();
    void thread_zext_ln264_9_fu_1137_p1();
    void thread_zext_ln264_fu_1092_p1();
    void thread_zext_ln426_fu_1081_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
