// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign_keypair.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign_keypair::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign_keypair::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state1 = "1";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state2 = "10";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state3 = "100";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state4 = "1000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state5 = "10000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state6 = "100000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state11 = "1000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state12 = "10000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state13 = "100000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state16 = "100000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state17 = "1000000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state18 = "10000000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state19 = "100000000000000000";
const sc_lv<19> crypto_sign_keypair::ap_ST_fsm_state20 = "1000000000000000000";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool crypto_sign_keypair::ap_const_boolean_1 = true;
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_2 = "10";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_6 = "110";
const sc_lv<1> crypto_sign_keypair::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_8 = "1000";
const bool crypto_sign_keypair::ap_const_boolean_0 = false;
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_F = "1111";
const sc_lv<1> crypto_sign_keypair::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_10 = "10000";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_11 = "10001";
const sc_lv<5> crypto_sign_keypair::ap_const_lv5_0 = "00000";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_1 = "1";
const sc_lv<6> crypto_sign_keypair::ap_const_lv6_0 = "000000";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_5 = "101";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_7 = "111";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_12 = "10010";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_E = "1110";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_9 = "1001";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_A = "1010";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_4 = "100";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_B = "1011";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_C = "1100";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_D = "1101";
const sc_lv<64> crypto_sign_keypair::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> crypto_sign_keypair::ap_const_lv5_19 = "11001";
const sc_lv<5> crypto_sign_keypair::ap_const_lv5_1 = "1";
const sc_lv<6> crypto_sign_keypair::ap_const_lv6_20 = "100000";
const sc_lv<6> crypto_sign_keypair::ap_const_lv6_1 = "1";
const sc_lv<5> crypto_sign_keypair::ap_const_lv5_10 = "10000";
const sc_lv<6> crypto_sign_keypair::ap_const_lv6_30 = "110000";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_1F = "11111";
const sc_lv<7> crypto_sign_keypair::ap_const_lv7_10 = "10000";
const sc_lv<8> crypto_sign_keypair::ap_const_lv8_5 = "101";
const sc_lv<8> crypto_sign_keypair::ap_const_lv8_FF = "11111111";
const sc_lv<32> crypto_sign_keypair::ap_const_lv32_FFFFFFFB = "11111111111111111111111111111011";
const sc_lv<8> crypto_sign_keypair::ap_const_lv8_1F = "11111";
const sc_lv<16> crypto_sign_keypair::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> crypto_sign_keypair::ap_const_lv8_0 = "00000000";

crypto_sign_keypair::crypto_sign_keypair(sc_module_name name) : sc_module(name), mVcdFile(0) {
    s_U = new gf31_nrand_schar_g8j("s_U");
    s_U->clk(ap_clk);
    s_U->reset(ap_rst);
    s_U->address0(s_address0);
    s_U->ce0(s_ce0);
    s_U->we0(s_we0);
    s_U->d0(s_d0);
    s_U->q0(s_q0);
    s_U->address1(grp_keccak_squeezeblocks_fu_314_s_address1);
    s_U->ce1(s_ce1);
    s_U->we1(s_we1);
    s_U->d1(grp_keccak_squeezeblocks_fu_314_s_d1);
    s_U->q1(s_q1);
    d_i_U = new gf31_nrand_schar_hbi("d_i_U");
    d_i_U->clk(ap_clk);
    d_i_U->reset(ap_rst);
    d_i_U->address0(d_i_address0);
    d_i_U->ce0(d_i_ce0);
    d_i_U->we0(d_i_we0);
    d_i_U->d0(grp_keccak_squeezeblocks_fu_314_h_d0);
    d_i_U->q0(d_i_q0);
    d_i_U->address1(grp_keccak_squeezeblocks_fu_314_h_address1);
    d_i_U->ce1(d_i_ce1);
    d_i_U->we1(d_i_we1);
    d_i_U->d1(grp_keccak_squeezeblocks_fu_314_h_d1);
    F_U = new crypto_sign_keypaocq("F_U");
    F_U->clk(ap_clk);
    F_U->reset(ap_rst);
    F_U->address0(F_address0);
    F_U->ce0(F_ce0);
    F_U->we0(F_we0);
    F_U->d0(grp_gf31_nrand_schar_fu_297_out_r_d0);
    F_U->q0(F_q0);
    F_U->address1(grp_MQ_fu_338_F_address1);
    F_U->ce1(F_ce1);
    F_U->q1(F_q1);
    skbuf_U = new crypto_sign_keypapcA("skbuf_U");
    skbuf_U->clk(ap_clk);
    skbuf_U->reset(ap_rst);
    skbuf_U->address0(skbuf_address0);
    skbuf_U->ce0(skbuf_ce0);
    skbuf_U->we0(skbuf_we0);
    skbuf_U->d0(d_i_q0);
    skbuf_U->q0(skbuf_q0);
    sk_gf31_U = new crypto_sign_keypaqcK("sk_gf31_U");
    sk_gf31_U->clk(ap_clk);
    sk_gf31_U->reset(ap_rst);
    sk_gf31_U->address0(sk_gf31_address0);
    sk_gf31_U->ce0(sk_gf31_ce0);
    sk_gf31_U->we0(sk_gf31_we0);
    sk_gf31_U->d0(grp_gf31_nrand_fu_306_out_r_d0);
    sk_gf31_U->q0(sk_gf31_q0);
    sk_gf31_U->address1(grp_MQ_fu_338_x_address1);
    sk_gf31_U->ce1(sk_gf31_ce1);
    sk_gf31_U->q1(sk_gf31_q1);
    pk_gf31_U = new crypto_sign_keyparcU("pk_gf31_U");
    pk_gf31_U->clk(ap_clk);
    pk_gf31_U->reset(ap_rst);
    pk_gf31_U->address0(pk_gf31_address0);
    pk_gf31_U->ce0(pk_gf31_ce0);
    pk_gf31_U->we0(pk_gf31_we0);
    pk_gf31_U->d0(pk_gf31_d0);
    pk_gf31_U->q0(pk_gf31_q0);
    grp_gf31_nrand_schar_fu_297 = new gf31_nrand_schar("grp_gf31_nrand_schar_fu_297");
    grp_gf31_nrand_schar_fu_297->ap_clk(ap_clk);
    grp_gf31_nrand_schar_fu_297->ap_rst(ap_rst);
    grp_gf31_nrand_schar_fu_297->ap_start(grp_gf31_nrand_schar_fu_297_ap_start);
    grp_gf31_nrand_schar_fu_297->ap_done(grp_gf31_nrand_schar_fu_297_ap_done);
    grp_gf31_nrand_schar_fu_297->ap_idle(grp_gf31_nrand_schar_fu_297_ap_idle);
    grp_gf31_nrand_schar_fu_297->ap_ready(grp_gf31_nrand_schar_fu_297_ap_ready);
    grp_gf31_nrand_schar_fu_297->out_r_address0(grp_gf31_nrand_schar_fu_297_out_r_address0);
    grp_gf31_nrand_schar_fu_297->out_r_ce0(grp_gf31_nrand_schar_fu_297_out_r_ce0);
    grp_gf31_nrand_schar_fu_297->out_r_we0(grp_gf31_nrand_schar_fu_297_out_r_we0);
    grp_gf31_nrand_schar_fu_297->out_r_d0(grp_gf31_nrand_schar_fu_297_out_r_d0);
    grp_gf31_nrand_schar_fu_297->seed_address0(grp_gf31_nrand_schar_fu_297_seed_address0);
    grp_gf31_nrand_schar_fu_297->seed_ce0(grp_gf31_nrand_schar_fu_297_seed_ce0);
    grp_gf31_nrand_schar_fu_297->seed_q0(pk_q0);
    grp_gf31_nrand_fu_306 = new gf31_nrand("grp_gf31_nrand_fu_306");
    grp_gf31_nrand_fu_306->ap_clk(ap_clk);
    grp_gf31_nrand_fu_306->ap_rst(ap_rst);
    grp_gf31_nrand_fu_306->ap_start(grp_gf31_nrand_fu_306_ap_start);
    grp_gf31_nrand_fu_306->ap_done(grp_gf31_nrand_fu_306_ap_done);
    grp_gf31_nrand_fu_306->ap_idle(grp_gf31_nrand_fu_306_ap_idle);
    grp_gf31_nrand_fu_306->ap_ready(grp_gf31_nrand_fu_306_ap_ready);
    grp_gf31_nrand_fu_306->out_r_address0(grp_gf31_nrand_fu_306_out_r_address0);
    grp_gf31_nrand_fu_306->out_r_ce0(grp_gf31_nrand_fu_306_out_r_ce0);
    grp_gf31_nrand_fu_306->out_r_we0(grp_gf31_nrand_fu_306_out_r_we0);
    grp_gf31_nrand_fu_306->out_r_d0(grp_gf31_nrand_fu_306_out_r_d0);
    grp_gf31_nrand_fu_306->seed_address0(grp_gf31_nrand_fu_306_seed_address0);
    grp_gf31_nrand_fu_306->seed_ce0(grp_gf31_nrand_fu_306_seed_ce0);
    grp_gf31_nrand_fu_306->seed_q0(skbuf_q0);
    grp_keccak_squeezeblocks_fu_314 = new keccak_squeezeblocks("grp_keccak_squeezeblocks_fu_314");
    grp_keccak_squeezeblocks_fu_314->ap_clk(ap_clk);
    grp_keccak_squeezeblocks_fu_314->ap_rst(ap_rst);
    grp_keccak_squeezeblocks_fu_314->ap_start(grp_keccak_squeezeblocks_fu_314_ap_start);
    grp_keccak_squeezeblocks_fu_314->ap_done(grp_keccak_squeezeblocks_fu_314_ap_done);
    grp_keccak_squeezeblocks_fu_314->ap_idle(grp_keccak_squeezeblocks_fu_314_ap_idle);
    grp_keccak_squeezeblocks_fu_314->ap_ready(grp_keccak_squeezeblocks_fu_314_ap_ready);
    grp_keccak_squeezeblocks_fu_314->h_address0(grp_keccak_squeezeblocks_fu_314_h_address0);
    grp_keccak_squeezeblocks_fu_314->h_ce0(grp_keccak_squeezeblocks_fu_314_h_ce0);
    grp_keccak_squeezeblocks_fu_314->h_we0(grp_keccak_squeezeblocks_fu_314_h_we0);
    grp_keccak_squeezeblocks_fu_314->h_d0(grp_keccak_squeezeblocks_fu_314_h_d0);
    grp_keccak_squeezeblocks_fu_314->h_address1(grp_keccak_squeezeblocks_fu_314_h_address1);
    grp_keccak_squeezeblocks_fu_314->h_ce1(grp_keccak_squeezeblocks_fu_314_h_ce1);
    grp_keccak_squeezeblocks_fu_314->h_we1(grp_keccak_squeezeblocks_fu_314_h_we1);
    grp_keccak_squeezeblocks_fu_314->h_d1(grp_keccak_squeezeblocks_fu_314_h_d1);
    grp_keccak_squeezeblocks_fu_314->s_address0(grp_keccak_squeezeblocks_fu_314_s_address0);
    grp_keccak_squeezeblocks_fu_314->s_ce0(grp_keccak_squeezeblocks_fu_314_s_ce0);
    grp_keccak_squeezeblocks_fu_314->s_we0(grp_keccak_squeezeblocks_fu_314_s_we0);
    grp_keccak_squeezeblocks_fu_314->s_d0(grp_keccak_squeezeblocks_fu_314_s_d0);
    grp_keccak_squeezeblocks_fu_314->s_q0(s_q0);
    grp_keccak_squeezeblocks_fu_314->s_address1(grp_keccak_squeezeblocks_fu_314_s_address1);
    grp_keccak_squeezeblocks_fu_314->s_ce1(grp_keccak_squeezeblocks_fu_314_s_ce1);
    grp_keccak_squeezeblocks_fu_314->s_we1(grp_keccak_squeezeblocks_fu_314_s_we1);
    grp_keccak_squeezeblocks_fu_314->s_d1(grp_keccak_squeezeblocks_fu_314_s_d1);
    grp_keccak_squeezeblocks_fu_314->s_q1(s_q1);
    grp_randombytes_fu_322 = new randombytes("grp_randombytes_fu_322");
    grp_randombytes_fu_322->ap_clk(ap_clk);
    grp_randombytes_fu_322->ap_rst(ap_rst);
    grp_randombytes_fu_322->ap_start(grp_randombytes_fu_322_ap_start);
    grp_randombytes_fu_322->ap_done(grp_randombytes_fu_322_ap_done);
    grp_randombytes_fu_322->ap_idle(grp_randombytes_fu_322_ap_idle);
    grp_randombytes_fu_322->ap_ready(grp_randombytes_fu_322_ap_ready);
    grp_randombytes_fu_322->x_address0(grp_randombytes_fu_322_x_address0);
    grp_randombytes_fu_322->x_ce0(grp_randombytes_fu_322_x_ce0);
    grp_randombytes_fu_322->x_we0(grp_randombytes_fu_322_x_we0);
    grp_randombytes_fu_322->x_d0(grp_randombytes_fu_322_x_d0);
    grp_randombytes_fu_322->DRBG_ctx_V_address0(grp_randombytes_fu_322_DRBG_ctx_V_address0);
    grp_randombytes_fu_322->DRBG_ctx_V_ce0(grp_randombytes_fu_322_DRBG_ctx_V_ce0);
    grp_randombytes_fu_322->DRBG_ctx_V_we0(grp_randombytes_fu_322_DRBG_ctx_V_we0);
    grp_randombytes_fu_322->DRBG_ctx_V_d0(grp_randombytes_fu_322_DRBG_ctx_V_d0);
    grp_randombytes_fu_322->DRBG_ctx_V_q0(DRBG_ctx_V_q0);
    grp_randombytes_fu_322->DRBG_ctx_V_address1(grp_randombytes_fu_322_DRBG_ctx_V_address1);
    grp_randombytes_fu_322->DRBG_ctx_V_ce1(grp_randombytes_fu_322_DRBG_ctx_V_ce1);
    grp_randombytes_fu_322->DRBG_ctx_V_we1(grp_randombytes_fu_322_DRBG_ctx_V_we1);
    grp_randombytes_fu_322->DRBG_ctx_V_d1(grp_randombytes_fu_322_DRBG_ctx_V_d1);
    grp_randombytes_fu_322->DRBG_ctx_V_q1(DRBG_ctx_V_q1);
    grp_randombytes_fu_322->DRBG_ctx_Key_address0(grp_randombytes_fu_322_DRBG_ctx_Key_address0);
    grp_randombytes_fu_322->DRBG_ctx_Key_ce0(grp_randombytes_fu_322_DRBG_ctx_Key_ce0);
    grp_randombytes_fu_322->DRBG_ctx_Key_we0(grp_randombytes_fu_322_DRBG_ctx_Key_we0);
    grp_randombytes_fu_322->DRBG_ctx_Key_d0(grp_randombytes_fu_322_DRBG_ctx_Key_d0);
    grp_randombytes_fu_322->DRBG_ctx_Key_q0(DRBG_ctx_Key_q0);
    grp_randombytes_fu_322->DRBG_ctx_Key_address1(grp_randombytes_fu_322_DRBG_ctx_Key_address1);
    grp_randombytes_fu_322->DRBG_ctx_Key_ce1(grp_randombytes_fu_322_DRBG_ctx_Key_ce1);
    grp_randombytes_fu_322->DRBG_ctx_Key_q1(DRBG_ctx_Key_q1);
    grp_randombytes_fu_322->DRBG_ctx_reseed_counter_i(DRBG_ctx_reseed_counter_i);
    grp_randombytes_fu_322->DRBG_ctx_reseed_counter_o(grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o);
    grp_randombytes_fu_322->DRBG_ctx_reseed_counter_o_ap_vld(grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld);
    grp_MQ_fu_338 = new MQ("grp_MQ_fu_338");
    grp_MQ_fu_338->ap_clk(ap_clk);
    grp_MQ_fu_338->ap_rst(ap_rst);
    grp_MQ_fu_338->ap_start(grp_MQ_fu_338_ap_start);
    grp_MQ_fu_338->ap_done(grp_MQ_fu_338_ap_done);
    grp_MQ_fu_338->ap_idle(grp_MQ_fu_338_ap_idle);
    grp_MQ_fu_338->ap_ready(grp_MQ_fu_338_ap_ready);
    grp_MQ_fu_338->fx_address0(grp_MQ_fu_338_fx_address0);
    grp_MQ_fu_338->fx_ce0(grp_MQ_fu_338_fx_ce0);
    grp_MQ_fu_338->fx_we0(grp_MQ_fu_338_fx_we0);
    grp_MQ_fu_338->fx_d0(grp_MQ_fu_338_fx_d0);
    grp_MQ_fu_338->x_address0(grp_MQ_fu_338_x_address0);
    grp_MQ_fu_338->x_ce0(grp_MQ_fu_338_x_ce0);
    grp_MQ_fu_338->x_q0(sk_gf31_q0);
    grp_MQ_fu_338->x_address1(grp_MQ_fu_338_x_address1);
    grp_MQ_fu_338->x_ce1(grp_MQ_fu_338_x_ce1);
    grp_MQ_fu_338->x_q1(sk_gf31_q1);
    grp_MQ_fu_338->F_address0(grp_MQ_fu_338_F_address0);
    grp_MQ_fu_338->F_ce0(grp_MQ_fu_338_F_ce0);
    grp_MQ_fu_338->F_q0(F_q0);
    grp_MQ_fu_338->F_address1(grp_MQ_fu_338_F_address1);
    grp_MQ_fu_338->F_ce1(grp_MQ_fu_338_F_ce1);
    grp_MQ_fu_338->F_q1(F_q1);
    grp_keccak_absorb_fu_345 = new keccak_absorb("grp_keccak_absorb_fu_345");
    grp_keccak_absorb_fu_345->ap_clk(ap_clk);
    grp_keccak_absorb_fu_345->ap_rst(ap_rst);
    grp_keccak_absorb_fu_345->ap_start(grp_keccak_absorb_fu_345_ap_start);
    grp_keccak_absorb_fu_345->ap_done(grp_keccak_absorb_fu_345_ap_done);
    grp_keccak_absorb_fu_345->ap_idle(grp_keccak_absorb_fu_345_ap_idle);
    grp_keccak_absorb_fu_345->ap_ready(grp_keccak_absorb_fu_345_ap_ready);
    grp_keccak_absorb_fu_345->s_address0(grp_keccak_absorb_fu_345_s_address0);
    grp_keccak_absorb_fu_345->s_ce0(grp_keccak_absorb_fu_345_s_ce0);
    grp_keccak_absorb_fu_345->s_we0(grp_keccak_absorb_fu_345_s_we0);
    grp_keccak_absorb_fu_345->s_d0(grp_keccak_absorb_fu_345_s_d0);
    grp_keccak_absorb_fu_345->s_q0(s_q0);
    grp_keccak_absorb_fu_345->m_address0(grp_keccak_absorb_fu_345_m_address0);
    grp_keccak_absorb_fu_345->m_ce0(grp_keccak_absorb_fu_345_m_ce0);
    grp_keccak_absorb_fu_345->m_q0(sk_q0);
    grp_vgf31_unique_fu_352 = new vgf31_unique("grp_vgf31_unique_fu_352");
    grp_vgf31_unique_fu_352->out_r_address0(grp_vgf31_unique_fu_352_out_r_address0);
    grp_vgf31_unique_fu_352->out_r_ce0(grp_vgf31_unique_fu_352_out_r_ce0);
    grp_vgf31_unique_fu_352->out_r_d0(grp_vgf31_unique_fu_352_out_r_d0);
    grp_vgf31_unique_fu_352->out_r_q0(pk_gf31_q0);
    grp_vgf31_unique_fu_352->out_r_we0(grp_vgf31_unique_fu_352_out_r_we0);
    grp_vgf31_unique_fu_352->out_r_address1(grp_vgf31_unique_fu_352_out_r_address1);
    grp_vgf31_unique_fu_352->out_r_ce1(grp_vgf31_unique_fu_352_out_r_ce1);
    grp_vgf31_unique_fu_352->out_r_d1(grp_vgf31_unique_fu_352_out_r_d1);
    grp_vgf31_unique_fu_352->out_r_q1(ap_var_for_const0);
    grp_vgf31_unique_fu_352->out_r_we1(grp_vgf31_unique_fu_352_out_r_we1);
    grp_vgf31_unique_fu_352->ap_clk(ap_clk);
    grp_vgf31_unique_fu_352->ap_rst(ap_rst);
    grp_vgf31_unique_fu_352->ap_start(grp_vgf31_unique_fu_352_ap_start);
    grp_vgf31_unique_fu_352->ap_done(grp_vgf31_unique_fu_352_ap_done);
    grp_vgf31_unique_fu_352->ap_ready(grp_vgf31_unique_fu_352_ap_ready);
    grp_vgf31_unique_fu_352->ap_idle(grp_vgf31_unique_fu_352_ap_idle);
    grp_vgf31_unique_fu_352->ap_continue(grp_vgf31_unique_fu_352_ap_continue);
    grp_dataflow_parent_loop_1_fu_357 = new dataflow_parent_loop_1("grp_dataflow_parent_loop_1_fu_357");
    grp_dataflow_parent_loop_1_fu_357->out_r_address0(grp_dataflow_parent_loop_1_fu_357_out_r_address0);
    grp_dataflow_parent_loop_1_fu_357->out_r_ce0(grp_dataflow_parent_loop_1_fu_357_out_r_ce0);
    grp_dataflow_parent_loop_1_fu_357->out_r_d0(grp_dataflow_parent_loop_1_fu_357_out_r_d0);
    grp_dataflow_parent_loop_1_fu_357->out_r_q0(ap_var_for_const1);
    grp_dataflow_parent_loop_1_fu_357->out_r_we0(grp_dataflow_parent_loop_1_fu_357_out_r_we0);
    grp_dataflow_parent_loop_1_fu_357->out_r_address1(grp_dataflow_parent_loop_1_fu_357_out_r_address1);
    grp_dataflow_parent_loop_1_fu_357->out_r_ce1(grp_dataflow_parent_loop_1_fu_357_out_r_ce1);
    grp_dataflow_parent_loop_1_fu_357->out_r_d1(grp_dataflow_parent_loop_1_fu_357_out_r_d1);
    grp_dataflow_parent_loop_1_fu_357->out_r_q1(ap_var_for_const1);
    grp_dataflow_parent_loop_1_fu_357->out_r_we1(grp_dataflow_parent_loop_1_fu_357_out_r_we1);
    grp_dataflow_parent_loop_1_fu_357->ap_clk(ap_clk);
    grp_dataflow_parent_loop_1_fu_357->ap_rst(ap_rst);
    grp_dataflow_parent_loop_1_fu_357->ap_start(grp_dataflow_parent_loop_1_fu_357_ap_start);
    grp_dataflow_parent_loop_1_fu_357->ap_done(grp_dataflow_parent_loop_1_fu_357_ap_done);
    grp_dataflow_parent_loop_1_fu_357->ap_ready(grp_dataflow_parent_loop_1_fu_357_ap_ready);
    grp_dataflow_parent_loop_1_fu_357->ap_idle(grp_dataflow_parent_loop_1_fu_357_ap_idle);
    grp_dataflow_parent_loop_1_fu_357->ap_continue(grp_dataflow_parent_loop_1_fu_357_ap_continue);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DRBG_ctx_Key_address0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_address1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_ce0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_ce1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_d0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_we0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_Key_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_address0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_address1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_ce0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_ce1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_d0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_d1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_we0);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_we1);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_V_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_reseed_counter_o);
    sensitive << ( DRBG_ctx_reseed_counter_i );
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o );
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_reseed_counter_o_ap_vld);
    sensitive << ( grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_F_address0);
    sensitive << ( grp_gf31_nrand_schar_fu_297_out_r_address0 );
    sensitive << ( grp_MQ_fu_338_F_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_F_ce0);
    sensitive << ( grp_gf31_nrand_schar_fu_297_out_r_ce0 );
    sensitive << ( grp_MQ_fu_338_F_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_F_ce1);
    sensitive << ( grp_MQ_fu_338_F_ce1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_F_we0);
    sensitive << ( grp_gf31_nrand_schar_fu_297_out_r_we0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_add_ln134_1_fu_461_p2);
    sensitive << ( trunc_ln134_1_fu_457_p1 );

    SC_METHOD(thread_add_ln134_fu_446_p2);
    sensitive << ( trunc_ln134_fu_442_p1 );

    SC_METHOD(thread_add_ln138_fu_547_p2);
    sensitive << ( trunc_ln138_fu_539_p1 );

    SC_METHOD(thread_and_ln134_1_fu_526_p2);
    sensitive << ( trunc_ln134_2_fu_516_p1 );
    sensitive << ( xor_ln134_fu_520_p2 );

    SC_METHOD(thread_and_ln134_fu_494_p2);
    sensitive << ( pk_q0 );
    sensitive << ( shl_ln134_fu_489_p2 );

    SC_METHOD(thread_and_ln138_fu_580_p2);
    sensitive << ( pk_q0 );
    sensitive << ( xor_ln138_fu_574_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_on_subcall_done);
    sensitive << ( grp_gf31_nrand_schar_fu_297_ap_done );
    sensitive << ( grp_gf31_nrand_fu_306_ap_done );

    SC_METHOD(thread_ap_block_state14_on_subcall_done);
    sensitive << ( grp_MQ_fu_338_ap_done );
    sensitive << ( ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready );
    sensitive << ( ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done );

    SC_METHOD(thread_ap_block_state16_on_subcall_done);
    sensitive << ( ap_sync_grp_vgf31_unique_fu_352_ap_ready );
    sensitive << ( ap_sync_grp_vgf31_unique_fu_352_ap_done );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( icmp_ln80_fu_400_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln131_fu_422_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln131_fu_422_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln131_fu_422_p2 );

    SC_METHOD(thread_ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done);
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_ap_done );
    sensitive << ( ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done );

    SC_METHOD(thread_ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready);
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_ap_ready );
    sensitive << ( ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready );

    SC_METHOD(thread_ap_sync_grp_vgf31_unique_fu_352_ap_done);
    sensitive << ( grp_vgf31_unique_fu_352_ap_done );
    sensitive << ( ap_sync_reg_grp_vgf31_unique_fu_352_ap_done );

    SC_METHOD(thread_ap_sync_grp_vgf31_unique_fu_352_ap_ready);
    sensitive << ( grp_vgf31_unique_fu_352_ap_ready );
    sensitive << ( ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready );

    SC_METHOD(thread_d_1_fu_563_p2);
    sensitive << ( d_1_i_reg_287 );

    SC_METHOD(thread_d_fu_483_p2);
    sensitive << ( d_0_i_reg_275 );

    SC_METHOD(thread_d_i_address0);
    sensitive << ( zext_ln405_fu_383_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_h_address0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_d_i_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_h_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_d_i_ce1);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_h_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_d_i_we0);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_h_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_d_i_we1);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_h_we1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_MQ_fu_338_ap_start);
    sensitive << ( grp_MQ_fu_338_ap_start_reg );

    SC_METHOD(thread_grp_dataflow_parent_loop_1_fu_357_ap_continue);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state14_on_subcall_done );

    SC_METHOD(thread_grp_dataflow_parent_loop_1_fu_357_ap_start);
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_ap_start_reg );

    SC_METHOD(thread_grp_gf31_nrand_fu_306_ap_start);
    sensitive << ( grp_gf31_nrand_fu_306_ap_start_reg );

    SC_METHOD(thread_grp_gf31_nrand_schar_fu_297_ap_start);
    sensitive << ( grp_gf31_nrand_schar_fu_297_ap_start_reg );

    SC_METHOD(thread_grp_keccak_absorb_fu_345_ap_start);
    sensitive << ( grp_keccak_absorb_fu_345_ap_start_reg );

    SC_METHOD(thread_grp_keccak_squeezeblocks_fu_314_ap_start);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_ap_start_reg );

    SC_METHOD(thread_grp_randombytes_fu_322_ap_start);
    sensitive << ( grp_randombytes_fu_322_ap_start_reg );

    SC_METHOD(thread_grp_vgf31_unique_fu_352_ap_continue);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );

    SC_METHOD(thread_grp_vgf31_unique_fu_352_ap_start);
    sensitive << ( grp_vgf31_unique_fu_352_ap_start_reg );

    SC_METHOD(thread_i_12_fu_394_p2);
    sensitive << ( i_1_i_reg_241 );

    SC_METHOD(thread_i_14_fu_472_p2);
    sensitive << ( i_13_fu_132 );

    SC_METHOD(thread_i_fu_377_p2);
    sensitive << ( i_0_i_reg_230 );

    SC_METHOD(thread_icmp_ln131_fu_422_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( j_1_i_reg_263 );

    SC_METHOD(thread_icmp_ln396_fu_371_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_i_reg_230 );

    SC_METHOD(thread_icmp_ln405_fu_388_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_1_i_reg_241 );

    SC_METHOD(thread_icmp_ln80_fu_400_p2);
    sensitive << ( loop_0_reg_252 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_428_p2);
    sensitive << ( j_1_i_reg_263 );

    SC_METHOD(thread_loop_fu_406_p2);
    sensitive << ( loop_0_reg_252 );

    SC_METHOD(thread_lshr_ln134_fu_510_p2);
    sensitive << ( zext_ln134_1_fu_500_p1 );
    sensitive << ( sub_ln134_fu_504_p2 );

    SC_METHOD(thread_or_ln134_fu_532_p2);
    sensitive << ( and_ln134_1_fu_526_p2 );
    sensitive << ( and_ln134_fu_494_p2 );

    SC_METHOD(thread_or_ln138_fu_599_p2);
    sensitive << ( shl_ln138_1_fu_594_p2 );
    sensitive << ( and_ln138_fu_580_p2 );

    SC_METHOD(thread_pk_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln81_reg_642 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( pk_addr_1_reg_671 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( pk_addr_2_reg_697 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_gf31_nrand_schar_fu_297_seed_address0 );
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_out_r_address0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln134_fu_452_p1 );
    sensitive << ( sext_ln138_fu_553_p1 );

    SC_METHOD(thread_pk_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_gf31_nrand_schar_fu_297_seed_ce0 );
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_pk_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( skbuf_q0 );
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_out_r_d0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_ln134_fu_532_p2 );
    sensitive << ( or_ln138_fu_599_p2 );

    SC_METHOD(thread_pk_gf31_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( grp_MQ_fu_338_fx_address0 );
    sensitive << ( grp_vgf31_unique_fu_352_out_r_address0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln134_fu_467_p1 );
    sensitive << ( zext_ln138_fu_558_p1 );

    SC_METHOD(thread_pk_gf31_ce0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( grp_MQ_fu_338_fx_ce0 );
    sensitive << ( grp_vgf31_unique_fu_352_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_pk_gf31_d0);
    sensitive << ( grp_MQ_fu_338_fx_d0 );
    sensitive << ( grp_vgf31_unique_fu_352_out_r_d0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_pk_gf31_we0);
    sensitive << ( grp_MQ_fu_338_fx_we0 );
    sensitive << ( grp_vgf31_unique_fu_352_out_r_we0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_pk_we0);
    sensitive << ( icmp_ln80_reg_633 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_7_reg_667 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_dataflow_parent_loop_1_fu_357_out_r_we0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_address0 );
    sensitive << ( grp_keccak_absorb_fu_345_s_address0 );
    sensitive << ( icmp_ln396_fu_371_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln396_fu_366_p1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_ce0 );
    sensitive << ( grp_keccak_absorb_fu_345_s_ce0 );
    sensitive << ( icmp_ln396_fu_371_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_d0 );
    sensitive << ( grp_keccak_absorb_fu_345_s_d0 );
    sensitive << ( icmp_ln396_fu_371_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_we0 );
    sensitive << ( grp_keccak_absorb_fu_345_s_we0 );
    sensitive << ( icmp_ln396_fu_371_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_keccak_squeezeblocks_fu_314_s_we1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sext_ln134_fu_452_p1);
    sensitive << ( add_ln134_fu_446_p2 );

    SC_METHOD(thread_sext_ln138_fu_553_p1);
    sensitive << ( add_ln138_fu_547_p2 );

    SC_METHOD(thread_shl_ln134_fu_489_p2);
    sensitive << ( add_ln134_1_reg_676 );

    SC_METHOD(thread_shl_ln138_1_fu_594_p2);
    sensitive << ( trunc_ln138_1_reg_691 );
    sensitive << ( zext_ln138_1_fu_590_p1 );

    SC_METHOD(thread_shl_ln138_fu_569_p2);
    sensitive << ( trunc_ln138_1_reg_691 );

    SC_METHOD(thread_sk_address0);
    sensitive << ( grp_randombytes_fu_322_x_address0 );
    sensitive << ( grp_keccak_absorb_fu_345_m_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sk_ce0);
    sensitive << ( grp_randombytes_fu_322_x_ce0 );
    sensitive << ( grp_keccak_absorb_fu_345_m_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sk_d0);
    sensitive << ( grp_randombytes_fu_322_x_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sk_gf31_address0);
    sensitive << ( grp_gf31_nrand_fu_306_out_r_address0 );
    sensitive << ( grp_MQ_fu_338_x_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sk_gf31_ce0);
    sensitive << ( grp_gf31_nrand_fu_306_out_r_ce0 );
    sensitive << ( grp_MQ_fu_338_x_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sk_gf31_ce1);
    sensitive << ( grp_MQ_fu_338_x_ce1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sk_gf31_we0);
    sensitive << ( grp_gf31_nrand_fu_306_out_r_we0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_sk_we0);
    sensitive << ( grp_randombytes_fu_322_x_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_skbuf_address0);
    sensitive << ( zext_ln405_reg_614 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln81_fu_412_p1 );
    sensitive << ( grp_gf31_nrand_fu_306_seed_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_skbuf_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_gf31_nrand_fu_306_seed_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_skbuf_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sub_ln134_fu_504_p2);
    sensitive << ( d_0_i_reg_275 );

    SC_METHOD(thread_tmp_7_fu_434_p3);
    sensitive << ( d_0_i_reg_275 );

    SC_METHOD(thread_trunc_ln134_1_fu_457_p1);
    sensitive << ( d_0_i_reg_275 );

    SC_METHOD(thread_trunc_ln134_2_fu_516_p1);
    sensitive << ( lshr_ln134_fu_510_p2 );

    SC_METHOD(thread_trunc_ln134_fu_442_p1);
    sensitive << ( i_13_fu_132 );

    SC_METHOD(thread_trunc_ln138_1_fu_543_p1);
    sensitive << ( d_1_i_reg_287 );

    SC_METHOD(thread_trunc_ln138_2_fu_586_p1);
    sensitive << ( pk_gf31_q0 );

    SC_METHOD(thread_trunc_ln138_fu_539_p1);
    sensitive << ( i_13_fu_132 );

    SC_METHOD(thread_xor_ln134_fu_520_p2);
    sensitive << ( shl_ln134_fu_489_p2 );

    SC_METHOD(thread_xor_ln138_fu_574_p2);
    sensitive << ( shl_ln138_fu_569_p2 );

    SC_METHOD(thread_zext_ln134_1_fu_500_p1);
    sensitive << ( pk_gf31_q0 );

    SC_METHOD(thread_zext_ln134_fu_467_p1);
    sensitive << ( j_1_i_reg_263 );

    SC_METHOD(thread_zext_ln138_1_fu_590_p1);
    sensitive << ( trunc_ln138_2_fu_586_p1 );

    SC_METHOD(thread_zext_ln138_fu_558_p1);
    sensitive << ( j_1_i_reg_263 );

    SC_METHOD(thread_zext_ln396_fu_366_p1);
    sensitive << ( i_0_i_reg_230 );

    SC_METHOD(thread_zext_ln405_fu_383_p1);
    sensitive << ( i_1_i_reg_241 );

    SC_METHOD(thread_zext_ln81_fu_412_p1);
    sensitive << ( loop_0_reg_252 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln405_fu_388_p2 );
    sensitive << ( icmp_ln80_fu_400_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln131_fu_422_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( grp_keccak_squeezeblocks_fu_314_ap_done );
    sensitive << ( grp_randombytes_fu_322_ap_done );
    sensitive << ( grp_keccak_absorb_fu_345_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln396_fu_371_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_state14_on_subcall_done );
    sensitive << ( ap_block_state12_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_gf31_nrand_schar_fu_297_ap_start_reg = SC_LOGIC_0;
    grp_gf31_nrand_fu_306_ap_start_reg = SC_LOGIC_0;
    grp_keccak_squeezeblocks_fu_314_ap_start_reg = SC_LOGIC_0;
    grp_randombytes_fu_322_ap_start_reg = SC_LOGIC_0;
    grp_MQ_fu_338_ap_start_reg = SC_LOGIC_0;
    grp_keccak_absorb_fu_345_ap_start_reg = SC_LOGIC_0;
    grp_vgf31_unique_fu_352_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_vgf31_unique_fu_352_ap_done = SC_LOGIC_0;
    grp_dataflow_parent_loop_1_fu_357_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_keypair_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pk_address0, "(port)pk_address0");
    sc_trace(mVcdFile, pk_ce0, "(port)pk_ce0");
    sc_trace(mVcdFile, pk_we0, "(port)pk_we0");
    sc_trace(mVcdFile, pk_d0, "(port)pk_d0");
    sc_trace(mVcdFile, pk_q0, "(port)pk_q0");
    sc_trace(mVcdFile, sk_address0, "(port)sk_address0");
    sc_trace(mVcdFile, sk_ce0, "(port)sk_ce0");
    sc_trace(mVcdFile, sk_we0, "(port)sk_we0");
    sc_trace(mVcdFile, sk_d0, "(port)sk_d0");
    sc_trace(mVcdFile, sk_q0, "(port)sk_q0");
    sc_trace(mVcdFile, DRBG_ctx_V_address0, "(port)DRBG_ctx_V_address0");
    sc_trace(mVcdFile, DRBG_ctx_V_ce0, "(port)DRBG_ctx_V_ce0");
    sc_trace(mVcdFile, DRBG_ctx_V_we0, "(port)DRBG_ctx_V_we0");
    sc_trace(mVcdFile, DRBG_ctx_V_d0, "(port)DRBG_ctx_V_d0");
    sc_trace(mVcdFile, DRBG_ctx_V_q0, "(port)DRBG_ctx_V_q0");
    sc_trace(mVcdFile, DRBG_ctx_V_address1, "(port)DRBG_ctx_V_address1");
    sc_trace(mVcdFile, DRBG_ctx_V_ce1, "(port)DRBG_ctx_V_ce1");
    sc_trace(mVcdFile, DRBG_ctx_V_we1, "(port)DRBG_ctx_V_we1");
    sc_trace(mVcdFile, DRBG_ctx_V_d1, "(port)DRBG_ctx_V_d1");
    sc_trace(mVcdFile, DRBG_ctx_V_q1, "(port)DRBG_ctx_V_q1");
    sc_trace(mVcdFile, DRBG_ctx_Key_address0, "(port)DRBG_ctx_Key_address0");
    sc_trace(mVcdFile, DRBG_ctx_Key_ce0, "(port)DRBG_ctx_Key_ce0");
    sc_trace(mVcdFile, DRBG_ctx_Key_we0, "(port)DRBG_ctx_Key_we0");
    sc_trace(mVcdFile, DRBG_ctx_Key_d0, "(port)DRBG_ctx_Key_d0");
    sc_trace(mVcdFile, DRBG_ctx_Key_q0, "(port)DRBG_ctx_Key_q0");
    sc_trace(mVcdFile, DRBG_ctx_Key_address1, "(port)DRBG_ctx_Key_address1");
    sc_trace(mVcdFile, DRBG_ctx_Key_ce1, "(port)DRBG_ctx_Key_ce1");
    sc_trace(mVcdFile, DRBG_ctx_Key_q1, "(port)DRBG_ctx_Key_q1");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_i, "(port)DRBG_ctx_reseed_counter_i");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_o, "(port)DRBG_ctx_reseed_counter_o");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_o_ap_vld, "(port)DRBG_ctx_reseed_counter_o_ap_vld");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, loop_0_reg_252, "loop_0_reg_252");
    sc_trace(mVcdFile, i_fu_377_p2, "i_fu_377_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln405_fu_383_p1, "zext_ln405_fu_383_p1");
    sc_trace(mVcdFile, zext_ln405_reg_614, "zext_ln405_reg_614");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln405_fu_388_p2, "icmp_ln405_fu_388_p2");
    sc_trace(mVcdFile, i_12_fu_394_p2, "i_12_fu_394_p2");
    sc_trace(mVcdFile, i_12_reg_623, "i_12_reg_623");
    sc_trace(mVcdFile, icmp_ln80_fu_400_p2, "icmp_ln80_fu_400_p2");
    sc_trace(mVcdFile, icmp_ln80_reg_633, "icmp_ln80_reg_633");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, loop_fu_406_p2, "loop_fu_406_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln81_fu_412_p1, "zext_ln81_fu_412_p1");
    sc_trace(mVcdFile, zext_ln81_reg_642, "zext_ln81_reg_642");
    sc_trace(mVcdFile, j_fu_428_p2, "j_fu_428_p2");
    sc_trace(mVcdFile, j_reg_662, "j_reg_662");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_7_fu_434_p3, "tmp_7_fu_434_p3");
    sc_trace(mVcdFile, tmp_7_reg_667, "tmp_7_reg_667");
    sc_trace(mVcdFile, icmp_ln131_fu_422_p2, "icmp_ln131_fu_422_p2");
    sc_trace(mVcdFile, pk_addr_1_reg_671, "pk_addr_1_reg_671");
    sc_trace(mVcdFile, add_ln134_1_fu_461_p2, "add_ln134_1_fu_461_p2");
    sc_trace(mVcdFile, add_ln134_1_reg_676, "add_ln134_1_reg_676");
    sc_trace(mVcdFile, d_fu_483_p2, "d_fu_483_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, trunc_ln138_1_fu_543_p1, "trunc_ln138_1_fu_543_p1");
    sc_trace(mVcdFile, trunc_ln138_1_reg_691, "trunc_ln138_1_reg_691");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, pk_addr_2_reg_697, "pk_addr_2_reg_697");
    sc_trace(mVcdFile, d_1_fu_563_p2, "d_1_fu_563_p2");
    sc_trace(mVcdFile, d_1_reg_707, "d_1_reg_707");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, s_address0, "s_address0");
    sc_trace(mVcdFile, s_ce0, "s_ce0");
    sc_trace(mVcdFile, s_we0, "s_we0");
    sc_trace(mVcdFile, s_d0, "s_d0");
    sc_trace(mVcdFile, s_q0, "s_q0");
    sc_trace(mVcdFile, s_ce1, "s_ce1");
    sc_trace(mVcdFile, s_we1, "s_we1");
    sc_trace(mVcdFile, s_q1, "s_q1");
    sc_trace(mVcdFile, d_i_address0, "d_i_address0");
    sc_trace(mVcdFile, d_i_ce0, "d_i_ce0");
    sc_trace(mVcdFile, d_i_we0, "d_i_we0");
    sc_trace(mVcdFile, d_i_q0, "d_i_q0");
    sc_trace(mVcdFile, d_i_ce1, "d_i_ce1");
    sc_trace(mVcdFile, d_i_we1, "d_i_we1");
    sc_trace(mVcdFile, F_address0, "F_address0");
    sc_trace(mVcdFile, F_ce0, "F_ce0");
    sc_trace(mVcdFile, F_we0, "F_we0");
    sc_trace(mVcdFile, F_q0, "F_q0");
    sc_trace(mVcdFile, F_ce1, "F_ce1");
    sc_trace(mVcdFile, F_q1, "F_q1");
    sc_trace(mVcdFile, skbuf_address0, "skbuf_address0");
    sc_trace(mVcdFile, skbuf_ce0, "skbuf_ce0");
    sc_trace(mVcdFile, skbuf_we0, "skbuf_we0");
    sc_trace(mVcdFile, skbuf_q0, "skbuf_q0");
    sc_trace(mVcdFile, sk_gf31_address0, "sk_gf31_address0");
    sc_trace(mVcdFile, sk_gf31_ce0, "sk_gf31_ce0");
    sc_trace(mVcdFile, sk_gf31_we0, "sk_gf31_we0");
    sc_trace(mVcdFile, sk_gf31_q0, "sk_gf31_q0");
    sc_trace(mVcdFile, sk_gf31_ce1, "sk_gf31_ce1");
    sc_trace(mVcdFile, sk_gf31_q1, "sk_gf31_q1");
    sc_trace(mVcdFile, pk_gf31_address0, "pk_gf31_address0");
    sc_trace(mVcdFile, pk_gf31_ce0, "pk_gf31_ce0");
    sc_trace(mVcdFile, pk_gf31_we0, "pk_gf31_we0");
    sc_trace(mVcdFile, pk_gf31_d0, "pk_gf31_d0");
    sc_trace(mVcdFile, pk_gf31_q0, "pk_gf31_q0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_ap_start, "grp_gf31_nrand_schar_fu_297_ap_start");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_ap_done, "grp_gf31_nrand_schar_fu_297_ap_done");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_ap_idle, "grp_gf31_nrand_schar_fu_297_ap_idle");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_ap_ready, "grp_gf31_nrand_schar_fu_297_ap_ready");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_out_r_address0, "grp_gf31_nrand_schar_fu_297_out_r_address0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_out_r_ce0, "grp_gf31_nrand_schar_fu_297_out_r_ce0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_out_r_we0, "grp_gf31_nrand_schar_fu_297_out_r_we0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_out_r_d0, "grp_gf31_nrand_schar_fu_297_out_r_d0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_seed_address0, "grp_gf31_nrand_schar_fu_297_seed_address0");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_seed_ce0, "grp_gf31_nrand_schar_fu_297_seed_ce0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_ap_start, "grp_gf31_nrand_fu_306_ap_start");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_ap_done, "grp_gf31_nrand_fu_306_ap_done");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_ap_idle, "grp_gf31_nrand_fu_306_ap_idle");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_ap_ready, "grp_gf31_nrand_fu_306_ap_ready");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_out_r_address0, "grp_gf31_nrand_fu_306_out_r_address0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_out_r_ce0, "grp_gf31_nrand_fu_306_out_r_ce0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_out_r_we0, "grp_gf31_nrand_fu_306_out_r_we0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_out_r_d0, "grp_gf31_nrand_fu_306_out_r_d0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_seed_address0, "grp_gf31_nrand_fu_306_seed_address0");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_seed_ce0, "grp_gf31_nrand_fu_306_seed_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_ap_start, "grp_keccak_squeezeblocks_fu_314_ap_start");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_ap_done, "grp_keccak_squeezeblocks_fu_314_ap_done");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_ap_idle, "grp_keccak_squeezeblocks_fu_314_ap_idle");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_ap_ready, "grp_keccak_squeezeblocks_fu_314_ap_ready");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_address0, "grp_keccak_squeezeblocks_fu_314_h_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_ce0, "grp_keccak_squeezeblocks_fu_314_h_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_we0, "grp_keccak_squeezeblocks_fu_314_h_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_d0, "grp_keccak_squeezeblocks_fu_314_h_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_address1, "grp_keccak_squeezeblocks_fu_314_h_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_ce1, "grp_keccak_squeezeblocks_fu_314_h_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_we1, "grp_keccak_squeezeblocks_fu_314_h_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_h_d1, "grp_keccak_squeezeblocks_fu_314_h_d1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_address0, "grp_keccak_squeezeblocks_fu_314_s_address0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_ce0, "grp_keccak_squeezeblocks_fu_314_s_ce0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_we0, "grp_keccak_squeezeblocks_fu_314_s_we0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_d0, "grp_keccak_squeezeblocks_fu_314_s_d0");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_address1, "grp_keccak_squeezeblocks_fu_314_s_address1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_ce1, "grp_keccak_squeezeblocks_fu_314_s_ce1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_we1, "grp_keccak_squeezeblocks_fu_314_s_we1");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_s_d1, "grp_keccak_squeezeblocks_fu_314_s_d1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_ap_start, "grp_randombytes_fu_322_ap_start");
    sc_trace(mVcdFile, grp_randombytes_fu_322_ap_done, "grp_randombytes_fu_322_ap_done");
    sc_trace(mVcdFile, grp_randombytes_fu_322_ap_idle, "grp_randombytes_fu_322_ap_idle");
    sc_trace(mVcdFile, grp_randombytes_fu_322_ap_ready, "grp_randombytes_fu_322_ap_ready");
    sc_trace(mVcdFile, grp_randombytes_fu_322_x_address0, "grp_randombytes_fu_322_x_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_x_ce0, "grp_randombytes_fu_322_x_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_x_we0, "grp_randombytes_fu_322_x_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_x_d0, "grp_randombytes_fu_322_x_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_address0, "grp_randombytes_fu_322_DRBG_ctx_V_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_ce0, "grp_randombytes_fu_322_DRBG_ctx_V_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_we0, "grp_randombytes_fu_322_DRBG_ctx_V_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_d0, "grp_randombytes_fu_322_DRBG_ctx_V_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_address1, "grp_randombytes_fu_322_DRBG_ctx_V_address1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_ce1, "grp_randombytes_fu_322_DRBG_ctx_V_ce1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_we1, "grp_randombytes_fu_322_DRBG_ctx_V_we1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_V_d1, "grp_randombytes_fu_322_DRBG_ctx_V_d1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_address0, "grp_randombytes_fu_322_DRBG_ctx_Key_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_ce0, "grp_randombytes_fu_322_DRBG_ctx_Key_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_we0, "grp_randombytes_fu_322_DRBG_ctx_Key_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_d0, "grp_randombytes_fu_322_DRBG_ctx_Key_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_address1, "grp_randombytes_fu_322_DRBG_ctx_Key_address1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_Key_ce1, "grp_randombytes_fu_322_DRBG_ctx_Key_ce1");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o, "grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o");
    sc_trace(mVcdFile, grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld, "grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld");
    sc_trace(mVcdFile, grp_MQ_fu_338_ap_start, "grp_MQ_fu_338_ap_start");
    sc_trace(mVcdFile, grp_MQ_fu_338_ap_done, "grp_MQ_fu_338_ap_done");
    sc_trace(mVcdFile, grp_MQ_fu_338_ap_idle, "grp_MQ_fu_338_ap_idle");
    sc_trace(mVcdFile, grp_MQ_fu_338_ap_ready, "grp_MQ_fu_338_ap_ready");
    sc_trace(mVcdFile, grp_MQ_fu_338_fx_address0, "grp_MQ_fu_338_fx_address0");
    sc_trace(mVcdFile, grp_MQ_fu_338_fx_ce0, "grp_MQ_fu_338_fx_ce0");
    sc_trace(mVcdFile, grp_MQ_fu_338_fx_we0, "grp_MQ_fu_338_fx_we0");
    sc_trace(mVcdFile, grp_MQ_fu_338_fx_d0, "grp_MQ_fu_338_fx_d0");
    sc_trace(mVcdFile, grp_MQ_fu_338_x_address0, "grp_MQ_fu_338_x_address0");
    sc_trace(mVcdFile, grp_MQ_fu_338_x_ce0, "grp_MQ_fu_338_x_ce0");
    sc_trace(mVcdFile, grp_MQ_fu_338_x_address1, "grp_MQ_fu_338_x_address1");
    sc_trace(mVcdFile, grp_MQ_fu_338_x_ce1, "grp_MQ_fu_338_x_ce1");
    sc_trace(mVcdFile, grp_MQ_fu_338_F_address0, "grp_MQ_fu_338_F_address0");
    sc_trace(mVcdFile, grp_MQ_fu_338_F_ce0, "grp_MQ_fu_338_F_ce0");
    sc_trace(mVcdFile, grp_MQ_fu_338_F_address1, "grp_MQ_fu_338_F_address1");
    sc_trace(mVcdFile, grp_MQ_fu_338_F_ce1, "grp_MQ_fu_338_F_ce1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_ap_start, "grp_keccak_absorb_fu_345_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_ap_done, "grp_keccak_absorb_fu_345_ap_done");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_ap_idle, "grp_keccak_absorb_fu_345_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_ap_ready, "grp_keccak_absorb_fu_345_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_s_address0, "grp_keccak_absorb_fu_345_s_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_s_ce0, "grp_keccak_absorb_fu_345_s_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_s_we0, "grp_keccak_absorb_fu_345_s_we0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_s_d0, "grp_keccak_absorb_fu_345_s_d0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_m_address0, "grp_keccak_absorb_fu_345_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_m_ce0, "grp_keccak_absorb_fu_345_m_ce0");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_address0, "grp_vgf31_unique_fu_352_out_r_address0");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_ce0, "grp_vgf31_unique_fu_352_out_r_ce0");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_d0, "grp_vgf31_unique_fu_352_out_r_d0");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_we0, "grp_vgf31_unique_fu_352_out_r_we0");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_address1, "grp_vgf31_unique_fu_352_out_r_address1");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_ce1, "grp_vgf31_unique_fu_352_out_r_ce1");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_d1, "grp_vgf31_unique_fu_352_out_r_d1");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_out_r_we1, "grp_vgf31_unique_fu_352_out_r_we1");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_start, "grp_vgf31_unique_fu_352_ap_start");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_done, "grp_vgf31_unique_fu_352_ap_done");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_ready, "grp_vgf31_unique_fu_352_ap_ready");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_idle, "grp_vgf31_unique_fu_352_ap_idle");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_continue, "grp_vgf31_unique_fu_352_ap_continue");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_address0, "grp_dataflow_parent_loop_1_fu_357_out_r_address0");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_ce0, "grp_dataflow_parent_loop_1_fu_357_out_r_ce0");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_d0, "grp_dataflow_parent_loop_1_fu_357_out_r_d0");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_we0, "grp_dataflow_parent_loop_1_fu_357_out_r_we0");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_address1, "grp_dataflow_parent_loop_1_fu_357_out_r_address1");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_ce1, "grp_dataflow_parent_loop_1_fu_357_out_r_ce1");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_d1, "grp_dataflow_parent_loop_1_fu_357_out_r_d1");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_out_r_we1, "grp_dataflow_parent_loop_1_fu_357_out_r_we1");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_start, "grp_dataflow_parent_loop_1_fu_357_ap_start");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_done, "grp_dataflow_parent_loop_1_fu_357_ap_done");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_ready, "grp_dataflow_parent_loop_1_fu_357_ap_ready");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_idle, "grp_dataflow_parent_loop_1_fu_357_ap_idle");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_continue, "grp_dataflow_parent_loop_1_fu_357_ap_continue");
    sc_trace(mVcdFile, i_0_i_reg_230, "i_0_i_reg_230");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln396_fu_371_p2, "icmp_ln396_fu_371_p2");
    sc_trace(mVcdFile, i_1_i_reg_241, "i_1_i_reg_241");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_1_i_reg_263, "j_1_i_reg_263");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_sync_grp_vgf31_unique_fu_352_ap_ready, "ap_sync_grp_vgf31_unique_fu_352_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_vgf31_unique_fu_352_ap_done, "ap_sync_grp_vgf31_unique_fu_352_ap_done");
    sc_trace(mVcdFile, ap_block_state16_on_subcall_done, "ap_block_state16_on_subcall_done");
    sc_trace(mVcdFile, d_0_i_reg_275, "d_0_i_reg_275");
    sc_trace(mVcdFile, d_1_i_reg_287, "d_1_i_reg_287");
    sc_trace(mVcdFile, grp_gf31_nrand_schar_fu_297_ap_start_reg, "grp_gf31_nrand_schar_fu_297_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_gf31_nrand_fu_306_ap_start_reg, "grp_gf31_nrand_fu_306_ap_start_reg");
    sc_trace(mVcdFile, grp_keccak_squeezeblocks_fu_314_ap_start_reg, "grp_keccak_squeezeblocks_fu_314_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_randombytes_fu_322_ap_start_reg, "grp_randombytes_fu_322_ap_start_reg");
    sc_trace(mVcdFile, grp_MQ_fu_338_ap_start_reg, "grp_MQ_fu_338_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_345_ap_start_reg, "grp_keccak_absorb_fu_345_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_vgf31_unique_fu_352_ap_start_reg, "grp_vgf31_unique_fu_352_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready, "ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_vgf31_unique_fu_352_ap_done, "ap_sync_reg_grp_vgf31_unique_fu_352_ap_done");
    sc_trace(mVcdFile, grp_dataflow_parent_loop_1_fu_357_ap_start_reg, "grp_dataflow_parent_loop_1_fu_357_ap_start_reg");
    sc_trace(mVcdFile, ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready, "ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done, "ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done");
    sc_trace(mVcdFile, ap_block_state14_on_subcall_done, "ap_block_state14_on_subcall_done");
    sc_trace(mVcdFile, ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready, "ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done, "ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done");
    sc_trace(mVcdFile, zext_ln396_fu_366_p1, "zext_ln396_fu_366_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, sext_ln134_fu_452_p1, "sext_ln134_fu_452_p1");
    sc_trace(mVcdFile, zext_ln134_fu_467_p1, "zext_ln134_fu_467_p1");
    sc_trace(mVcdFile, sext_ln138_fu_553_p1, "sext_ln138_fu_553_p1");
    sc_trace(mVcdFile, zext_ln138_fu_558_p1, "zext_ln138_fu_558_p1");
    sc_trace(mVcdFile, i_13_fu_132, "i_13_fu_132");
    sc_trace(mVcdFile, i_14_fu_472_p2, "i_14_fu_472_p2");
    sc_trace(mVcdFile, or_ln134_fu_532_p2, "or_ln134_fu_532_p2");
    sc_trace(mVcdFile, or_ln138_fu_599_p2, "or_ln138_fu_599_p2");
    sc_trace(mVcdFile, trunc_ln134_fu_442_p1, "trunc_ln134_fu_442_p1");
    sc_trace(mVcdFile, add_ln134_fu_446_p2, "add_ln134_fu_446_p2");
    sc_trace(mVcdFile, trunc_ln134_1_fu_457_p1, "trunc_ln134_1_fu_457_p1");
    sc_trace(mVcdFile, shl_ln134_fu_489_p2, "shl_ln134_fu_489_p2");
    sc_trace(mVcdFile, zext_ln134_1_fu_500_p1, "zext_ln134_1_fu_500_p1");
    sc_trace(mVcdFile, sub_ln134_fu_504_p2, "sub_ln134_fu_504_p2");
    sc_trace(mVcdFile, lshr_ln134_fu_510_p2, "lshr_ln134_fu_510_p2");
    sc_trace(mVcdFile, trunc_ln134_2_fu_516_p1, "trunc_ln134_2_fu_516_p1");
    sc_trace(mVcdFile, xor_ln134_fu_520_p2, "xor_ln134_fu_520_p2");
    sc_trace(mVcdFile, and_ln134_1_fu_526_p2, "and_ln134_1_fu_526_p2");
    sc_trace(mVcdFile, and_ln134_fu_494_p2, "and_ln134_fu_494_p2");
    sc_trace(mVcdFile, trunc_ln138_fu_539_p1, "trunc_ln138_fu_539_p1");
    sc_trace(mVcdFile, add_ln138_fu_547_p2, "add_ln138_fu_547_p2");
    sc_trace(mVcdFile, shl_ln138_fu_569_p2, "shl_ln138_fu_569_p2");
    sc_trace(mVcdFile, xor_ln138_fu_574_p2, "xor_ln138_fu_574_p2");
    sc_trace(mVcdFile, trunc_ln138_2_fu_586_p1, "trunc_ln138_2_fu_586_p1");
    sc_trace(mVcdFile, zext_ln138_1_fu_590_p1, "zext_ln138_1_fu_590_p1");
    sc_trace(mVcdFile, shl_ln138_1_fu_594_p2, "shl_ln138_1_fu_594_p2");
    sc_trace(mVcdFile, and_ln138_fu_580_p2, "and_ln138_fu_580_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state12_on_subcall_done, "ap_block_state12_on_subcall_done");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("crypto_sign_keypair.hdltvin.dat");
    mHdltvoutHandle.open("crypto_sign_keypair.hdltvout.dat");
}

crypto_sign_keypair::~crypto_sign_keypair() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete s_U;
    delete d_i_U;
    delete F_U;
    delete skbuf_U;
    delete sk_gf31_U;
    delete pk_gf31_U;
    delete grp_gf31_nrand_schar_fu_297;
    delete grp_gf31_nrand_fu_306;
    delete grp_keccak_squeezeblocks_fu_314;
    delete grp_randombytes_fu_322;
    delete grp_MQ_fu_338;
    delete grp_keccak_absorb_fu_345;
    delete grp_vgf31_unique_fu_352;
    delete grp_dataflow_parent_loop_1_fu_357;
}

void crypto_sign_keypair::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv16_0;
}

void crypto_sign_keypair::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_0;
}

void crypto_sign_keypair::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(icmp_ln405_fu_388_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(icmp_ln405_fu_388_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
             esl_seteq<1,1,1>(ap_block_state14_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dataflow_parent_loop_1_fu_357_ap_done.read())) {
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
             esl_seteq<1,1,1>(ap_block_state14_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dataflow_parent_loop_1_fu_357_ap_ready.read())) {
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_grp_vgf31_unique_fu_352_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
             esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_vgf31_unique_fu_352_ap_done.read())) {
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
             esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_vgf31_unique_fu_352_ap_ready.read())) {
            ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
        d_0_i_reg_275 = ap_const_lv32_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        d_0_i_reg_275 = d_1_reg_707.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln131_fu_422_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_434_p3.read()))) {
        d_1_i_reg_287 = d_0_i_reg_275.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_667.read(), ap_const_lv1_1))) {
        d_1_i_reg_287 = d_fu_483_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_MQ_fu_338_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            grp_MQ_fu_338_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_MQ_fu_338_ap_ready.read())) {
            grp_MQ_fu_338_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dataflow_parent_loop_1_fu_357_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready.read())))) {
            grp_dataflow_parent_loop_1_fu_357_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dataflow_parent_loop_1_fu_357_ap_ready.read())) {
            grp_dataflow_parent_loop_1_fu_357_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gf31_nrand_fu_306_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            grp_gf31_nrand_fu_306_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gf31_nrand_fu_306_ap_ready.read())) {
            grp_gf31_nrand_fu_306_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gf31_nrand_schar_fu_297_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            grp_gf31_nrand_schar_fu_297_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gf31_nrand_schar_fu_297_ap_ready.read())) {
            grp_gf31_nrand_schar_fu_297_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_fu_345_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln396_fu_371_p2.read()))) {
            grp_keccak_absorb_fu_345_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_fu_345_ap_ready.read())) {
            grp_keccak_absorb_fu_345_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_squeezeblocks_fu_314_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_keccak_squeezeblocks_fu_314_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_squeezeblocks_fu_314_ap_ready.read())) {
            grp_keccak_squeezeblocks_fu_314_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_randombytes_fu_322_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_randombytes_fu_322_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_randombytes_fu_322_ap_ready.read())) {
            grp_randombytes_fu_322_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_vgf31_unique_fu_352_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_vgf31_unique_fu_352_ap_ready.read())))) {
            grp_vgf31_unique_fu_352_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_vgf31_unique_fu_352_ap_ready.read())) {
            grp_vgf31_unique_fu_352_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
        i_0_i_reg_230 = i_fu_377_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_randombytes_fu_322_ap_done.read(), ap_const_logic_1))) {
        i_0_i_reg_230 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln131_fu_422_p2.read()) && 
         esl_seteq<1,1,1>(tmp_7_fu_434_p3.read(), ap_const_lv1_1))) {
        i_13_fu_132 = i_14_fu_472_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_13_fu_132 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_1_i_reg_241 = i_12_reg_623.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_314_ap_done.read(), ap_const_logic_1))) {
        i_1_i_reg_241 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
        j_1_i_reg_263 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_1_i_reg_263 = j_reg_662.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln405_fu_388_p2.read(), ap_const_lv1_1))) {
        loop_0_reg_252 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_400_p2.read()))) {
        loop_0_reg_252 = loop_fu_406_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln131_fu_422_p2.read()) && esl_seteq<1,1,1>(tmp_7_fu_434_p3.read(), ap_const_lv1_1))) {
        add_ln134_1_reg_676 = add_ln134_1_fu_461_p2.read();
        pk_addr_1_reg_671 =  (sc_lv<6>) (sext_ln134_fu_452_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        d_1_reg_707 = d_1_fu_563_p2.read();
        pk_addr_2_reg_697 =  (sc_lv<6>) (sext_ln138_fu_553_p1.read());
        trunc_ln138_1_reg_691 = trunc_ln138_1_fu_543_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_12_reg_623 = i_12_fu_394_p2.read();
        zext_ln405_reg_614 = zext_ln405_fu_383_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln80_reg_633 = icmp_ln80_fu_400_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_reg_662 = j_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln131_fu_422_p2.read()))) {
        tmp_7_reg_667 = d_0_i_reg_275.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_400_p2.read()))) {
        zext_ln81_reg_642 = zext_ln81_fu_412_p1.read();
    }
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_address0() {
    DRBG_ctx_Key_address0 = grp_randombytes_fu_322_DRBG_ctx_Key_address0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_address1() {
    DRBG_ctx_Key_address1 = grp_randombytes_fu_322_DRBG_ctx_Key_address1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_ce0() {
    DRBG_ctx_Key_ce0 = grp_randombytes_fu_322_DRBG_ctx_Key_ce0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_ce1() {
    DRBG_ctx_Key_ce1 = grp_randombytes_fu_322_DRBG_ctx_Key_ce1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_d0() {
    DRBG_ctx_Key_d0 = grp_randombytes_fu_322_DRBG_ctx_Key_d0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_Key_we0() {
    DRBG_ctx_Key_we0 = grp_randombytes_fu_322_DRBG_ctx_Key_we0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_address0() {
    DRBG_ctx_V_address0 = grp_randombytes_fu_322_DRBG_ctx_V_address0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_address1() {
    DRBG_ctx_V_address1 = grp_randombytes_fu_322_DRBG_ctx_V_address1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_ce0() {
    DRBG_ctx_V_ce0 = grp_randombytes_fu_322_DRBG_ctx_V_ce0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_ce1() {
    DRBG_ctx_V_ce1 = grp_randombytes_fu_322_DRBG_ctx_V_ce1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_d0() {
    DRBG_ctx_V_d0 = grp_randombytes_fu_322_DRBG_ctx_V_d0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_d1() {
    DRBG_ctx_V_d1 = grp_randombytes_fu_322_DRBG_ctx_V_d1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_we0() {
    DRBG_ctx_V_we0 = grp_randombytes_fu_322_DRBG_ctx_V_we0.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_V_we1() {
    DRBG_ctx_V_we1 = grp_randombytes_fu_322_DRBG_ctx_V_we1.read();
}

void crypto_sign_keypair::thread_DRBG_ctx_reseed_counter_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld.read()))) {
        DRBG_ctx_reseed_counter_o = grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o.read();
    } else {
        DRBG_ctx_reseed_counter_o = DRBG_ctx_reseed_counter_i.read();
    }
}

void crypto_sign_keypair::thread_DRBG_ctx_reseed_counter_o_ap_vld() {
    DRBG_ctx_reseed_counter_o_ap_vld = grp_randombytes_fu_322_DRBG_ctx_reseed_counter_o_ap_vld.read();
}

void crypto_sign_keypair::thread_F_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        F_address0 = grp_MQ_fu_338_F_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        F_address0 = grp_gf31_nrand_schar_fu_297_out_r_address0.read();
    } else {
        F_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void crypto_sign_keypair::thread_F_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        F_ce0 = grp_MQ_fu_338_F_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        F_ce0 = grp_gf31_nrand_schar_fu_297_out_r_ce0.read();
    } else {
        F_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_F_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        F_ce1 = grp_MQ_fu_338_F_ce1.read();
    } else {
        F_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_F_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        F_we0 = grp_gf31_nrand_schar_fu_297_out_r_we0.read();
    } else {
        F_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_add_ln134_1_fu_461_p2() {
    add_ln134_1_fu_461_p2 = (!ap_const_lv8_5.is_01() || !trunc_ln134_1_fu_457_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_5) + sc_biguint<8>(trunc_ln134_1_fu_457_p1.read()));
}

void crypto_sign_keypair::thread_add_ln134_fu_446_p2() {
    add_ln134_fu_446_p2 = (!ap_const_lv7_10.is_01() || !trunc_ln134_fu_442_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_10) + sc_biguint<7>(trunc_ln134_fu_442_p1.read()));
}

void crypto_sign_keypair::thread_add_ln138_fu_547_p2() {
    add_ln138_fu_547_p2 = (!ap_const_lv7_10.is_01() || !trunc_ln138_fu_539_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_10) + sc_biguint<7>(trunc_ln138_fu_539_p1.read()));
}

void crypto_sign_keypair::thread_and_ln134_1_fu_526_p2() {
    and_ln134_1_fu_526_p2 = (trunc_ln134_2_fu_516_p1.read() & xor_ln134_fu_520_p2.read());
}

void crypto_sign_keypair::thread_and_ln134_fu_494_p2() {
    and_ln134_fu_494_p2 = (pk_q0.read() & shl_ln134_fu_489_p2.read());
}

void crypto_sign_keypair::thread_and_ln138_fu_580_p2() {
    and_ln138_fu_580_p2 = (pk_q0.read() & xor_ln138_fu_574_p2.read());
}

void crypto_sign_keypair::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[11];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[12];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[14];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[15];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[16];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[17];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[18];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign_keypair::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign_keypair::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void crypto_sign_keypair::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void crypto_sign_keypair::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void crypto_sign_keypair::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void crypto_sign_keypair::thread_ap_block_state12_on_subcall_done() {
    ap_block_state12_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_gf31_nrand_schar_fu_297_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_gf31_nrand_fu_306_ap_done.read()));
}

void crypto_sign_keypair::thread_ap_block_state14_on_subcall_done() {
    ap_block_state14_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_MQ_fu_338_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready.read() & 
  ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done.read())));
}

void crypto_sign_keypair::thread_ap_block_state16_on_subcall_done() {
    ap_block_state16_on_subcall_done = esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_vgf31_unique_fu_352_ap_ready.read() & ap_sync_grp_vgf31_unique_fu_352_ap_done.read()));
}

void crypto_sign_keypair::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void crypto_sign_keypair::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln80_fu_400_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(icmp_ln131_fu_422_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void crypto_sign_keypair::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(icmp_ln131_fu_422_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void crypto_sign_keypair::thread_ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done() {
    ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_done = (grp_dataflow_parent_loop_1_fu_357_ap_done.read() | ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_done.read());
}

void crypto_sign_keypair::thread_ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready() {
    ap_sync_grp_dataflow_parent_loop_1_fu_357_ap_ready = (grp_dataflow_parent_loop_1_fu_357_ap_ready.read() | ap_sync_reg_grp_dataflow_parent_loop_1_fu_357_ap_ready.read());
}

void crypto_sign_keypair::thread_ap_sync_grp_vgf31_unique_fu_352_ap_done() {
    ap_sync_grp_vgf31_unique_fu_352_ap_done = (grp_vgf31_unique_fu_352_ap_done.read() | ap_sync_reg_grp_vgf31_unique_fu_352_ap_done.read());
}

void crypto_sign_keypair::thread_ap_sync_grp_vgf31_unique_fu_352_ap_ready() {
    ap_sync_grp_vgf31_unique_fu_352_ap_ready = (grp_vgf31_unique_fu_352_ap_ready.read() | ap_sync_reg_grp_vgf31_unique_fu_352_ap_ready.read());
}

void crypto_sign_keypair::thread_d_1_fu_563_p2() {
    d_1_fu_563_p2 = (!ap_const_lv32_FFFFFFFB.is_01() || !d_1_i_reg_287.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFB) + sc_biguint<32>(d_1_i_reg_287.read()));
}

void crypto_sign_keypair::thread_d_fu_483_p2() {
    d_fu_483_p2 = (!ap_const_lv32_8.is_01() || !d_0_i_reg_275.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_8) + sc_biguint<32>(d_0_i_reg_275.read()));
}

void crypto_sign_keypair::thread_d_i_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        d_i_address0 =  (sc_lv<8>) (zext_ln405_fu_383_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        d_i_address0 = grp_keccak_squeezeblocks_fu_314_h_address0.read();
    } else {
        d_i_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign_keypair::thread_d_i_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        d_i_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        d_i_ce0 = grp_keccak_squeezeblocks_fu_314_h_ce0.read();
    } else {
        d_i_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_d_i_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        d_i_ce1 = grp_keccak_squeezeblocks_fu_314_h_ce1.read();
    } else {
        d_i_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_d_i_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        d_i_we0 = grp_keccak_squeezeblocks_fu_314_h_we0.read();
    } else {
        d_i_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_d_i_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        d_i_we1 = grp_keccak_squeezeblocks_fu_314_h_we1.read();
    } else {
        d_i_we1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_grp_MQ_fu_338_ap_start() {
    grp_MQ_fu_338_ap_start = grp_MQ_fu_338_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_dataflow_parent_loop_1_fu_357_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_block_state14_on_subcall_done.read(), ap_const_boolean_0))) {
        grp_dataflow_parent_loop_1_fu_357_ap_continue = ap_const_logic_1;
    } else {
        grp_dataflow_parent_loop_1_fu_357_ap_continue = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_grp_dataflow_parent_loop_1_fu_357_ap_start() {
    grp_dataflow_parent_loop_1_fu_357_ap_start = grp_dataflow_parent_loop_1_fu_357_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_gf31_nrand_fu_306_ap_start() {
    grp_gf31_nrand_fu_306_ap_start = grp_gf31_nrand_fu_306_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_gf31_nrand_schar_fu_297_ap_start() {
    grp_gf31_nrand_schar_fu_297_ap_start = grp_gf31_nrand_schar_fu_297_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_keccak_absorb_fu_345_ap_start() {
    grp_keccak_absorb_fu_345_ap_start = grp_keccak_absorb_fu_345_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_keccak_squeezeblocks_fu_314_ap_start() {
    grp_keccak_squeezeblocks_fu_314_ap_start = grp_keccak_squeezeblocks_fu_314_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_randombytes_fu_322_ap_start() {
    grp_randombytes_fu_322_ap_start = grp_randombytes_fu_322_ap_start_reg.read();
}

void crypto_sign_keypair::thread_grp_vgf31_unique_fu_352_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
        grp_vgf31_unique_fu_352_ap_continue = ap_const_logic_1;
    } else {
        grp_vgf31_unique_fu_352_ap_continue = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_grp_vgf31_unique_fu_352_ap_start() {
    grp_vgf31_unique_fu_352_ap_start = grp_vgf31_unique_fu_352_ap_start_reg.read();
}

void crypto_sign_keypair::thread_i_12_fu_394_p2() {
    i_12_fu_394_p2 = (!i_1_i_reg_241.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_i_reg_241.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_keypair::thread_i_14_fu_472_p2() {
    i_14_fu_472_p2 = (!ap_const_lv32_1.is_01() || !i_13_fu_132.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(i_13_fu_132.read()));
}

void crypto_sign_keypair::thread_i_fu_377_p2() {
    i_fu_377_p2 = (!i_0_i_reg_230.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_reg_230.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void crypto_sign_keypair::thread_icmp_ln131_fu_422_p2() {
    icmp_ln131_fu_422_p2 = (!j_1_i_reg_263.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(j_1_i_reg_263.read() == ap_const_lv6_30);
}

void crypto_sign_keypair::thread_icmp_ln396_fu_371_p2() {
    icmp_ln396_fu_371_p2 = (!i_0_i_reg_230.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_230.read() == ap_const_lv5_19);
}

void crypto_sign_keypair::thread_icmp_ln405_fu_388_p2() {
    icmp_ln405_fu_388_p2 = (!i_1_i_reg_241.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_i_reg_241.read() == ap_const_lv6_20);
}

void crypto_sign_keypair::thread_icmp_ln80_fu_400_p2() {
    icmp_ln80_fu_400_p2 = (!loop_0_reg_252.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_reg_252.read() == ap_const_lv5_10);
}

void crypto_sign_keypair::thread_j_fu_428_p2() {
    j_fu_428_p2 = (!j_1_i_reg_263.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_1_i_reg_263.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_keypair::thread_loop_fu_406_p2() {
    loop_fu_406_p2 = (!loop_0_reg_252.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(loop_0_reg_252.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void crypto_sign_keypair::thread_lshr_ln134_fu_510_p2() {
    lshr_ln134_fu_510_p2 = (!sub_ln134_fu_504_p2.read().is_01())? sc_lv<32>(): zext_ln134_1_fu_500_p1.read() >> (unsigned short)sub_ln134_fu_504_p2.read().to_uint();
}

void crypto_sign_keypair::thread_or_ln134_fu_532_p2() {
    or_ln134_fu_532_p2 = (and_ln134_1_fu_526_p2.read() | and_ln134_fu_494_p2.read());
}

void crypto_sign_keypair::thread_or_ln138_fu_599_p2() {
    or_ln138_fu_599_p2 = (shl_ln138_1_fu_594_p2.read() | and_ln138_fu_580_p2.read());
}

void crypto_sign_keypair::thread_pk_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        pk_address0 = pk_addr_2_reg_697.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        pk_address0 =  (sc_lv<6>) (sext_ln138_fu_553_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        pk_address0 = pk_addr_1_reg_671.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        pk_address0 =  (sc_lv<6>) (sext_ln134_fu_452_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        pk_address0 =  (sc_lv<6>) (zext_ln81_reg_642.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_address0 = grp_dataflow_parent_loop_1_fu_357_out_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        pk_address0 = grp_gf31_nrand_schar_fu_297_seed_address0.read();
    } else {
        pk_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_keypair::thread_pk_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        pk_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_ce0 = grp_dataflow_parent_loop_1_fu_357_out_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        pk_ce0 = grp_gf31_nrand_schar_fu_297_seed_ce0.read();
    } else {
        pk_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_pk_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        pk_d0 = or_ln138_fu_599_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        pk_d0 = or_ln134_fu_532_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        pk_d0 = skbuf_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_d0 = grp_dataflow_parent_loop_1_fu_357_out_r_d0.read();
    } else {
        pk_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign_keypair::thread_pk_gf31_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        pk_gf31_address0 =  (sc_lv<6>) (zext_ln138_fu_558_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        pk_gf31_address0 =  (sc_lv<6>) (zext_ln134_fu_467_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        pk_gf31_address0 = grp_vgf31_unique_fu_352_out_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_gf31_address0 = grp_MQ_fu_338_fx_address0.read();
    } else {
        pk_gf31_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_keypair::thread_pk_gf31_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        pk_gf31_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        pk_gf31_ce0 = grp_vgf31_unique_fu_352_out_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_gf31_ce0 = grp_MQ_fu_338_fx_ce0.read();
    } else {
        pk_gf31_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_pk_gf31_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        pk_gf31_d0 = grp_vgf31_unique_fu_352_out_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_gf31_d0 = grp_MQ_fu_338_fx_d0.read();
    } else {
        pk_gf31_d0 = "XXXXXXXXXXXXXXXX";
    }
}

void crypto_sign_keypair::thread_pk_gf31_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        pk_gf31_we0 = grp_vgf31_unique_fu_352_out_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_gf31_we0 = grp_MQ_fu_338_fx_we0.read();
    } else {
        pk_gf31_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_pk_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(tmp_7_reg_667.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_633.read())))) {
        pk_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_we0 = grp_dataflow_parent_loop_1_fu_357_out_r_we0.read();
    } else {
        pk_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_s_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
        s_address0 =  (sc_lv<5>) (zext_ln396_fu_366_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address0 = grp_keccak_absorb_fu_345_s_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address0 = grp_keccak_squeezeblocks_fu_314_s_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign_keypair::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_ce0 = grp_keccak_absorb_fu_345_s_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_ce0 = grp_keccak_squeezeblocks_fu_314_s_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_ce1 = grp_keccak_squeezeblocks_fu_314_s_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_s_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_d0 = grp_keccak_absorb_fu_345_s_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_d0 = grp_keccak_squeezeblocks_fu_314_s_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_keypair::thread_s_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_we0 = grp_keccak_absorb_fu_345_s_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_we0 = grp_keccak_squeezeblocks_fu_314_s_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_we1 = grp_keccak_squeezeblocks_fu_314_s_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sext_ln134_fu_452_p1() {
    sext_ln134_fu_452_p1 = esl_sext<64,7>(add_ln134_fu_446_p2.read());
}

void crypto_sign_keypair::thread_sext_ln138_fu_553_p1() {
    sext_ln138_fu_553_p1 = esl_sext<64,7>(add_ln138_fu_547_p2.read());
}

void crypto_sign_keypair::thread_shl_ln134_fu_489_p2() {
    shl_ln134_fu_489_p2 = (!add_ln134_1_reg_676.read().is_01())? sc_lv<8>(): ap_const_lv8_FF << (unsigned short)add_ln134_1_reg_676.read().to_uint();
}

void crypto_sign_keypair::thread_shl_ln138_1_fu_594_p2() {
    shl_ln138_1_fu_594_p2 = (!trunc_ln138_1_reg_691.read().is_01())? sc_lv<8>(): zext_ln138_1_fu_590_p1.read() << (unsigned short)trunc_ln138_1_reg_691.read().to_uint();
}

void crypto_sign_keypair::thread_shl_ln138_fu_569_p2() {
    shl_ln138_fu_569_p2 = (!trunc_ln138_1_reg_691.read().is_01())? sc_lv<8>(): ap_const_lv8_1F << (unsigned short)trunc_ln138_1_reg_691.read().to_uint();
}

void crypto_sign_keypair::thread_sk_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sk_address0 = grp_keccak_absorb_fu_345_m_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_address0 = grp_randombytes_fu_322_x_address0.read();
    } else {
        sk_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void crypto_sign_keypair::thread_sk_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sk_ce0 = grp_keccak_absorb_fu_345_m_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_ce0 = grp_randombytes_fu_322_x_ce0.read();
    } else {
        sk_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sk_d0() {
    sk_d0 = grp_randombytes_fu_322_x_d0.read();
}

void crypto_sign_keypair::thread_sk_gf31_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sk_gf31_address0 = grp_MQ_fu_338_x_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sk_gf31_address0 = grp_gf31_nrand_fu_306_out_r_address0.read();
    } else {
        sk_gf31_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_keypair::thread_sk_gf31_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sk_gf31_ce0 = grp_MQ_fu_338_x_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sk_gf31_ce0 = grp_gf31_nrand_fu_306_out_r_ce0.read();
    } else {
        sk_gf31_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sk_gf31_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sk_gf31_ce1 = grp_MQ_fu_338_x_ce1.read();
    } else {
        sk_gf31_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sk_gf31_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sk_gf31_we0 = grp_gf31_nrand_fu_306_out_r_we0.read();
    } else {
        sk_gf31_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sk_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_we0 = grp_randombytes_fu_322_x_we0.read();
    } else {
        sk_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_skbuf_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        skbuf_address0 =  (sc_lv<5>) (zext_ln81_fu_412_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        skbuf_address0 =  (sc_lv<5>) (zext_ln405_reg_614.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        skbuf_address0 = grp_gf31_nrand_fu_306_seed_address0.read();
    } else {
        skbuf_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign_keypair::thread_skbuf_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        skbuf_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        skbuf_ce0 = grp_gf31_nrand_fu_306_seed_ce0.read();
    } else {
        skbuf_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_skbuf_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        skbuf_we0 = ap_const_logic_1;
    } else {
        skbuf_we0 = ap_const_logic_0;
    }
}

void crypto_sign_keypair::thread_sub_ln134_fu_504_p2() {
    sub_ln134_fu_504_p2 = (!ap_const_lv32_0.is_01() || !d_0_i_reg_275.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(d_0_i_reg_275.read()));
}

void crypto_sign_keypair::thread_tmp_7_fu_434_p3() {
    tmp_7_fu_434_p3 = d_0_i_reg_275.read().range(31, 31);
}

void crypto_sign_keypair::thread_trunc_ln134_1_fu_457_p1() {
    trunc_ln134_1_fu_457_p1 = d_0_i_reg_275.read().range(8-1, 0);
}

void crypto_sign_keypair::thread_trunc_ln134_2_fu_516_p1() {
    trunc_ln134_2_fu_516_p1 = lshr_ln134_fu_510_p2.read().range(8-1, 0);
}

void crypto_sign_keypair::thread_trunc_ln134_fu_442_p1() {
    trunc_ln134_fu_442_p1 = i_13_fu_132.read().range(7-1, 0);
}

void crypto_sign_keypair::thread_trunc_ln138_1_fu_543_p1() {
    trunc_ln138_1_fu_543_p1 = d_1_i_reg_287.read().range(8-1, 0);
}

void crypto_sign_keypair::thread_trunc_ln138_2_fu_586_p1() {
    trunc_ln138_2_fu_586_p1 = pk_gf31_q0.read().range(5-1, 0);
}

void crypto_sign_keypair::thread_trunc_ln138_fu_539_p1() {
    trunc_ln138_fu_539_p1 = i_13_fu_132.read().range(7-1, 0);
}

void crypto_sign_keypair::thread_xor_ln134_fu_520_p2() {
    xor_ln134_fu_520_p2 = (shl_ln134_fu_489_p2.read() ^ ap_const_lv8_FF);
}

void crypto_sign_keypair::thread_xor_ln138_fu_574_p2() {
    xor_ln138_fu_574_p2 = (shl_ln138_fu_569_p2.read() ^ ap_const_lv8_FF);
}

void crypto_sign_keypair::thread_zext_ln134_1_fu_500_p1() {
    zext_ln134_1_fu_500_p1 = esl_zext<32,16>(pk_gf31_q0.read());
}

void crypto_sign_keypair::thread_zext_ln134_fu_467_p1() {
    zext_ln134_fu_467_p1 = esl_zext<64,6>(j_1_i_reg_263.read());
}

void crypto_sign_keypair::thread_zext_ln138_1_fu_590_p1() {
    zext_ln138_1_fu_590_p1 = esl_zext<8,5>(trunc_ln138_2_fu_586_p1.read());
}

void crypto_sign_keypair::thread_zext_ln138_fu_558_p1() {
    zext_ln138_fu_558_p1 = esl_zext<64,6>(j_1_i_reg_263.read());
}

void crypto_sign_keypair::thread_zext_ln396_fu_366_p1() {
    zext_ln396_fu_366_p1 = esl_zext<64,5>(i_0_i_reg_230.read());
}

void crypto_sign_keypair::thread_zext_ln405_fu_383_p1() {
    zext_ln405_fu_383_p1 = esl_zext<64,6>(i_1_i_reg_241.read());
}

void crypto_sign_keypair::thread_zext_ln81_fu_412_p1() {
    zext_ln81_fu_412_p1 = esl_zext<64,5>(loop_0_reg_252.read());
}

void crypto_sign_keypair::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_randombytes_fu_322_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln396_fu_371_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_fu_345_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_keccak_squeezeblocks_fu_314_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln405_fu_388_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln80_fu_400_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln80_fu_400_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_block_state14_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(icmp_ln131_fu_422_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void crypto_sign_keypair::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pk_address0\" :  \"" << pk_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pk_ce0\" :  \"" << pk_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pk_we0\" :  \"" << pk_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pk_d0\" :  \"" << pk_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pk_q0\" :  \"" << pk_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sk_address0\" :  \"" << sk_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sk_ce0\" :  \"" << sk_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sk_we0\" :  \"" << sk_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sk_d0\" :  \"" << sk_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sk_q0\" :  \"" << sk_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_address0\" :  \"" << DRBG_ctx_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_ce0\" :  \"" << DRBG_ctx_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_we0\" :  \"" << DRBG_ctx_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_d0\" :  \"" << DRBG_ctx_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"DRBG_ctx_V_q0\" :  \"" << DRBG_ctx_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_address1\" :  \"" << DRBG_ctx_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_ce1\" :  \"" << DRBG_ctx_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_we1\" :  \"" << DRBG_ctx_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_V_d1\" :  \"" << DRBG_ctx_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"DRBG_ctx_V_q1\" :  \"" << DRBG_ctx_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_address0\" :  \"" << DRBG_ctx_Key_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_ce0\" :  \"" << DRBG_ctx_Key_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_we0\" :  \"" << DRBG_ctx_Key_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_d0\" :  \"" << DRBG_ctx_Key_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"DRBG_ctx_Key_q0\" :  \"" << DRBG_ctx_Key_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_address1\" :  \"" << DRBG_ctx_Key_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_Key_ce1\" :  \"" << DRBG_ctx_Key_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"DRBG_ctx_Key_q1\" :  \"" << DRBG_ctx_Key_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"DRBG_ctx_reseed_counter_i\" :  \"" << DRBG_ctx_reseed_counter_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_reseed_counter_o\" :  \"" << DRBG_ctx_reseed_counter_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"DRBG_ctx_reseed_counter_o_ap_vld\" :  \"" << DRBG_ctx_reseed_counter_o_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

