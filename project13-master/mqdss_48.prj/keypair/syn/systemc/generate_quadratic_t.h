// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _generate_quadratic_t_HH_
#define _generate_quadratic_t_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct generate_quadratic_t : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > xij_address0;
    sc_out< sc_logic > xij_ce0;
    sc_out< sc_logic > xij_we0;
    sc_out< sc_lv<6> > xij_d0;
    sc_out< sc_lv<6> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<5> > x_q0;
    sc_out< sc_lv<6> > x_address1;
    sc_out< sc_logic > x_ce1;
    sc_in< sc_lv<5> > x_q1;


    // Module declarations
    generate_quadratic_t(sc_module_name name);
    SC_HAS_PROCESS(generate_quadratic_t);

    ~generate_quadratic_t();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i_fu_146_p2;
    sc_signal< sc_lv<6> > i_reg_319;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > k_fu_152_p2;
    sc_signal< sc_lv<12> > k_reg_324;
    sc_signal< sc_lv<1> > icmp_ln10_fu_140_p2;
    sc_signal< sc_lv<6> > x_addr_reg_329;
    sc_signal< sc_lv<6> > j_fu_169_p2;
    sc_signal< sc_lv<6> > j_reg_337;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln11_fu_163_p2;
    sc_signal< sc_lv<6> > add_ln10_fu_180_p2;
    sc_signal< sc_lv<5> > add_ln20_fu_222_p2;
    sc_signal< sc_lv<5> > add_ln20_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_reg_358;
    sc_signal< sc_lv<12> > add_ln13_fu_310_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > indvars_iv_reg_79;
    sc_signal< sc_lv<6> > i_0_reg_91;
    sc_signal< sc_lv<12> > k_0_reg_102;
    sc_signal< sc_lv<6> > j_0_reg_114;
    sc_signal< sc_lv<12> > k_1_reg_125;
    sc_signal< sc_lv<64> > zext_ln12_fu_158_p1;
    sc_signal< sc_lv<64> > zext_ln12_1_fu_175_p1;
    sc_signal< sc_lv<64> > zext_ln12_2_fu_305_p1;
    sc_signal< sc_lv<12> > zext_ln10_fu_136_p1;
    sc_signal< sc_lv<5> > mul_ln12_fu_194_p0;
    sc_signal< sc_lv<5> > mul_ln12_fu_194_p1;
    sc_signal< sc_lv<10> > mul_ln12_fu_194_p2;
    sc_signal< sc_lv<5> > t_fu_200_p1;
    sc_signal< sc_lv<5> > trunc_ln_fu_208_p4;
    sc_signal< sc_lv<6> > zext_ln14_fu_204_p1;
    sc_signal< sc_lv<6> > zext_ln16_fu_218_p1;
    sc_signal< sc_lv<6> > t_1_fu_228_p2;
    sc_signal< sc_lv<6> > zext_ln22_1_fu_242_p1;
    sc_signal< sc_lv<6> > zext_ln22_fu_245_p1;
    sc_signal< sc_lv<6> > t_2_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_254_p3;
    sc_signal< sc_lv<5> > zext_ln23_2_fu_266_p1;
    sc_signal< sc_lv<5> > add_ln23_fu_269_p2;
    sc_signal< sc_lv<6> > zext_ln23_1_fu_262_p1;
    sc_signal< sc_lv<6> > zext_ln23_fu_274_p1;
    sc_signal< sc_lv<6> > t_3_fu_278_p2;
    sc_signal< sc_lv<1> > icmp_ln24_fu_284_p2;
    sc_signal< sc_lv<6> > select_ln24_fu_290_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln12_fu_194_p00;
    sc_signal< sc_lv<10> > mul_ln12_fu_194_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<12> ap_const_lv12_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_180_p2();
    void thread_add_ln13_fu_310_p2();
    void thread_add_ln20_fu_222_p2();
    void thread_add_ln23_fu_269_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_146_p2();
    void thread_icmp_ln10_fu_140_p2();
    void thread_icmp_ln11_fu_163_p2();
    void thread_icmp_ln24_fu_284_p2();
    void thread_j_fu_169_p2();
    void thread_k_fu_152_p2();
    void thread_mul_ln12_fu_194_p0();
    void thread_mul_ln12_fu_194_p00();
    void thread_mul_ln12_fu_194_p1();
    void thread_mul_ln12_fu_194_p10();
    void thread_mul_ln12_fu_194_p2();
    void thread_select_ln24_fu_290_p3();
    void thread_t_1_fu_228_p2();
    void thread_t_2_fu_248_p2();
    void thread_t_3_fu_278_p2();
    void thread_t_fu_200_p1();
    void thread_tmp_6_fu_254_p3();
    void thread_trunc_ln_fu_208_p4();
    void thread_x_address0();
    void thread_x_address1();
    void thread_x_ce0();
    void thread_x_ce1();
    void thread_xij_address0();
    void thread_xij_ce0();
    void thread_xij_d0();
    void thread_xij_we0();
    void thread_zext_ln10_fu_136_p1();
    void thread_zext_ln12_1_fu_175_p1();
    void thread_zext_ln12_2_fu_305_p1();
    void thread_zext_ln12_fu_158_p1();
    void thread_zext_ln14_fu_204_p1();
    void thread_zext_ln16_fu_218_p1();
    void thread_zext_ln22_1_fu_242_p1();
    void thread_zext_ln22_fu_245_p1();
    void thread_zext_ln23_1_fu_262_p1();
    void thread_zext_ln23_2_fu_266_p1();
    void thread_zext_ln23_fu_274_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
