// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeyExpansion.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeyExpansion::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeyExpansion::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> KeyExpansion::ap_ST_fsm_state1 = "1";
const sc_lv<11> KeyExpansion::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<11> KeyExpansion::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state5 = "1000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state6 = "10000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state7 = "100000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state8 = "1000000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state9 = "10000000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state10 = "100000000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state11 = "1000000000";
const sc_lv<11> KeyExpansion::ap_ST_fsm_state12 = "10000000000";
const bool KeyExpansion::ap_const_boolean_1 = true;
const sc_lv<32> KeyExpansion::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> KeyExpansion::ap_const_lv32_5 = "101";
const sc_lv<32> KeyExpansion::ap_const_lv32_6 = "110";
const sc_lv<32> KeyExpansion::ap_const_lv32_7 = "111";
const sc_lv<32> KeyExpansion::ap_const_lv32_8 = "1000";
const sc_lv<32> KeyExpansion::ap_const_lv32_1 = "1";
const bool KeyExpansion::ap_const_boolean_0 = false;
const sc_lv<1> KeyExpansion::ap_const_lv1_0 = "0";
const sc_lv<32> KeyExpansion::ap_const_lv32_2 = "10";
const sc_lv<32> KeyExpansion::ap_const_lv32_4 = "100";
const sc_lv<1> KeyExpansion::ap_const_lv1_1 = "1";
const sc_lv<32> KeyExpansion::ap_const_lv32_9 = "1001";
const sc_lv<4> KeyExpansion::ap_const_lv4_0 = "0000";
const sc_lv<6> KeyExpansion::ap_const_lv6_8 = "1000";
const sc_lv<32> KeyExpansion::ap_const_lv32_3 = "11";
const sc_lv<4> KeyExpansion::ap_const_lv4_8 = "1000";
const sc_lv<4> KeyExpansion::ap_const_lv4_1 = "1";
const sc_lv<2> KeyExpansion::ap_const_lv2_0 = "00";
const sc_lv<5> KeyExpansion::ap_const_lv5_1 = "1";
const sc_lv<5> KeyExpansion::ap_const_lv5_2 = "10";
const sc_lv<5> KeyExpansion::ap_const_lv5_3 = "11";
const sc_lv<6> KeyExpansion::ap_const_lv6_3C = "111100";
const sc_lv<8> KeyExpansion::ap_const_lv8_FC = "11111100";
const sc_lv<8> KeyExpansion::ap_const_lv8_FD = "11111101";
const sc_lv<3> KeyExpansion::ap_const_lv3_0 = "000";
const sc_lv<3> KeyExpansion::ap_const_lv3_4 = "100";
const sc_lv<8> KeyExpansion::ap_const_lv8_FE = "11111110";
const sc_lv<8> KeyExpansion::ap_const_lv8_FF = "11111111";
const sc_lv<8> KeyExpansion::ap_const_lv8_E0 = "11100000";
const sc_lv<8> KeyExpansion::ap_const_lv8_E1 = "11100001";
const sc_lv<8> KeyExpansion::ap_const_lv8_E2 = "11100010";
const sc_lv<8> KeyExpansion::ap_const_lv8_E3 = "11100011";
const sc_lv<8> KeyExpansion::ap_const_lv8_1 = "1";
const sc_lv<8> KeyExpansion::ap_const_lv8_2 = "10";
const sc_lv<8> KeyExpansion::ap_const_lv8_3 = "11";
const sc_lv<6> KeyExpansion::ap_const_lv6_1 = "1";
const sc_lv<32> KeyExpansion::ap_const_lv32_A = "1010";

KeyExpansion::KeyExpansion(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sbox_U = new KeyExpansion_sbox("sbox_U");
    sbox_U->clk(ap_clk);
    sbox_U->reset(ap_rst);
    sbox_U->address0(sbox_address0);
    sbox_U->ce0(sbox_ce0);
    sbox_U->q0(sbox_q0);
    sbox_U->address1(sbox_address1);
    sbox_U->ce1(sbox_ce1);
    sbox_U->q1(sbox_q1);
    Rcon_U = new KeyExpansion_Rcon("Rcon_U");
    Rcon_U->clk(ap_clk);
    Rcon_U->reset(ap_rst);
    Rcon_U->address0(Rcon_address0);
    Rcon_U->ce0(Rcon_ce0);
    Rcon_U->q0(Rcon_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Key_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln160_fu_413_p1 );
    sensitive << ( zext_ln162_fu_434_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Key_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln161_fu_424_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln163_fu_444_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Key_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_Key_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_Rcon_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln203_fu_505_p1 );

    SC_METHOD(thread_Rcon_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_RoundKey_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln160_reg_753 );
    sensitive << ( zext_ln162_reg_773 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln171_fu_473_p1 );
    sensitive << ( zext_ln173_fu_521_p1 );
    sensitive << ( zext_ln218_fu_580_p1 );
    sensitive << ( zext_ln220_fu_623_p1 );
    sensitive << ( zext_ln218_1_fu_665_p1 );
    sensitive << ( zext_ln220_1_fu_710_p1 );

    SC_METHOD(thread_RoundKey_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln161_reg_763 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln163_reg_783 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln172_fu_484_p1 );
    sensitive << ( zext_ln174_fu_531_p1 );
    sensitive << ( zext_ln219_fu_590_p1 );
    sensitive << ( zext_ln221_fu_633_p1 );
    sensitive << ( zext_ln219_1_fu_681_p1 );
    sensitive << ( zext_ln221_1_fu_727_p1 );

    SC_METHOD(thread_RoundKey_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_RoundKey_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_RoundKey_d0);
    sensitive << ( Key_q0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( xor_ln218_fu_658_p2 );
    sensitive << ( xor_ln220_fu_698_p2 );

    SC_METHOD(thread_RoundKey_d1);
    sensitive << ( Key_q1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( xor_ln219_fu_669_p2 );
    sensitive << ( xor_ln221_fu_715_p2 );

    SC_METHOD(thread_RoundKey_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln158_reg_738 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_RoundKey_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln158_reg_738 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_add_ln171_fu_467_p2);
    sensitive << ( j_fu_459_p3 );

    SC_METHOD(thread_add_ln172_fu_478_p2);
    sensitive << ( j_fu_459_p3 );

    SC_METHOD(thread_add_ln173_fu_516_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_add_ln174_fu_526_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_add_ln218_fu_575_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_add_ln219_fu_585_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_add_ln220_fu_618_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_add_ln221_fu_628_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln158_fu_389_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_362_p4);
    sensitive << ( i_0_reg_358 );
    sensitive << ( icmp_ln158_reg_738 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_742 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_17_fu_732_p2);
    sensitive << ( i_1_reg_369 );

    SC_METHOD(thread_i_fu_395_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_362_p4 );

    SC_METHOD(thread_icmp_ln158_fu_389_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_362_p4 );

    SC_METHOD(thread_icmp_ln167_fu_449_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_1_reg_369 );

    SC_METHOD(thread_icmp_ln178_fu_489_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln167_fu_449_p2 );
    sensitive << ( trunc_ln167_fu_455_p1 );

    SC_METHOD(thread_icmp_ln206_fu_510_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln167_fu_449_p2 );
    sensitive << ( trunc_ln167_fu_455_p1 );

    SC_METHOD(thread_j_fu_459_p3);
    sensitive << ( i_1_reg_369 );

    SC_METHOD(thread_lshr_ln_fu_495_p4);
    sensitive << ( i_1_reg_369 );

    SC_METHOD(thread_or_ln161_fu_418_p2);
    sensitive << ( shl_ln_fu_405_p3 );

    SC_METHOD(thread_or_ln162_fu_429_p2);
    sensitive << ( shl_ln_reg_747 );

    SC_METHOD(thread_or_ln163_fu_439_p2);
    sensitive << ( shl_ln_reg_747 );

    SC_METHOD(thread_or_ln219_fu_676_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_or_ln220_fu_705_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_or_ln221_fu_722_p2);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_sbox_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln197_fu_536_p1 );
    sensitive << ( zext_ln198_fu_546_p1 );
    sensitive << ( zext_ln210_fu_609_p1 );
    sensitive << ( zext_ln212_fu_638_p1 );

    SC_METHOD(thread_sbox_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln200_fu_541_p1 );
    sensitive << ( zext_ln199_fu_551_p1 );
    sensitive << ( zext_ln211_fu_613_p1 );
    sensitive << ( zext_ln213_fu_642_p1 );

    SC_METHOD(thread_sbox_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sbox_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_shl_ln_fu_405_p3);
    sensitive << ( trunc_ln160_fu_401_p1 );

    SC_METHOD(thread_tempa_0_2_fu_568_p3);
    sensitive << ( reg_381 );
    sensitive << ( icmp_ln178_reg_820 );
    sensitive << ( tempa_0_fu_556_p2 );

    SC_METHOD(thread_tempa_0_4_fu_652_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln206_reg_833 );
    sensitive << ( tempa_0_2_reg_882 );

    SC_METHOD(thread_tempa_0_fu_556_p2);
    sensitive << ( sbox_q0 );
    sensitive << ( Rcon_load_reg_861 );

    SC_METHOD(thread_tempa_1_2_fu_602_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( reg_385 );
    sensitive << ( icmp_ln178_reg_820 );

    SC_METHOD(thread_tempa_1_4_fu_646_p3);
    sensitive << ( sbox_q1 );
    sensitive << ( icmp_ln206_reg_833 );
    sensitive << ( tempa_1_2_reg_904 );

    SC_METHOD(thread_tempa_2_2_fu_595_p3);
    sensitive << ( sbox_q1 );
    sensitive << ( reg_381 );
    sensitive << ( icmp_ln178_reg_820 );

    SC_METHOD(thread_tempa_2_4_fu_692_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln206_reg_833 );
    sensitive << ( tempa_2_2_reg_898 );

    SC_METHOD(thread_tempa_3_2_fu_561_p3);
    sensitive << ( RoundKey_q1 );
    sensitive << ( sbox_q1 );
    sensitive << ( icmp_ln178_reg_820 );

    SC_METHOD(thread_tempa_3_4_fu_686_p3);
    sensitive << ( sbox_q1 );
    sensitive << ( icmp_ln206_reg_833 );
    sensitive << ( tempa_3_2_reg_876 );

    SC_METHOD(thread_trunc_ln160_fu_401_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_362_p4 );

    SC_METHOD(thread_trunc_ln167_fu_455_p1);
    sensitive << ( i_1_reg_369 );

    SC_METHOD(thread_xor_ln218_fu_658_p2);
    sensitive << ( reg_381 );
    sensitive << ( tempa_0_4_fu_652_p3 );

    SC_METHOD(thread_xor_ln219_fu_669_p2);
    sensitive << ( reg_385 );
    sensitive << ( tempa_1_4_fu_646_p3 );

    SC_METHOD(thread_xor_ln220_fu_698_p2);
    sensitive << ( reg_381 );
    sensitive << ( tempa_2_4_fu_692_p3 );

    SC_METHOD(thread_xor_ln221_fu_715_p2);
    sensitive << ( reg_385 );
    sensitive << ( tempa_3_4_fu_686_p3 );

    SC_METHOD(thread_zext_ln160_fu_413_p1);
    sensitive << ( shl_ln_fu_405_p3 );

    SC_METHOD(thread_zext_ln161_fu_424_p1);
    sensitive << ( or_ln161_fu_418_p2 );

    SC_METHOD(thread_zext_ln162_fu_434_p1);
    sensitive << ( or_ln162_fu_429_p2 );

    SC_METHOD(thread_zext_ln163_fu_444_p1);
    sensitive << ( or_ln163_fu_439_p2 );

    SC_METHOD(thread_zext_ln171_fu_473_p1);
    sensitive << ( add_ln171_fu_467_p2 );

    SC_METHOD(thread_zext_ln172_fu_484_p1);
    sensitive << ( add_ln172_fu_478_p2 );

    SC_METHOD(thread_zext_ln173_fu_521_p1);
    sensitive << ( add_ln173_fu_516_p2 );

    SC_METHOD(thread_zext_ln174_fu_531_p1);
    sensitive << ( add_ln174_fu_526_p2 );

    SC_METHOD(thread_zext_ln197_fu_536_p1);
    sensitive << ( RoundKey_q1 );

    SC_METHOD(thread_zext_ln198_fu_546_p1);
    sensitive << ( RoundKey_q0 );

    SC_METHOD(thread_zext_ln199_fu_551_p1);
    sensitive << ( RoundKey_q1 );

    SC_METHOD(thread_zext_ln200_fu_541_p1);
    sensitive << ( RoundKey_q0 );

    SC_METHOD(thread_zext_ln203_fu_505_p1);
    sensitive << ( lshr_ln_fu_495_p4 );

    SC_METHOD(thread_zext_ln210_fu_609_p1);
    sensitive << ( tempa_0_2_reg_882 );

    SC_METHOD(thread_zext_ln211_fu_613_p1);
    sensitive << ( tempa_1_2_fu_602_p3 );

    SC_METHOD(thread_zext_ln212_fu_638_p1);
    sensitive << ( tempa_2_2_reg_898 );

    SC_METHOD(thread_zext_ln213_fu_642_p1);
    sensitive << ( tempa_3_2_reg_876 );

    SC_METHOD(thread_zext_ln218_1_fu_665_p1);
    sensitive << ( j_reg_796 );

    SC_METHOD(thread_zext_ln218_fu_580_p1);
    sensitive << ( add_ln218_fu_575_p2 );

    SC_METHOD(thread_zext_ln219_1_fu_681_p1);
    sensitive << ( or_ln219_fu_676_p2 );

    SC_METHOD(thread_zext_ln219_fu_590_p1);
    sensitive << ( add_ln219_fu_585_p2 );

    SC_METHOD(thread_zext_ln220_1_fu_710_p1);
    sensitive << ( or_ln220_fu_705_p2 );

    SC_METHOD(thread_zext_ln220_fu_623_p1);
    sensitive << ( add_ln220_fu_618_p2 );

    SC_METHOD(thread_zext_ln221_1_fu_727_p1);
    sensitive << ( or_ln221_fu_722_p2 );

    SC_METHOD(thread_zext_ln221_fu_633_p1);
    sensitive << ( add_ln221_fu_628_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln158_fu_389_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln167_fu_449_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeyExpansion_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, RoundKey_address0, "(port)RoundKey_address0");
    sc_trace(mVcdFile, RoundKey_ce0, "(port)RoundKey_ce0");
    sc_trace(mVcdFile, RoundKey_we0, "(port)RoundKey_we0");
    sc_trace(mVcdFile, RoundKey_d0, "(port)RoundKey_d0");
    sc_trace(mVcdFile, RoundKey_q0, "(port)RoundKey_q0");
    sc_trace(mVcdFile, RoundKey_address1, "(port)RoundKey_address1");
    sc_trace(mVcdFile, RoundKey_ce1, "(port)RoundKey_ce1");
    sc_trace(mVcdFile, RoundKey_we1, "(port)RoundKey_we1");
    sc_trace(mVcdFile, RoundKey_d1, "(port)RoundKey_d1");
    sc_trace(mVcdFile, RoundKey_q1, "(port)RoundKey_q1");
    sc_trace(mVcdFile, Key_address0, "(port)Key_address0");
    sc_trace(mVcdFile, Key_ce0, "(port)Key_ce0");
    sc_trace(mVcdFile, Key_q0, "(port)Key_q0");
    sc_trace(mVcdFile, Key_address1, "(port)Key_address1");
    sc_trace(mVcdFile, Key_ce1, "(port)Key_ce1");
    sc_trace(mVcdFile, Key_q1, "(port)Key_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sbox_address0, "sbox_address0");
    sc_trace(mVcdFile, sbox_ce0, "sbox_ce0");
    sc_trace(mVcdFile, sbox_q0, "sbox_q0");
    sc_trace(mVcdFile, sbox_address1, "sbox_address1");
    sc_trace(mVcdFile, sbox_ce1, "sbox_ce1");
    sc_trace(mVcdFile, sbox_q1, "sbox_q1");
    sc_trace(mVcdFile, Rcon_address0, "Rcon_address0");
    sc_trace(mVcdFile, Rcon_ce0, "Rcon_ce0");
    sc_trace(mVcdFile, Rcon_q0, "Rcon_q0");
    sc_trace(mVcdFile, i_0_reg_358, "i_0_reg_358");
    sc_trace(mVcdFile, reg_381, "reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_385, "reg_385");
    sc_trace(mVcdFile, icmp_ln158_fu_389_p2, "icmp_ln158_fu_389_p2");
    sc_trace(mVcdFile, icmp_ln158_reg_738, "icmp_ln158_reg_738");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_395_p2, "i_fu_395_p2");
    sc_trace(mVcdFile, i_reg_742, "i_reg_742");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, shl_ln_fu_405_p3, "shl_ln_fu_405_p3");
    sc_trace(mVcdFile, shl_ln_reg_747, "shl_ln_reg_747");
    sc_trace(mVcdFile, zext_ln160_fu_413_p1, "zext_ln160_fu_413_p1");
    sc_trace(mVcdFile, zext_ln160_reg_753, "zext_ln160_reg_753");
    sc_trace(mVcdFile, zext_ln161_fu_424_p1, "zext_ln161_fu_424_p1");
    sc_trace(mVcdFile, zext_ln161_reg_763, "zext_ln161_reg_763");
    sc_trace(mVcdFile, zext_ln162_fu_434_p1, "zext_ln162_fu_434_p1");
    sc_trace(mVcdFile, zext_ln162_reg_773, "zext_ln162_reg_773");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, zext_ln163_fu_444_p1, "zext_ln163_fu_444_p1");
    sc_trace(mVcdFile, zext_ln163_reg_783, "zext_ln163_reg_783");
    sc_trace(mVcdFile, j_fu_459_p3, "j_fu_459_p3");
    sc_trace(mVcdFile, j_reg_796, "j_reg_796");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln167_fu_449_p2, "icmp_ln167_fu_449_p2");
    sc_trace(mVcdFile, icmp_ln178_fu_489_p2, "icmp_ln178_fu_489_p2");
    sc_trace(mVcdFile, icmp_ln178_reg_820, "icmp_ln178_reg_820");
    sc_trace(mVcdFile, icmp_ln206_fu_510_p2, "icmp_ln206_fu_510_p2");
    sc_trace(mVcdFile, icmp_ln206_reg_833, "icmp_ln206_reg_833");
    sc_trace(mVcdFile, Rcon_load_reg_861, "Rcon_load_reg_861");
    sc_trace(mVcdFile, tempa_3_2_fu_561_p3, "tempa_3_2_fu_561_p3");
    sc_trace(mVcdFile, tempa_3_2_reg_876, "tempa_3_2_reg_876");
    sc_trace(mVcdFile, tempa_0_2_fu_568_p3, "tempa_0_2_fu_568_p3");
    sc_trace(mVcdFile, tempa_0_2_reg_882, "tempa_0_2_reg_882");
    sc_trace(mVcdFile, tempa_2_2_fu_595_p3, "tempa_2_2_fu_595_p3");
    sc_trace(mVcdFile, tempa_2_2_reg_898, "tempa_2_2_reg_898");
    sc_trace(mVcdFile, tempa_1_2_fu_602_p3, "tempa_1_2_fu_602_p3");
    sc_trace(mVcdFile, tempa_1_2_reg_904, "tempa_1_2_reg_904");
    sc_trace(mVcdFile, i_17_fu_732_p2, "i_17_fu_732_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_362_p4, "ap_phi_mux_i_0_phi_fu_362_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, i_1_reg_369, "i_1_reg_369");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln171_fu_473_p1, "zext_ln171_fu_473_p1");
    sc_trace(mVcdFile, zext_ln172_fu_484_p1, "zext_ln172_fu_484_p1");
    sc_trace(mVcdFile, zext_ln203_fu_505_p1, "zext_ln203_fu_505_p1");
    sc_trace(mVcdFile, zext_ln173_fu_521_p1, "zext_ln173_fu_521_p1");
    sc_trace(mVcdFile, zext_ln174_fu_531_p1, "zext_ln174_fu_531_p1");
    sc_trace(mVcdFile, zext_ln197_fu_536_p1, "zext_ln197_fu_536_p1");
    sc_trace(mVcdFile, zext_ln200_fu_541_p1, "zext_ln200_fu_541_p1");
    sc_trace(mVcdFile, zext_ln198_fu_546_p1, "zext_ln198_fu_546_p1");
    sc_trace(mVcdFile, zext_ln199_fu_551_p1, "zext_ln199_fu_551_p1");
    sc_trace(mVcdFile, zext_ln218_fu_580_p1, "zext_ln218_fu_580_p1");
    sc_trace(mVcdFile, zext_ln219_fu_590_p1, "zext_ln219_fu_590_p1");
    sc_trace(mVcdFile, zext_ln210_fu_609_p1, "zext_ln210_fu_609_p1");
    sc_trace(mVcdFile, zext_ln211_fu_613_p1, "zext_ln211_fu_613_p1");
    sc_trace(mVcdFile, zext_ln220_fu_623_p1, "zext_ln220_fu_623_p1");
    sc_trace(mVcdFile, zext_ln221_fu_633_p1, "zext_ln221_fu_633_p1");
    sc_trace(mVcdFile, zext_ln212_fu_638_p1, "zext_ln212_fu_638_p1");
    sc_trace(mVcdFile, zext_ln213_fu_642_p1, "zext_ln213_fu_642_p1");
    sc_trace(mVcdFile, zext_ln218_1_fu_665_p1, "zext_ln218_1_fu_665_p1");
    sc_trace(mVcdFile, zext_ln219_1_fu_681_p1, "zext_ln219_1_fu_681_p1");
    sc_trace(mVcdFile, zext_ln220_1_fu_710_p1, "zext_ln220_1_fu_710_p1");
    sc_trace(mVcdFile, zext_ln221_1_fu_727_p1, "zext_ln221_1_fu_727_p1");
    sc_trace(mVcdFile, xor_ln218_fu_658_p2, "xor_ln218_fu_658_p2");
    sc_trace(mVcdFile, xor_ln219_fu_669_p2, "xor_ln219_fu_669_p2");
    sc_trace(mVcdFile, xor_ln220_fu_698_p2, "xor_ln220_fu_698_p2");
    sc_trace(mVcdFile, xor_ln221_fu_715_p2, "xor_ln221_fu_715_p2");
    sc_trace(mVcdFile, trunc_ln160_fu_401_p1, "trunc_ln160_fu_401_p1");
    sc_trace(mVcdFile, or_ln161_fu_418_p2, "or_ln161_fu_418_p2");
    sc_trace(mVcdFile, or_ln162_fu_429_p2, "or_ln162_fu_429_p2");
    sc_trace(mVcdFile, or_ln163_fu_439_p2, "or_ln163_fu_439_p2");
    sc_trace(mVcdFile, add_ln171_fu_467_p2, "add_ln171_fu_467_p2");
    sc_trace(mVcdFile, add_ln172_fu_478_p2, "add_ln172_fu_478_p2");
    sc_trace(mVcdFile, trunc_ln167_fu_455_p1, "trunc_ln167_fu_455_p1");
    sc_trace(mVcdFile, lshr_ln_fu_495_p4, "lshr_ln_fu_495_p4");
    sc_trace(mVcdFile, add_ln173_fu_516_p2, "add_ln173_fu_516_p2");
    sc_trace(mVcdFile, add_ln174_fu_526_p2, "add_ln174_fu_526_p2");
    sc_trace(mVcdFile, tempa_0_fu_556_p2, "tempa_0_fu_556_p2");
    sc_trace(mVcdFile, add_ln218_fu_575_p2, "add_ln218_fu_575_p2");
    sc_trace(mVcdFile, add_ln219_fu_585_p2, "add_ln219_fu_585_p2");
    sc_trace(mVcdFile, add_ln220_fu_618_p2, "add_ln220_fu_618_p2");
    sc_trace(mVcdFile, add_ln221_fu_628_p2, "add_ln221_fu_628_p2");
    sc_trace(mVcdFile, tempa_0_4_fu_652_p3, "tempa_0_4_fu_652_p3");
    sc_trace(mVcdFile, tempa_1_4_fu_646_p3, "tempa_1_4_fu_646_p3");
    sc_trace(mVcdFile, or_ln219_fu_676_p2, "or_ln219_fu_676_p2");
    sc_trace(mVcdFile, tempa_2_4_fu_692_p3, "tempa_2_4_fu_692_p3");
    sc_trace(mVcdFile, or_ln220_fu_705_p2, "or_ln220_fu_705_p2");
    sc_trace(mVcdFile, tempa_3_4_fu_686_p3, "tempa_3_4_fu_686_p3");
    sc_trace(mVcdFile, or_ln221_fu_722_p2, "or_ln221_fu_722_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

KeyExpansion::~KeyExpansion() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sbox_U;
    delete Rcon_U;
}

void KeyExpansion::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_358 = i_reg_742.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_358 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_369 = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_1_reg_369 = i_17_fu_732_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Rcon_load_reg_861 = Rcon_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_742 = i_fu_395_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln158_reg_738 = icmp_ln158_fu_389_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln167_fu_449_p2.read()))) {
        icmp_ln178_reg_820 = icmp_ln178_fu_489_p2.read();
        icmp_ln206_reg_833 = icmp_ln206_fu_510_p2.read();
        j_reg_796 = j_fu_459_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        reg_381 = RoundKey_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        reg_385 = RoundKey_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln158_fu_389_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_747 = shl_ln_fu_405_p3.read();
        zext_ln160_reg_753 = zext_ln160_fu_413_p1.read();
        zext_ln161_reg_763 = zext_ln161_fu_424_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tempa_0_2_reg_882 = tempa_0_2_fu_568_p3.read();
        tempa_3_2_reg_876 = tempa_3_2_fu_561_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tempa_1_2_reg_904 = tempa_1_2_fu_602_p3.read();
        tempa_2_2_reg_898 = tempa_2_2_fu_595_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0))) {
        zext_ln162_reg_773 = zext_ln162_fu_434_p1.read();
        zext_ln163_reg_783 = zext_ln163_fu_444_p1.read();
    }
}

void KeyExpansion::thread_Key_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            Key_address0 =  (sc_lv<5>) (zext_ln162_fu_434_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            Key_address0 =  (sc_lv<5>) (zext_ln160_fu_413_p1.read());
        } else {
            Key_address0 = "XXXXX";
        }
    } else {
        Key_address0 = "XXXXX";
    }
}

void KeyExpansion::thread_Key_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            Key_address1 =  (sc_lv<5>) (zext_ln163_fu_444_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            Key_address1 =  (sc_lv<5>) (zext_ln161_fu_424_p1.read());
        } else {
            Key_address1 = "XXXXX";
        }
    } else {
        Key_address1 = "XXXXX";
    }
}

void KeyExpansion::thread_Key_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        Key_ce0 = ap_const_logic_1;
    } else {
        Key_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Key_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        Key_ce1 = ap_const_logic_1;
    } else {
        Key_ce1 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Rcon_address0() {
    Rcon_address0 =  (sc_lv<4>) (zext_ln203_fu_505_p1.read());
}

void KeyExpansion::thread_Rcon_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Rcon_ce0 = ap_const_logic_1;
    } else {
        Rcon_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln220_1_fu_710_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln218_1_fu_665_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln220_fu_623_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln218_fu_580_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln173_fu_521_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln171_fu_473_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln162_reg_773.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        RoundKey_address0 =  (sc_lv<8>) (zext_ln160_reg_753.read());
    } else {
        RoundKey_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln221_1_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln219_1_fu_681_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln221_fu_633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln219_fu_590_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln174_fu_531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln172_fu_484_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln163_reg_783.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        RoundKey_address1 =  (sc_lv<8>) (zext_ln161_reg_763.read());
    } else {
        RoundKey_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        RoundKey_ce0 = ap_const_logic_1;
    } else {
        RoundKey_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        RoundKey_ce1 = ap_const_logic_1;
    } else {
        RoundKey_ce1 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        RoundKey_d0 = xor_ln220_fu_698_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        RoundKey_d0 = xor_ln218_fu_658_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)))) {
        RoundKey_d0 = Key_q0.read();
    } else {
        RoundKey_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        RoundKey_d1 = xor_ln221_fu_715_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        RoundKey_d1 = xor_ln219_fu_669_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)))) {
        RoundKey_d1 = Key_q1.read();
    } else {
        RoundKey_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0)))) {
        RoundKey_we0 = ap_const_logic_1;
    } else {
        RoundKey_we0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0)))) {
        RoundKey_we1 = ap_const_logic_1;
    } else {
        RoundKey_we1 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_add_ln171_fu_467_p2() {
    add_ln171_fu_467_p2 = (!ap_const_lv8_FC.is_01() || !j_fu_459_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FC) + sc_biguint<8>(j_fu_459_p3.read()));
}

void KeyExpansion::thread_add_ln172_fu_478_p2() {
    add_ln172_fu_478_p2 = (!ap_const_lv8_FD.is_01() || !j_fu_459_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FD) + sc_biguint<8>(j_fu_459_p3.read()));
}

void KeyExpansion::thread_add_ln173_fu_516_p2() {
    add_ln173_fu_516_p2 = (!ap_const_lv8_FE.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FE) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_add_ln174_fu_526_p2() {
    add_ln174_fu_526_p2 = (!ap_const_lv8_FF.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FF) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_add_ln218_fu_575_p2() {
    add_ln218_fu_575_p2 = (!ap_const_lv8_E0.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_E0) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_add_ln219_fu_585_p2() {
    add_ln219_fu_585_p2 = (!ap_const_lv8_E1.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_E1) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_add_ln220_fu_618_p2() {
    add_ln220_fu_618_p2 = (!ap_const_lv8_E2.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_E2) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_add_ln221_fu_628_p2() {
    add_ln221_fu_628_p2 = (!ap_const_lv8_E3.is_01() || !j_reg_796.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_E3) + sc_biguint<8>(j_reg_796.read()));
}

void KeyExpansion::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void KeyExpansion::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void KeyExpansion::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeyExpansion::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[8];
}

void KeyExpansion::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void KeyExpansion::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void KeyExpansion::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void KeyExpansion::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void KeyExpansion::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void KeyExpansion::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void KeyExpansion::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void KeyExpansion::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void KeyExpansion::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln158_fu_389_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void KeyExpansion::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_phi_mux_i_0_phi_fu_362_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln158_reg_738.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_362_p4 = i_reg_742.read();
    } else {
        ap_phi_mux_i_0_phi_fu_362_p4 = i_0_reg_358.read();
    }
}

void KeyExpansion::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeyExpansion::thread_i_17_fu_732_p2() {
    i_17_fu_732_p2 = (!ap_const_lv6_1.is_01() || !i_1_reg_369.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(i_1_reg_369.read()));
}

void KeyExpansion::thread_i_fu_395_p2() {
    i_fu_395_p2 = (!ap_phi_mux_i_0_phi_fu_362_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_phi_fu_362_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void KeyExpansion::thread_icmp_ln158_fu_389_p2() {
    icmp_ln158_fu_389_p2 = (!ap_phi_mux_i_0_phi_fu_362_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_362_p4.read() == ap_const_lv4_8);
}

void KeyExpansion::thread_icmp_ln167_fu_449_p2() {
    icmp_ln167_fu_449_p2 = (!i_1_reg_369.read().is_01() || !ap_const_lv6_3C.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_369.read() == ap_const_lv6_3C);
}

void KeyExpansion::thread_icmp_ln178_fu_489_p2() {
    icmp_ln178_fu_489_p2 = (!trunc_ln167_fu_455_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln167_fu_455_p1.read() == ap_const_lv3_0);
}

void KeyExpansion::thread_icmp_ln206_fu_510_p2() {
    icmp_ln206_fu_510_p2 = (!trunc_ln167_fu_455_p1.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln167_fu_455_p1.read() == ap_const_lv3_4);
}

void KeyExpansion::thread_j_fu_459_p3() {
    j_fu_459_p3 = esl_concat<6,2>(i_1_reg_369.read(), ap_const_lv2_0);
}

void KeyExpansion::thread_lshr_ln_fu_495_p4() {
    lshr_ln_fu_495_p4 = i_1_reg_369.read().range(5, 3);
}

void KeyExpansion::thread_or_ln161_fu_418_p2() {
    or_ln161_fu_418_p2 = (shl_ln_fu_405_p3.read() | ap_const_lv5_1);
}

void KeyExpansion::thread_or_ln162_fu_429_p2() {
    or_ln162_fu_429_p2 = (shl_ln_reg_747.read() | ap_const_lv5_2);
}

void KeyExpansion::thread_or_ln163_fu_439_p2() {
    or_ln163_fu_439_p2 = (shl_ln_reg_747.read() | ap_const_lv5_3);
}

void KeyExpansion::thread_or_ln219_fu_676_p2() {
    or_ln219_fu_676_p2 = (j_reg_796.read() | ap_const_lv8_1);
}

void KeyExpansion::thread_or_ln220_fu_705_p2() {
    or_ln220_fu_705_p2 = (j_reg_796.read() | ap_const_lv8_2);
}

void KeyExpansion::thread_or_ln221_fu_722_p2() {
    or_ln221_fu_722_p2 = (j_reg_796.read() | ap_const_lv8_3);
}

void KeyExpansion::thread_sbox_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sbox_address0 =  (sc_lv<8>) (zext_ln212_fu_638_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sbox_address0 =  (sc_lv<8>) (zext_ln210_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sbox_address0 =  (sc_lv<8>) (zext_ln198_fu_546_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sbox_address0 =  (sc_lv<8>) (zext_ln197_fu_536_p1.read());
    } else {
        sbox_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_sbox_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sbox_address1 =  (sc_lv<8>) (zext_ln213_fu_642_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sbox_address1 =  (sc_lv<8>) (zext_ln211_fu_613_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sbox_address1 =  (sc_lv<8>) (zext_ln199_fu_551_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sbox_address1 =  (sc_lv<8>) (zext_ln200_fu_541_p1.read());
    } else {
        sbox_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_sbox_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        sbox_ce0 = ap_const_logic_1;
    } else {
        sbox_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_sbox_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        sbox_ce1 = ap_const_logic_1;
    } else {
        sbox_ce1 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_shl_ln_fu_405_p3() {
    shl_ln_fu_405_p3 = esl_concat<3,2>(trunc_ln160_fu_401_p1.read(), ap_const_lv2_0);
}

void KeyExpansion::thread_tempa_0_2_fu_568_p3() {
    tempa_0_2_fu_568_p3 = (!icmp_ln178_reg_820.read()[0].is_01())? sc_lv<8>(): ((icmp_ln178_reg_820.read()[0].to_bool())? tempa_0_fu_556_p2.read(): reg_381.read());
}

void KeyExpansion::thread_tempa_0_4_fu_652_p3() {
    tempa_0_4_fu_652_p3 = (!icmp_ln206_reg_833.read()[0].is_01())? sc_lv<8>(): ((icmp_ln206_reg_833.read()[0].to_bool())? sbox_q0.read(): tempa_0_2_reg_882.read());
}

void KeyExpansion::thread_tempa_0_fu_556_p2() {
    tempa_0_fu_556_p2 = (Rcon_load_reg_861.read() ^ sbox_q0.read());
}

void KeyExpansion::thread_tempa_1_2_fu_602_p3() {
    tempa_1_2_fu_602_p3 = (!icmp_ln178_reg_820.read()[0].is_01())? sc_lv<8>(): ((icmp_ln178_reg_820.read()[0].to_bool())? sbox_q0.read(): reg_385.read());
}

void KeyExpansion::thread_tempa_1_4_fu_646_p3() {
    tempa_1_4_fu_646_p3 = (!icmp_ln206_reg_833.read()[0].is_01())? sc_lv<8>(): ((icmp_ln206_reg_833.read()[0].to_bool())? sbox_q1.read(): tempa_1_2_reg_904.read());
}

void KeyExpansion::thread_tempa_2_2_fu_595_p3() {
    tempa_2_2_fu_595_p3 = (!icmp_ln178_reg_820.read()[0].is_01())? sc_lv<8>(): ((icmp_ln178_reg_820.read()[0].to_bool())? sbox_q1.read(): reg_381.read());
}

void KeyExpansion::thread_tempa_2_4_fu_692_p3() {
    tempa_2_4_fu_692_p3 = (!icmp_ln206_reg_833.read()[0].is_01())? sc_lv<8>(): ((icmp_ln206_reg_833.read()[0].to_bool())? sbox_q0.read(): tempa_2_2_reg_898.read());
}

void KeyExpansion::thread_tempa_3_2_fu_561_p3() {
    tempa_3_2_fu_561_p3 = (!icmp_ln178_reg_820.read()[0].is_01())? sc_lv<8>(): ((icmp_ln178_reg_820.read()[0].to_bool())? sbox_q1.read(): RoundKey_q1.read());
}

void KeyExpansion::thread_tempa_3_4_fu_686_p3() {
    tempa_3_4_fu_686_p3 = (!icmp_ln206_reg_833.read()[0].is_01())? sc_lv<8>(): ((icmp_ln206_reg_833.read()[0].to_bool())? sbox_q1.read(): tempa_3_2_reg_876.read());
}

void KeyExpansion::thread_trunc_ln160_fu_401_p1() {
    trunc_ln160_fu_401_p1 = ap_phi_mux_i_0_phi_fu_362_p4.read().range(3-1, 0);
}

void KeyExpansion::thread_trunc_ln167_fu_455_p1() {
    trunc_ln167_fu_455_p1 = i_1_reg_369.read().range(3-1, 0);
}

void KeyExpansion::thread_xor_ln218_fu_658_p2() {
    xor_ln218_fu_658_p2 = (reg_381.read() ^ tempa_0_4_fu_652_p3.read());
}

void KeyExpansion::thread_xor_ln219_fu_669_p2() {
    xor_ln219_fu_669_p2 = (reg_385.read() ^ tempa_1_4_fu_646_p3.read());
}

void KeyExpansion::thread_xor_ln220_fu_698_p2() {
    xor_ln220_fu_698_p2 = (reg_381.read() ^ tempa_2_4_fu_692_p3.read());
}

void KeyExpansion::thread_xor_ln221_fu_715_p2() {
    xor_ln221_fu_715_p2 = (reg_385.read() ^ tempa_3_4_fu_686_p3.read());
}

void KeyExpansion::thread_zext_ln160_fu_413_p1() {
    zext_ln160_fu_413_p1 = esl_zext<64,5>(shl_ln_fu_405_p3.read());
}

void KeyExpansion::thread_zext_ln161_fu_424_p1() {
    zext_ln161_fu_424_p1 = esl_zext<64,5>(or_ln161_fu_418_p2.read());
}

void KeyExpansion::thread_zext_ln162_fu_434_p1() {
    zext_ln162_fu_434_p1 = esl_zext<64,5>(or_ln162_fu_429_p2.read());
}

void KeyExpansion::thread_zext_ln163_fu_444_p1() {
    zext_ln163_fu_444_p1 = esl_zext<64,5>(or_ln163_fu_439_p2.read());
}

void KeyExpansion::thread_zext_ln171_fu_473_p1() {
    zext_ln171_fu_473_p1 = esl_zext<64,8>(add_ln171_fu_467_p2.read());
}

void KeyExpansion::thread_zext_ln172_fu_484_p1() {
    zext_ln172_fu_484_p1 = esl_zext<64,8>(add_ln172_fu_478_p2.read());
}

void KeyExpansion::thread_zext_ln173_fu_521_p1() {
    zext_ln173_fu_521_p1 = esl_zext<64,8>(add_ln173_fu_516_p2.read());
}

void KeyExpansion::thread_zext_ln174_fu_531_p1() {
    zext_ln174_fu_531_p1 = esl_zext<64,8>(add_ln174_fu_526_p2.read());
}

void KeyExpansion::thread_zext_ln197_fu_536_p1() {
    zext_ln197_fu_536_p1 = esl_zext<64,8>(RoundKey_q1.read());
}

void KeyExpansion::thread_zext_ln198_fu_546_p1() {
    zext_ln198_fu_546_p1 = esl_zext<64,8>(RoundKey_q0.read());
}

void KeyExpansion::thread_zext_ln199_fu_551_p1() {
    zext_ln199_fu_551_p1 = esl_zext<64,8>(RoundKey_q1.read());
}

void KeyExpansion::thread_zext_ln200_fu_541_p1() {
    zext_ln200_fu_541_p1 = esl_zext<64,8>(RoundKey_q0.read());
}

void KeyExpansion::thread_zext_ln203_fu_505_p1() {
    zext_ln203_fu_505_p1 = esl_zext<64,3>(lshr_ln_fu_495_p4.read());
}

void KeyExpansion::thread_zext_ln210_fu_609_p1() {
    zext_ln210_fu_609_p1 = esl_zext<64,8>(tempa_0_2_reg_882.read());
}

void KeyExpansion::thread_zext_ln211_fu_613_p1() {
    zext_ln211_fu_613_p1 = esl_zext<64,8>(tempa_1_2_fu_602_p3.read());
}

void KeyExpansion::thread_zext_ln212_fu_638_p1() {
    zext_ln212_fu_638_p1 = esl_zext<64,8>(tempa_2_2_reg_898.read());
}

void KeyExpansion::thread_zext_ln213_fu_642_p1() {
    zext_ln213_fu_642_p1 = esl_zext<64,8>(tempa_3_2_reg_876.read());
}

void KeyExpansion::thread_zext_ln218_1_fu_665_p1() {
    zext_ln218_1_fu_665_p1 = esl_zext<64,8>(j_reg_796.read());
}

void KeyExpansion::thread_zext_ln218_fu_580_p1() {
    zext_ln218_fu_580_p1 = esl_zext<64,8>(add_ln218_fu_575_p2.read());
}

void KeyExpansion::thread_zext_ln219_1_fu_681_p1() {
    zext_ln219_1_fu_681_p1 = esl_zext<64,8>(or_ln219_fu_676_p2.read());
}

void KeyExpansion::thread_zext_ln219_fu_590_p1() {
    zext_ln219_fu_590_p1 = esl_zext<64,8>(add_ln219_fu_585_p2.read());
}

void KeyExpansion::thread_zext_ln220_1_fu_710_p1() {
    zext_ln220_1_fu_710_p1 = esl_zext<64,8>(or_ln220_fu_705_p2.read());
}

void KeyExpansion::thread_zext_ln220_fu_623_p1() {
    zext_ln220_fu_623_p1 = esl_zext<64,8>(add_ln220_fu_618_p2.read());
}

void KeyExpansion::thread_zext_ln221_1_fu_727_p1() {
    zext_ln221_1_fu_727_p1 = esl_zext<64,8>(or_ln221_fu_722_p2.read());
}

void KeyExpansion::thread_zext_ln221_fu_633_p1() {
    zext_ln221_fu_633_p1 = esl_zext<64,8>(add_ln221_fu_628_p2.read());
}

void KeyExpansion::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln158_fu_389_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln158_fu_389_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln167_fu_449_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

